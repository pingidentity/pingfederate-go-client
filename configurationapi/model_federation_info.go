/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the FederationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FederationInfo{}

// FederationInfo Federation Info.
type FederationInfo struct {
	// The fully qualified host name, port, and path (if applicable) on which the PingFederate server runs.
	BaseUrl *string `json:"baseUrl,omitempty" tfsdk:"base_url"`
	// This ID defines your organization as the entity operating the server for SAML 2.0 transactions. It is usually defined as an organization's URL or a DNS address; for example: pingidentity.com. The SAML SourceID used for artifact resolution is derived from this ID using SHA1.
	Saml2EntityId *string `json:"saml2EntityId,omitempty" tfsdk:"saml2_entity_id"`
	// This property has been deprecated and no longer used
	AutoConnectEntityId *string `json:"autoConnectEntityId,omitempty" tfsdk:"auto_connect_entity_id"`
	// This ID identifies your federation server for SAML 1.x transactions. As with SAML 2.0, it is usually defined as an organization's URL or a DNS address. The SourceID used for artifact resolution is derived from this ID using SHA1.
	Saml1xIssuerId *string `json:"saml1xIssuerId,omitempty" tfsdk:"saml1x_issuer_id"`
	// If supplied, the Source ID value entered here is used for SAML 1.x, instead of being derived from the SAML 1.x Issuer/Audience.
	Saml1xSourceId *string `json:"saml1xSourceId,omitempty" tfsdk:"saml1x_source_id"`
	// The URI of the realm associated with the PingFederate server. A realm represents a single unit of security administration or trust.
	WsfedRealm *string `json:"wsfedRealm,omitempty" tfsdk:"wsfed_realm"`
}

// NewFederationInfo instantiates a new FederationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFederationInfo() *FederationInfo {
	this := FederationInfo{}
	return &this
}

// NewFederationInfoWithDefaults instantiates a new FederationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFederationInfoWithDefaults() *FederationInfo {
	this := FederationInfo{}
	return &this
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *FederationInfo) GetBaseUrl() string {
	if o == nil || IsNil(o.BaseUrl) {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationInfo) GetBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BaseUrl) {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *FederationInfo) HasBaseUrl() bool {
	if o != nil && !IsNil(o.BaseUrl) {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *FederationInfo) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetSaml2EntityId returns the Saml2EntityId field value if set, zero value otherwise.
func (o *FederationInfo) GetSaml2EntityId() string {
	if o == nil || IsNil(o.Saml2EntityId) {
		var ret string
		return ret
	}
	return *o.Saml2EntityId
}

// GetSaml2EntityIdOk returns a tuple with the Saml2EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationInfo) GetSaml2EntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.Saml2EntityId) {
		return nil, false
	}
	return o.Saml2EntityId, true
}

// HasSaml2EntityId returns a boolean if a field has been set.
func (o *FederationInfo) HasSaml2EntityId() bool {
	if o != nil && !IsNil(o.Saml2EntityId) {
		return true
	}

	return false
}

// SetSaml2EntityId gets a reference to the given string and assigns it to the Saml2EntityId field.
func (o *FederationInfo) SetSaml2EntityId(v string) {
	o.Saml2EntityId = &v
}

// GetAutoConnectEntityId returns the AutoConnectEntityId field value if set, zero value otherwise.
func (o *FederationInfo) GetAutoConnectEntityId() string {
	if o == nil || IsNil(o.AutoConnectEntityId) {
		var ret string
		return ret
	}
	return *o.AutoConnectEntityId
}

// GetAutoConnectEntityIdOk returns a tuple with the AutoConnectEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationInfo) GetAutoConnectEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.AutoConnectEntityId) {
		return nil, false
	}
	return o.AutoConnectEntityId, true
}

// HasAutoConnectEntityId returns a boolean if a field has been set.
func (o *FederationInfo) HasAutoConnectEntityId() bool {
	if o != nil && !IsNil(o.AutoConnectEntityId) {
		return true
	}

	return false
}

// SetAutoConnectEntityId gets a reference to the given string and assigns it to the AutoConnectEntityId field.
func (o *FederationInfo) SetAutoConnectEntityId(v string) {
	o.AutoConnectEntityId = &v
}

// GetSaml1xIssuerId returns the Saml1xIssuerId field value if set, zero value otherwise.
func (o *FederationInfo) GetSaml1xIssuerId() string {
	if o == nil || IsNil(o.Saml1xIssuerId) {
		var ret string
		return ret
	}
	return *o.Saml1xIssuerId
}

// GetSaml1xIssuerIdOk returns a tuple with the Saml1xIssuerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationInfo) GetSaml1xIssuerIdOk() (*string, bool) {
	if o == nil || IsNil(o.Saml1xIssuerId) {
		return nil, false
	}
	return o.Saml1xIssuerId, true
}

// HasSaml1xIssuerId returns a boolean if a field has been set.
func (o *FederationInfo) HasSaml1xIssuerId() bool {
	if o != nil && !IsNil(o.Saml1xIssuerId) {
		return true
	}

	return false
}

// SetSaml1xIssuerId gets a reference to the given string and assigns it to the Saml1xIssuerId field.
func (o *FederationInfo) SetSaml1xIssuerId(v string) {
	o.Saml1xIssuerId = &v
}

// GetSaml1xSourceId returns the Saml1xSourceId field value if set, zero value otherwise.
func (o *FederationInfo) GetSaml1xSourceId() string {
	if o == nil || IsNil(o.Saml1xSourceId) {
		var ret string
		return ret
	}
	return *o.Saml1xSourceId
}

// GetSaml1xSourceIdOk returns a tuple with the Saml1xSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationInfo) GetSaml1xSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.Saml1xSourceId) {
		return nil, false
	}
	return o.Saml1xSourceId, true
}

// HasSaml1xSourceId returns a boolean if a field has been set.
func (o *FederationInfo) HasSaml1xSourceId() bool {
	if o != nil && !IsNil(o.Saml1xSourceId) {
		return true
	}

	return false
}

// SetSaml1xSourceId gets a reference to the given string and assigns it to the Saml1xSourceId field.
func (o *FederationInfo) SetSaml1xSourceId(v string) {
	o.Saml1xSourceId = &v
}

// GetWsfedRealm returns the WsfedRealm field value if set, zero value otherwise.
func (o *FederationInfo) GetWsfedRealm() string {
	if o == nil || IsNil(o.WsfedRealm) {
		var ret string
		return ret
	}
	return *o.WsfedRealm
}

// GetWsfedRealmOk returns a tuple with the WsfedRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationInfo) GetWsfedRealmOk() (*string, bool) {
	if o == nil || IsNil(o.WsfedRealm) {
		return nil, false
	}
	return o.WsfedRealm, true
}

// HasWsfedRealm returns a boolean if a field has been set.
func (o *FederationInfo) HasWsfedRealm() bool {
	if o != nil && !IsNil(o.WsfedRealm) {
		return true
	}

	return false
}

// SetWsfedRealm gets a reference to the given string and assigns it to the WsfedRealm field.
func (o *FederationInfo) SetWsfedRealm(v string) {
	o.WsfedRealm = &v
}

func (o FederationInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FederationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseUrl) {
		toSerialize["baseUrl"] = o.BaseUrl
	}
	if !IsNil(o.Saml2EntityId) {
		toSerialize["saml2EntityId"] = o.Saml2EntityId
	}
	if !IsNil(o.AutoConnectEntityId) {
		toSerialize["autoConnectEntityId"] = o.AutoConnectEntityId
	}
	if !IsNil(o.Saml1xIssuerId) {
		toSerialize["saml1xIssuerId"] = o.Saml1xIssuerId
	}
	if !IsNil(o.Saml1xSourceId) {
		toSerialize["saml1xSourceId"] = o.Saml1xSourceId
	}
	if !IsNil(o.WsfedRealm) {
		toSerialize["wsfedRealm"] = o.WsfedRealm
	}
	return toSerialize, nil
}

type NullableFederationInfo struct {
	value *FederationInfo
	isSet bool
}

func (v NullableFederationInfo) Get() *FederationInfo {
	return v.value
}

func (v *NullableFederationInfo) Set(val *FederationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFederationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFederationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFederationInfo(val *FederationInfo) *NullableFederationInfo {
	return &NullableFederationInfo{value: val, isSet: true}
}

func (v NullableFederationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFederationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
