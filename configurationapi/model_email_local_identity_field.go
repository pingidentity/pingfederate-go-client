/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the EmailLocalIdentityField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailLocalIdentityField{}

// EmailLocalIdentityField struct for EmailLocalIdentityField
type EmailLocalIdentityField struct {
	LocalIdentityField
}

// NewEmailLocalIdentityField instantiates a new EmailLocalIdentityField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailLocalIdentityField(type_ string, id string, label string) *EmailLocalIdentityField {
	this := EmailLocalIdentityField{}
	this.Type = type_
	this.Id = id
	this.Label = label
	return &this
}

// NewEmailLocalIdentityFieldWithDefaults instantiates a new EmailLocalIdentityField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailLocalIdentityFieldWithDefaults() *EmailLocalIdentityField {
	this := EmailLocalIdentityField{}
	return &this
}

func (o EmailLocalIdentityField) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailLocalIdentityField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedLocalIdentityField, errLocalIdentityField := json.Marshal(o.LocalIdentityField)
	if errLocalIdentityField != nil {
		return map[string]interface{}{}, errLocalIdentityField
	}
	errLocalIdentityField = json.Unmarshal([]byte(serializedLocalIdentityField), &toSerialize)
	if errLocalIdentityField != nil {
		return map[string]interface{}{}, errLocalIdentityField
	}
	return toSerialize, nil
}

type NullableEmailLocalIdentityField struct {
	value *EmailLocalIdentityField
	isSet bool
}

func (v NullableEmailLocalIdentityField) Get() *EmailLocalIdentityField {
	return v.value
}

func (v *NullableEmailLocalIdentityField) Set(val *EmailLocalIdentityField) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailLocalIdentityField) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailLocalIdentityField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailLocalIdentityField(val *EmailLocalIdentityField) *NullableEmailLocalIdentityField {
	return &NullableEmailLocalIdentityField{value: val, isSet: true}
}

func (v NullableEmailLocalIdentityField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailLocalIdentityField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
