/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AuthorizationDetailProcessorDescriptorAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationDetailProcessorDescriptorAllOf{}

// AuthorizationDetailProcessorDescriptorAllOf An authorization detail processor plugin descriptor.
type AuthorizationDetailProcessorDescriptorAllOf struct {
	// The supported authorization detail types supported by this authorization detail processor plugin type. The default set is populated with 'ALL_AUTHORIZATION_DETAIL_TYPES' denoting that the plugin supports all authorization detail types.
	SupportedAuthorizationDetailTypes []string `json:"supportedAuthorizationDetailTypes,omitempty" tfsdk:"supported_authorization_detail_types"`
}

// NewAuthorizationDetailProcessorDescriptorAllOf instantiates a new AuthorizationDetailProcessorDescriptorAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationDetailProcessorDescriptorAllOf() *AuthorizationDetailProcessorDescriptorAllOf {
	this := AuthorizationDetailProcessorDescriptorAllOf{}
	return &this
}

// NewAuthorizationDetailProcessorDescriptorAllOfWithDefaults instantiates a new AuthorizationDetailProcessorDescriptorAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationDetailProcessorDescriptorAllOfWithDefaults() *AuthorizationDetailProcessorDescriptorAllOf {
	this := AuthorizationDetailProcessorDescriptorAllOf{}
	return &this
}

// GetSupportedAuthorizationDetailTypes returns the SupportedAuthorizationDetailTypes field value if set, zero value otherwise.
func (o *AuthorizationDetailProcessorDescriptorAllOf) GetSupportedAuthorizationDetailTypes() []string {
	if o == nil || IsNil(o.SupportedAuthorizationDetailTypes) {
		var ret []string
		return ret
	}
	return o.SupportedAuthorizationDetailTypes
}

// GetSupportedAuthorizationDetailTypesOk returns a tuple with the SupportedAuthorizationDetailTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationDetailProcessorDescriptorAllOf) GetSupportedAuthorizationDetailTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedAuthorizationDetailTypes) {
		return nil, false
	}
	return o.SupportedAuthorizationDetailTypes, true
}

// HasSupportedAuthorizationDetailTypes returns a boolean if a field has been set.
func (o *AuthorizationDetailProcessorDescriptorAllOf) HasSupportedAuthorizationDetailTypes() bool {
	if o != nil && !IsNil(o.SupportedAuthorizationDetailTypes) {
		return true
	}

	return false
}

// SetSupportedAuthorizationDetailTypes gets a reference to the given []string and assigns it to the SupportedAuthorizationDetailTypes field.
func (o *AuthorizationDetailProcessorDescriptorAllOf) SetSupportedAuthorizationDetailTypes(v []string) {
	o.SupportedAuthorizationDetailTypes = v
}

func (o AuthorizationDetailProcessorDescriptorAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationDetailProcessorDescriptorAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportedAuthorizationDetailTypes) {
		toSerialize["supportedAuthorizationDetailTypes"] = o.SupportedAuthorizationDetailTypes
	}
	return toSerialize, nil
}

type NullableAuthorizationDetailProcessorDescriptorAllOf struct {
	value *AuthorizationDetailProcessorDescriptorAllOf
	isSet bool
}

func (v NullableAuthorizationDetailProcessorDescriptorAllOf) Get() *AuthorizationDetailProcessorDescriptorAllOf {
	return v.value
}

func (v *NullableAuthorizationDetailProcessorDescriptorAllOf) Set(val *AuthorizationDetailProcessorDescriptorAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationDetailProcessorDescriptorAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationDetailProcessorDescriptorAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationDetailProcessorDescriptorAllOf(val *AuthorizationDetailProcessorDescriptorAllOf) *NullableAuthorizationDetailProcessorDescriptorAllOf {
	return &NullableAuthorizationDetailProcessorDescriptorAllOf{value: val, isSet: true}
}

func (v NullableAuthorizationDetailProcessorDescriptorAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationDetailProcessorDescriptorAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
