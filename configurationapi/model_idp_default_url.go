/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the IdpDefaultUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdpDefaultUrl{}

// IdpDefaultUrl IDP Default URL settings.
type IdpDefaultUrl struct {
	// Prompt user to confirm Single Logout (SLO).
	ConfirmIdpSlo *bool `json:"confirmIdpSlo,omitempty" tfsdk:"confirm_idp_slo"`
	// Provide the default URL you would like to send the user to when Single Logout has succeeded.
	IdpSloSuccessUrl *string `json:"idpSloSuccessUrl,omitempty" tfsdk:"idp_slo_success_url"`
	// Provide the error text displayed in a user's browser when an SSO operation fails.
	IdpErrorMsg string `json:"idpErrorMsg" tfsdk:"idp_error_msg"`
}

// NewIdpDefaultUrl instantiates a new IdpDefaultUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdpDefaultUrl(idpErrorMsg string) *IdpDefaultUrl {
	this := IdpDefaultUrl{}
	this.IdpErrorMsg = idpErrorMsg
	return &this
}

// NewIdpDefaultUrlWithDefaults instantiates a new IdpDefaultUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdpDefaultUrlWithDefaults() *IdpDefaultUrl {
	this := IdpDefaultUrl{}
	return &this
}

// GetConfirmIdpSlo returns the ConfirmIdpSlo field value if set, zero value otherwise.
func (o *IdpDefaultUrl) GetConfirmIdpSlo() bool {
	if o == nil || IsNil(o.ConfirmIdpSlo) {
		var ret bool
		return ret
	}
	return *o.ConfirmIdpSlo
}

// GetConfirmIdpSloOk returns a tuple with the ConfirmIdpSlo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpDefaultUrl) GetConfirmIdpSloOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfirmIdpSlo) {
		return nil, false
	}
	return o.ConfirmIdpSlo, true
}

// HasConfirmIdpSlo returns a boolean if a field has been set.
func (o *IdpDefaultUrl) HasConfirmIdpSlo() bool {
	if o != nil && !IsNil(o.ConfirmIdpSlo) {
		return true
	}

	return false
}

// SetConfirmIdpSlo gets a reference to the given bool and assigns it to the ConfirmIdpSlo field.
func (o *IdpDefaultUrl) SetConfirmIdpSlo(v bool) {
	o.ConfirmIdpSlo = &v
}

// GetIdpSloSuccessUrl returns the IdpSloSuccessUrl field value if set, zero value otherwise.
func (o *IdpDefaultUrl) GetIdpSloSuccessUrl() string {
	if o == nil || IsNil(o.IdpSloSuccessUrl) {
		var ret string
		return ret
	}
	return *o.IdpSloSuccessUrl
}

// GetIdpSloSuccessUrlOk returns a tuple with the IdpSloSuccessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpDefaultUrl) GetIdpSloSuccessUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IdpSloSuccessUrl) {
		return nil, false
	}
	return o.IdpSloSuccessUrl, true
}

// HasIdpSloSuccessUrl returns a boolean if a field has been set.
func (o *IdpDefaultUrl) HasIdpSloSuccessUrl() bool {
	if o != nil && !IsNil(o.IdpSloSuccessUrl) {
		return true
	}

	return false
}

// SetIdpSloSuccessUrl gets a reference to the given string and assigns it to the IdpSloSuccessUrl field.
func (o *IdpDefaultUrl) SetIdpSloSuccessUrl(v string) {
	o.IdpSloSuccessUrl = &v
}

// GetIdpErrorMsg returns the IdpErrorMsg field value
func (o *IdpDefaultUrl) GetIdpErrorMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpErrorMsg
}

// GetIdpErrorMsgOk returns a tuple with the IdpErrorMsg field value
// and a boolean to check if the value has been set.
func (o *IdpDefaultUrl) GetIdpErrorMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpErrorMsg, true
}

// SetIdpErrorMsg sets field value
func (o *IdpDefaultUrl) SetIdpErrorMsg(v string) {
	o.IdpErrorMsg = v
}

func (o IdpDefaultUrl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdpDefaultUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfirmIdpSlo) {
		toSerialize["confirmIdpSlo"] = o.ConfirmIdpSlo
	}
	if !IsNil(o.IdpSloSuccessUrl) {
		toSerialize["idpSloSuccessUrl"] = o.IdpSloSuccessUrl
	}
	toSerialize["idpErrorMsg"] = o.IdpErrorMsg
	return toSerialize, nil
}

type NullableIdpDefaultUrl struct {
	value *IdpDefaultUrl
	isSet bool
}

func (v NullableIdpDefaultUrl) Get() *IdpDefaultUrl {
	return v.value
}

func (v *NullableIdpDefaultUrl) Set(val *IdpDefaultUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableIdpDefaultUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableIdpDefaultUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdpDefaultUrl(val *IdpDefaultUrl) *NullableIdpDefaultUrl {
	return &NullableIdpDefaultUrl{value: val, isSet: true}
}

func (v NullableIdpDefaultUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdpDefaultUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
