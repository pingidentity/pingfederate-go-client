/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ClientMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientMetadata{}

// ClientMetadata The client metadata.
type ClientMetadata struct {
	// The metadata name.
	Parameter *string `json:"parameter,omitempty" tfsdk:"parameter"`
	// The metadata description.
	Description *string `json:"description,omitempty" tfsdk:"description"`
	// If the field should allow multiple values.
	MultiValued *bool `json:"multiValued,omitempty" tfsdk:"multi_valued"`
}

// NewClientMetadata instantiates a new ClientMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientMetadata() *ClientMetadata {
	this := ClientMetadata{}
	return &this
}

// NewClientMetadataWithDefaults instantiates a new ClientMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientMetadataWithDefaults() *ClientMetadata {
	this := ClientMetadata{}
	return &this
}

// GetParameter returns the Parameter field value if set, zero value otherwise.
func (o *ClientMetadata) GetParameter() string {
	if o == nil || IsNil(o.Parameter) {
		var ret string
		return ret
	}
	return *o.Parameter
}

// GetParameterOk returns a tuple with the Parameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMetadata) GetParameterOk() (*string, bool) {
	if o == nil || IsNil(o.Parameter) {
		return nil, false
	}
	return o.Parameter, true
}

// HasParameter returns a boolean if a field has been set.
func (o *ClientMetadata) HasParameter() bool {
	if o != nil && !IsNil(o.Parameter) {
		return true
	}

	return false
}

// SetParameter gets a reference to the given string and assigns it to the Parameter field.
func (o *ClientMetadata) SetParameter(v string) {
	o.Parameter = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClientMetadata) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ClientMetadata) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClientMetadata) SetDescription(v string) {
	o.Description = &v
}

// GetMultiValued returns the MultiValued field value if set, zero value otherwise.
func (o *ClientMetadata) GetMultiValued() bool {
	if o == nil || IsNil(o.MultiValued) {
		var ret bool
		return ret
	}
	return *o.MultiValued
}

// GetMultiValuedOk returns a tuple with the MultiValued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMetadata) GetMultiValuedOk() (*bool, bool) {
	if o == nil || IsNil(o.MultiValued) {
		return nil, false
	}
	return o.MultiValued, true
}

// HasMultiValued returns a boolean if a field has been set.
func (o *ClientMetadata) HasMultiValued() bool {
	if o != nil && !IsNil(o.MultiValued) {
		return true
	}

	return false
}

// SetMultiValued gets a reference to the given bool and assigns it to the MultiValued field.
func (o *ClientMetadata) SetMultiValued(v bool) {
	o.MultiValued = &v
}

func (o ClientMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Parameter) {
		toSerialize["parameter"] = o.Parameter
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MultiValued) {
		toSerialize["multiValued"] = o.MultiValued
	}
	return toSerialize, nil
}

type NullableClientMetadata struct {
	value *ClientMetadata
	isSet bool
}

func (v NullableClientMetadata) Get() *ClientMetadata {
	return v.value
}

func (v *NullableClientMetadata) Set(val *ClientMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableClientMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableClientMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientMetadata(val *ClientMetadata) *NullableClientMetadata {
	return &NullableClientMetadata{value: val, isSet: true}
}

func (v NullableClientMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
