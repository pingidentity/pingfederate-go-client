/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ApcToSpAdapterMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApcToSpAdapterMapping{}

// ApcToSpAdapterMapping The Authentication Policy Contract (APC) to SP Adapter Mapping.
type ApcToSpAdapterMapping struct {
	// A list of configured data stores to look up attributes from.
	AttributeSources []AttributeSourceAggregation `json:"attributeSources,omitempty" tfsdk:"attribute_sources"`
	// A list of mappings from attribute names to their fulfillment values.
	AttributeContractFulfillment map[string]AttributeFulfillmentValue `json:"attributeContractFulfillment" tfsdk:"attribute_contract_fulfillment"`
	IssuanceCriteria             *IssuanceCriteria                    `json:"issuanceCriteria,omitempty" tfsdk:"issuance_criteria"`
	// The id of the Authentication Policy Contract.
	SourceId string `json:"sourceId" tfsdk:"source_id"`
	// The id of the SP Adapter.
	TargetId string `json:"targetId" tfsdk:"target_id"`
	// The id of the APC-to-SP Adapter mapping. This field is read-only and is ignored when passed in with the payload.
	Id *string `json:"id,omitempty" tfsdk:"id"`
	// Default target URL for this APC-to-adapter mapping configuration.
	DefaultTargetResource *string `json:"defaultTargetResource,omitempty" tfsdk:"default_target_resource"`
	// The license connection group.
	LicenseConnectionGroupAssignment *string `json:"licenseConnectionGroupAssignment,omitempty" tfsdk:"license_connection_group_assignment"`
}

// NewApcToSpAdapterMapping instantiates a new ApcToSpAdapterMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApcToSpAdapterMapping(attributeContractFulfillment map[string]AttributeFulfillmentValue, sourceId string, targetId string) *ApcToSpAdapterMapping {
	this := ApcToSpAdapterMapping{}
	this.AttributeContractFulfillment = attributeContractFulfillment
	this.SourceId = sourceId
	this.TargetId = targetId
	return &this
}

// NewApcToSpAdapterMappingWithDefaults instantiates a new ApcToSpAdapterMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApcToSpAdapterMappingWithDefaults() *ApcToSpAdapterMapping {
	this := ApcToSpAdapterMapping{}
	return &this
}

// GetAttributeSources returns the AttributeSources field value if set, zero value otherwise.
func (o *ApcToSpAdapterMapping) GetAttributeSources() []AttributeSourceAggregation {
	if o == nil || IsNil(o.AttributeSources) {
		var ret []AttributeSourceAggregation
		return ret
	}
	return o.AttributeSources
}

// GetAttributeSourcesOk returns a tuple with the AttributeSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetAttributeSourcesOk() ([]AttributeSourceAggregation, bool) {
	if o == nil || IsNil(o.AttributeSources) {
		return nil, false
	}
	return o.AttributeSources, true
}

// HasAttributeSources returns a boolean if a field has been set.
func (o *ApcToSpAdapterMapping) HasAttributeSources() bool {
	if o != nil && !IsNil(o.AttributeSources) {
		return true
	}

	return false
}

// SetAttributeSources gets a reference to the given []AttributeSourceAggregation and assigns it to the AttributeSources field.
func (o *ApcToSpAdapterMapping) SetAttributeSources(v []AttributeSourceAggregation) {
	o.AttributeSources = v
}

// GetAttributeContractFulfillment returns the AttributeContractFulfillment field value
func (o *ApcToSpAdapterMapping) GetAttributeContractFulfillment() map[string]AttributeFulfillmentValue {
	if o == nil {
		var ret map[string]AttributeFulfillmentValue
		return ret
	}

	return o.AttributeContractFulfillment
}

// GetAttributeContractFulfillmentOk returns a tuple with the AttributeContractFulfillment field value
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetAttributeContractFulfillmentOk() (*map[string]AttributeFulfillmentValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeContractFulfillment, true
}

// SetAttributeContractFulfillment sets field value
func (o *ApcToSpAdapterMapping) SetAttributeContractFulfillment(v map[string]AttributeFulfillmentValue) {
	o.AttributeContractFulfillment = v
}

// GetIssuanceCriteria returns the IssuanceCriteria field value if set, zero value otherwise.
func (o *ApcToSpAdapterMapping) GetIssuanceCriteria() IssuanceCriteria {
	if o == nil || IsNil(o.IssuanceCriteria) {
		var ret IssuanceCriteria
		return ret
	}
	return *o.IssuanceCriteria
}

// GetIssuanceCriteriaOk returns a tuple with the IssuanceCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetIssuanceCriteriaOk() (*IssuanceCriteria, bool) {
	if o == nil || IsNil(o.IssuanceCriteria) {
		return nil, false
	}
	return o.IssuanceCriteria, true
}

// HasIssuanceCriteria returns a boolean if a field has been set.
func (o *ApcToSpAdapterMapping) HasIssuanceCriteria() bool {
	if o != nil && !IsNil(o.IssuanceCriteria) {
		return true
	}

	return false
}

// SetIssuanceCriteria gets a reference to the given IssuanceCriteria and assigns it to the IssuanceCriteria field.
func (o *ApcToSpAdapterMapping) SetIssuanceCriteria(v IssuanceCriteria) {
	o.IssuanceCriteria = &v
}

// GetSourceId returns the SourceId field value
func (o *ApcToSpAdapterMapping) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *ApcToSpAdapterMapping) SetSourceId(v string) {
	o.SourceId = v
}

// GetTargetId returns the TargetId field value
func (o *ApcToSpAdapterMapping) GetTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetTargetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetId, true
}

// SetTargetId sets field value
func (o *ApcToSpAdapterMapping) SetTargetId(v string) {
	o.TargetId = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApcToSpAdapterMapping) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApcToSpAdapterMapping) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApcToSpAdapterMapping) SetId(v string) {
	o.Id = &v
}

// GetDefaultTargetResource returns the DefaultTargetResource field value if set, zero value otherwise.
func (o *ApcToSpAdapterMapping) GetDefaultTargetResource() string {
	if o == nil || IsNil(o.DefaultTargetResource) {
		var ret string
		return ret
	}
	return *o.DefaultTargetResource
}

// GetDefaultTargetResourceOk returns a tuple with the DefaultTargetResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetDefaultTargetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultTargetResource) {
		return nil, false
	}
	return o.DefaultTargetResource, true
}

// HasDefaultTargetResource returns a boolean if a field has been set.
func (o *ApcToSpAdapterMapping) HasDefaultTargetResource() bool {
	if o != nil && !IsNil(o.DefaultTargetResource) {
		return true
	}

	return false
}

// SetDefaultTargetResource gets a reference to the given string and assigns it to the DefaultTargetResource field.
func (o *ApcToSpAdapterMapping) SetDefaultTargetResource(v string) {
	o.DefaultTargetResource = &v
}

// GetLicenseConnectionGroupAssignment returns the LicenseConnectionGroupAssignment field value if set, zero value otherwise.
func (o *ApcToSpAdapterMapping) GetLicenseConnectionGroupAssignment() string {
	if o == nil || IsNil(o.LicenseConnectionGroupAssignment) {
		var ret string
		return ret
	}
	return *o.LicenseConnectionGroupAssignment
}

// GetLicenseConnectionGroupAssignmentOk returns a tuple with the LicenseConnectionGroupAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApcToSpAdapterMapping) GetLicenseConnectionGroupAssignmentOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseConnectionGroupAssignment) {
		return nil, false
	}
	return o.LicenseConnectionGroupAssignment, true
}

// HasLicenseConnectionGroupAssignment returns a boolean if a field has been set.
func (o *ApcToSpAdapterMapping) HasLicenseConnectionGroupAssignment() bool {
	if o != nil && !IsNil(o.LicenseConnectionGroupAssignment) {
		return true
	}

	return false
}

// SetLicenseConnectionGroupAssignment gets a reference to the given string and assigns it to the LicenseConnectionGroupAssignment field.
func (o *ApcToSpAdapterMapping) SetLicenseConnectionGroupAssignment(v string) {
	o.LicenseConnectionGroupAssignment = &v
}

func (o ApcToSpAdapterMapping) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApcToSpAdapterMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeSources) {
		toSerialize["attributeSources"] = o.AttributeSources
	}
	toSerialize["attributeContractFulfillment"] = o.AttributeContractFulfillment
	if !IsNil(o.IssuanceCriteria) {
		toSerialize["issuanceCriteria"] = o.IssuanceCriteria
	}
	toSerialize["sourceId"] = o.SourceId
	toSerialize["targetId"] = o.TargetId
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.DefaultTargetResource) {
		toSerialize["defaultTargetResource"] = o.DefaultTargetResource
	}
	if !IsNil(o.LicenseConnectionGroupAssignment) {
		toSerialize["licenseConnectionGroupAssignment"] = o.LicenseConnectionGroupAssignment
	}
	return toSerialize, nil
}

type NullableApcToSpAdapterMapping struct {
	value *ApcToSpAdapterMapping
	isSet bool
}

func (v NullableApcToSpAdapterMapping) Get() *ApcToSpAdapterMapping {
	return v.value
}

func (v *NullableApcToSpAdapterMapping) Set(val *ApcToSpAdapterMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableApcToSpAdapterMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableApcToSpAdapterMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApcToSpAdapterMapping(val *ApcToSpAdapterMapping) *NullableApcToSpAdapterMapping {
	return &NullableApcToSpAdapterMapping{value: val, isSet: true}
}

func (v NullableApcToSpAdapterMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApcToSpAdapterMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
