/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AuthnApiSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthnApiSettings{}

// AuthnApiSettings Authentication API Application Settings.
type AuthnApiSettings struct {
	// Specifies whether the authentication API is enabled. The default value is false.
	ApiEnabled            *bool         `json:"apiEnabled,omitempty"`
	DefaultApplicationRef *ResourceLink `json:"defaultApplicationRef,omitempty"`
	// Enable the API Descriptions endpoint.
	EnableApiDescriptions *bool `json:"enableApiDescriptions,omitempty"`
	// Determines whether access to the authentication API redirectless mode is restricted to specified applications.
	RestrictAccessToRedirectlessMode *bool `json:"restrictAccessToRedirectlessMode,omitempty"`
	// Determines whether the request context parameters are included in response for authentication API. The default value is false.
	IncludeRequestContext *bool `json:"includeRequestContext,omitempty"`
}

// NewAuthnApiSettings instantiates a new AuthnApiSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnApiSettings() *AuthnApiSettings {
	this := AuthnApiSettings{}
	return &this
}

// NewAuthnApiSettingsWithDefaults instantiates a new AuthnApiSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnApiSettingsWithDefaults() *AuthnApiSettings {
	this := AuthnApiSettings{}
	return &this
}

// GetApiEnabled returns the ApiEnabled field value if set, zero value otherwise.
func (o *AuthnApiSettings) GetApiEnabled() bool {
	if o == nil || IsNil(o.ApiEnabled) {
		var ret bool
		return ret
	}
	return *o.ApiEnabled
}

// GetApiEnabledOk returns a tuple with the ApiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnApiSettings) GetApiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ApiEnabled) {
		return nil, false
	}
	return o.ApiEnabled, true
}

// HasApiEnabled returns a boolean if a field has been set.
func (o *AuthnApiSettings) HasApiEnabled() bool {
	if o != nil && !IsNil(o.ApiEnabled) {
		return true
	}

	return false
}

// SetApiEnabled gets a reference to the given bool and assigns it to the ApiEnabled field.
func (o *AuthnApiSettings) SetApiEnabled(v bool) {
	o.ApiEnabled = &v
}

// GetDefaultApplicationRef returns the DefaultApplicationRef field value if set, zero value otherwise.
func (o *AuthnApiSettings) GetDefaultApplicationRef() ResourceLink {
	if o == nil || IsNil(o.DefaultApplicationRef) {
		var ret ResourceLink
		return ret
	}
	return *o.DefaultApplicationRef
}

// GetDefaultApplicationRefOk returns a tuple with the DefaultApplicationRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnApiSettings) GetDefaultApplicationRefOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.DefaultApplicationRef) {
		return nil, false
	}
	return o.DefaultApplicationRef, true
}

// HasDefaultApplicationRef returns a boolean if a field has been set.
func (o *AuthnApiSettings) HasDefaultApplicationRef() bool {
	if o != nil && !IsNil(o.DefaultApplicationRef) {
		return true
	}

	return false
}

// SetDefaultApplicationRef gets a reference to the given ResourceLink and assigns it to the DefaultApplicationRef field.
func (o *AuthnApiSettings) SetDefaultApplicationRef(v ResourceLink) {
	o.DefaultApplicationRef = &v
}

// GetEnableApiDescriptions returns the EnableApiDescriptions field value if set, zero value otherwise.
func (o *AuthnApiSettings) GetEnableApiDescriptions() bool {
	if o == nil || IsNil(o.EnableApiDescriptions) {
		var ret bool
		return ret
	}
	return *o.EnableApiDescriptions
}

// GetEnableApiDescriptionsOk returns a tuple with the EnableApiDescriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnApiSettings) GetEnableApiDescriptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableApiDescriptions) {
		return nil, false
	}
	return o.EnableApiDescriptions, true
}

// HasEnableApiDescriptions returns a boolean if a field has been set.
func (o *AuthnApiSettings) HasEnableApiDescriptions() bool {
	if o != nil && !IsNil(o.EnableApiDescriptions) {
		return true
	}

	return false
}

// SetEnableApiDescriptions gets a reference to the given bool and assigns it to the EnableApiDescriptions field.
func (o *AuthnApiSettings) SetEnableApiDescriptions(v bool) {
	o.EnableApiDescriptions = &v
}

// GetRestrictAccessToRedirectlessMode returns the RestrictAccessToRedirectlessMode field value if set, zero value otherwise.
func (o *AuthnApiSettings) GetRestrictAccessToRedirectlessMode() bool {
	if o == nil || IsNil(o.RestrictAccessToRedirectlessMode) {
		var ret bool
		return ret
	}
	return *o.RestrictAccessToRedirectlessMode
}

// GetRestrictAccessToRedirectlessModeOk returns a tuple with the RestrictAccessToRedirectlessMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnApiSettings) GetRestrictAccessToRedirectlessModeOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictAccessToRedirectlessMode) {
		return nil, false
	}
	return o.RestrictAccessToRedirectlessMode, true
}

// HasRestrictAccessToRedirectlessMode returns a boolean if a field has been set.
func (o *AuthnApiSettings) HasRestrictAccessToRedirectlessMode() bool {
	if o != nil && !IsNil(o.RestrictAccessToRedirectlessMode) {
		return true
	}

	return false
}

// SetRestrictAccessToRedirectlessMode gets a reference to the given bool and assigns it to the RestrictAccessToRedirectlessMode field.
func (o *AuthnApiSettings) SetRestrictAccessToRedirectlessMode(v bool) {
	o.RestrictAccessToRedirectlessMode = &v
}

// GetIncludeRequestContext returns the IncludeRequestContext field value if set, zero value otherwise.
func (o *AuthnApiSettings) GetIncludeRequestContext() bool {
	if o == nil || IsNil(o.IncludeRequestContext) {
		var ret bool
		return ret
	}
	return *o.IncludeRequestContext
}

// GetIncludeRequestContextOk returns a tuple with the IncludeRequestContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnApiSettings) GetIncludeRequestContextOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeRequestContext) {
		return nil, false
	}
	return o.IncludeRequestContext, true
}

// HasIncludeRequestContext returns a boolean if a field has been set.
func (o *AuthnApiSettings) HasIncludeRequestContext() bool {
	if o != nil && !IsNil(o.IncludeRequestContext) {
		return true
	}

	return false
}

// SetIncludeRequestContext gets a reference to the given bool and assigns it to the IncludeRequestContext field.
func (o *AuthnApiSettings) SetIncludeRequestContext(v bool) {
	o.IncludeRequestContext = &v
}

func (o AuthnApiSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthnApiSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiEnabled) {
		toSerialize["apiEnabled"] = o.ApiEnabled
	}
	if !IsNil(o.DefaultApplicationRef) {
		toSerialize["defaultApplicationRef"] = o.DefaultApplicationRef
	}
	if !IsNil(o.EnableApiDescriptions) {
		toSerialize["enableApiDescriptions"] = o.EnableApiDescriptions
	}
	if !IsNil(o.RestrictAccessToRedirectlessMode) {
		toSerialize["restrictAccessToRedirectlessMode"] = o.RestrictAccessToRedirectlessMode
	}
	if !IsNil(o.IncludeRequestContext) {
		toSerialize["includeRequestContext"] = o.IncludeRequestContext
	}
	return toSerialize, nil
}

type NullableAuthnApiSettings struct {
	value *AuthnApiSettings
	isSet bool
}

func (v NullableAuthnApiSettings) Get() *AuthnApiSettings {
	return v.value
}

func (v *NullableAuthnApiSettings) Set(val *AuthnApiSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnApiSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnApiSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnApiSettings(val *AuthnApiSettings) *NullableAuthnApiSettings {
	return &NullableAuthnApiSettings{value: val, isSet: true}
}

func (v NullableAuthnApiSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnApiSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
