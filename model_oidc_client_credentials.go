/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the OIDCClientCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OIDCClientCredentials{}

// OIDCClientCredentials The OpenID Connect Client Credentials settings. This is required for an OIDC Connection.
type OIDCClientCredentials struct {
	// The OpenID Connect client identitification.
	ClientId string `json:"clientId"`
	// The OpenID Connect client secret. To update the client secret, specify the plaintext value in this field.  This field will not be populated for GET requests.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// For GET requests, this field contains the encrypted client secret, if one exists.  For POST and PUT requests, if you wish to reuse the existing secret, this field should be passed back unchanged.
	EncryptedSecret *string `json:"encryptedSecret,omitempty"`
}

// NewOIDCClientCredentials instantiates a new OIDCClientCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCClientCredentials(clientId string) *OIDCClientCredentials {
	this := OIDCClientCredentials{}
	this.ClientId = clientId
	return &this
}

// NewOIDCClientCredentialsWithDefaults instantiates a new OIDCClientCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCClientCredentialsWithDefaults() *OIDCClientCredentials {
	this := OIDCClientCredentials{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *OIDCClientCredentials) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *OIDCClientCredentials) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *OIDCClientCredentials) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *OIDCClientCredentials) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCClientCredentials) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *OIDCClientCredentials) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *OIDCClientCredentials) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetEncryptedSecret returns the EncryptedSecret field value if set, zero value otherwise.
func (o *OIDCClientCredentials) GetEncryptedSecret() string {
	if o == nil || IsNil(o.EncryptedSecret) {
		var ret string
		return ret
	}
	return *o.EncryptedSecret
}

// GetEncryptedSecretOk returns a tuple with the EncryptedSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCClientCredentials) GetEncryptedSecretOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptedSecret) {
		return nil, false
	}
	return o.EncryptedSecret, true
}

// HasEncryptedSecret returns a boolean if a field has been set.
func (o *OIDCClientCredentials) HasEncryptedSecret() bool {
	if o != nil && !IsNil(o.EncryptedSecret) {
		return true
	}

	return false
}

// SetEncryptedSecret gets a reference to the given string and assigns it to the EncryptedSecret field.
func (o *OIDCClientCredentials) SetEncryptedSecret(v string) {
	o.EncryptedSecret = &v
}

func (o OIDCClientCredentials) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OIDCClientCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clientId"] = o.ClientId
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.EncryptedSecret) {
		toSerialize["encryptedSecret"] = o.EncryptedSecret
	}
	return toSerialize, nil
}

type NullableOIDCClientCredentials struct {
	value *OIDCClientCredentials
	isSet bool
}

func (v NullableOIDCClientCredentials) Get() *OIDCClientCredentials {
	return v.value
}

func (v *NullableOIDCClientCredentials) Set(val *OIDCClientCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCClientCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCClientCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCClientCredentials(val *OIDCClientCredentials) *NullableOIDCClientCredentials {
	return &NullableOIDCClientCredentials{value: val, isSet: true}
}

func (v NullableOIDCClientCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCClientCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
