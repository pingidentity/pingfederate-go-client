/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AuthenticationSelectorAttributeContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationSelectorAttributeContract{}

// AuthenticationSelectorAttributeContract A set of attributes exposed by an Authentication Selector.
type AuthenticationSelectorAttributeContract struct {
	// A list of additional attributes that can be returned by the Authentication Selector. The extended attributes are only used if the Authentication Selector supports them.
	ExtendedAttributes []AuthenticationSelectorAttribute `json:"extendedAttributes,omitempty" tfsdk:"extended_attributes"`
}

// NewAuthenticationSelectorAttributeContract instantiates a new AuthenticationSelectorAttributeContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationSelectorAttributeContract() *AuthenticationSelectorAttributeContract {
	this := AuthenticationSelectorAttributeContract{}
	return &this
}

// NewAuthenticationSelectorAttributeContractWithDefaults instantiates a new AuthenticationSelectorAttributeContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationSelectorAttributeContractWithDefaults() *AuthenticationSelectorAttributeContract {
	this := AuthenticationSelectorAttributeContract{}
	return &this
}

// GetExtendedAttributes returns the ExtendedAttributes field value if set, zero value otherwise.
func (o *AuthenticationSelectorAttributeContract) GetExtendedAttributes() []AuthenticationSelectorAttribute {
	if o == nil || IsNil(o.ExtendedAttributes) {
		var ret []AuthenticationSelectorAttribute
		return ret
	}
	return o.ExtendedAttributes
}

// GetExtendedAttributesOk returns a tuple with the ExtendedAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSelectorAttributeContract) GetExtendedAttributesOk() ([]AuthenticationSelectorAttribute, bool) {
	if o == nil || IsNil(o.ExtendedAttributes) {
		return nil, false
	}
	return o.ExtendedAttributes, true
}

// HasExtendedAttributes returns a boolean if a field has been set.
func (o *AuthenticationSelectorAttributeContract) HasExtendedAttributes() bool {
	if o != nil && !IsNil(o.ExtendedAttributes) {
		return true
	}

	return false
}

// SetExtendedAttributes gets a reference to the given []AuthenticationSelectorAttribute and assigns it to the ExtendedAttributes field.
func (o *AuthenticationSelectorAttributeContract) SetExtendedAttributes(v []AuthenticationSelectorAttribute) {
	o.ExtendedAttributes = v
}

func (o AuthenticationSelectorAttributeContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationSelectorAttributeContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExtendedAttributes) {
		toSerialize["extendedAttributes"] = o.ExtendedAttributes
	}
	return toSerialize, nil
}

type NullableAuthenticationSelectorAttributeContract struct {
	value *AuthenticationSelectorAttributeContract
	isSet bool
}

func (v NullableAuthenticationSelectorAttributeContract) Get() *AuthenticationSelectorAttributeContract {
	return v.value
}

func (v *NullableAuthenticationSelectorAttributeContract) Set(val *AuthenticationSelectorAttributeContract) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationSelectorAttributeContract) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationSelectorAttributeContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationSelectorAttributeContract(val *AuthenticationSelectorAttributeContract) *NullableAuthenticationSelectorAttributeContract {
	return &NullableAuthenticationSelectorAttributeContract{value: val, isSet: true}
}

func (v NullableAuthenticationSelectorAttributeContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationSelectorAttributeContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
