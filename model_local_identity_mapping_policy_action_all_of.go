/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the LocalIdentityMappingPolicyActionAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalIdentityMappingPolicyActionAllOf{}

// LocalIdentityMappingPolicyActionAllOf A local identity profile selection action.
type LocalIdentityMappingPolicyActionAllOf struct {
	LocalIdentityRef         ResourceLink      `json:"localIdentityRef"`
	InboundMapping           *AttributeMapping `json:"inboundMapping,omitempty"`
	OutboundAttributeMapping AttributeMapping  `json:"outboundAttributeMapping"`
}

// NewLocalIdentityMappingPolicyActionAllOf instantiates a new LocalIdentityMappingPolicyActionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalIdentityMappingPolicyActionAllOf(localIdentityRef ResourceLink, outboundAttributeMapping AttributeMapping) *LocalIdentityMappingPolicyActionAllOf {
	this := LocalIdentityMappingPolicyActionAllOf{}
	this.LocalIdentityRef = localIdentityRef
	this.OutboundAttributeMapping = outboundAttributeMapping
	return &this
}

// NewLocalIdentityMappingPolicyActionAllOfWithDefaults instantiates a new LocalIdentityMappingPolicyActionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalIdentityMappingPolicyActionAllOfWithDefaults() *LocalIdentityMappingPolicyActionAllOf {
	this := LocalIdentityMappingPolicyActionAllOf{}
	return &this
}

// GetLocalIdentityRef returns the LocalIdentityRef field value
func (o *LocalIdentityMappingPolicyActionAllOf) GetLocalIdentityRef() ResourceLink {
	if o == nil {
		var ret ResourceLink
		return ret
	}

	return o.LocalIdentityRef
}

// GetLocalIdentityRefOk returns a tuple with the LocalIdentityRef field value
// and a boolean to check if the value has been set.
func (o *LocalIdentityMappingPolicyActionAllOf) GetLocalIdentityRefOk() (*ResourceLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalIdentityRef, true
}

// SetLocalIdentityRef sets field value
func (o *LocalIdentityMappingPolicyActionAllOf) SetLocalIdentityRef(v ResourceLink) {
	o.LocalIdentityRef = v
}

// GetInboundMapping returns the InboundMapping field value if set, zero value otherwise.
func (o *LocalIdentityMappingPolicyActionAllOf) GetInboundMapping() AttributeMapping {
	if o == nil || IsNil(o.InboundMapping) {
		var ret AttributeMapping
		return ret
	}
	return *o.InboundMapping
}

// GetInboundMappingOk returns a tuple with the InboundMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalIdentityMappingPolicyActionAllOf) GetInboundMappingOk() (*AttributeMapping, bool) {
	if o == nil || IsNil(o.InboundMapping) {
		return nil, false
	}
	return o.InboundMapping, true
}

// HasInboundMapping returns a boolean if a field has been set.
func (o *LocalIdentityMappingPolicyActionAllOf) HasInboundMapping() bool {
	if o != nil && !IsNil(o.InboundMapping) {
		return true
	}

	return false
}

// SetInboundMapping gets a reference to the given AttributeMapping and assigns it to the InboundMapping field.
func (o *LocalIdentityMappingPolicyActionAllOf) SetInboundMapping(v AttributeMapping) {
	o.InboundMapping = &v
}

// GetOutboundAttributeMapping returns the OutboundAttributeMapping field value
func (o *LocalIdentityMappingPolicyActionAllOf) GetOutboundAttributeMapping() AttributeMapping {
	if o == nil {
		var ret AttributeMapping
		return ret
	}

	return o.OutboundAttributeMapping
}

// GetOutboundAttributeMappingOk returns a tuple with the OutboundAttributeMapping field value
// and a boolean to check if the value has been set.
func (o *LocalIdentityMappingPolicyActionAllOf) GetOutboundAttributeMappingOk() (*AttributeMapping, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutboundAttributeMapping, true
}

// SetOutboundAttributeMapping sets field value
func (o *LocalIdentityMappingPolicyActionAllOf) SetOutboundAttributeMapping(v AttributeMapping) {
	o.OutboundAttributeMapping = v
}

func (o LocalIdentityMappingPolicyActionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalIdentityMappingPolicyActionAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["localIdentityRef"] = o.LocalIdentityRef
	if !IsNil(o.InboundMapping) {
		toSerialize["inboundMapping"] = o.InboundMapping
	}
	toSerialize["outboundAttributeMapping"] = o.OutboundAttributeMapping
	return toSerialize, nil
}

type NullableLocalIdentityMappingPolicyActionAllOf struct {
	value *LocalIdentityMappingPolicyActionAllOf
	isSet bool
}

func (v NullableLocalIdentityMappingPolicyActionAllOf) Get() *LocalIdentityMappingPolicyActionAllOf {
	return v.value
}

func (v *NullableLocalIdentityMappingPolicyActionAllOf) Set(val *LocalIdentityMappingPolicyActionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalIdentityMappingPolicyActionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalIdentityMappingPolicyActionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalIdentityMappingPolicyActionAllOf(val *LocalIdentityMappingPolicyActionAllOf) *NullableLocalIdentityMappingPolicyActionAllOf {
	return &NullableLocalIdentityMappingPolicyActionAllOf{value: val, isSet: true}
}

func (v NullableLocalIdentityMappingPolicyActionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalIdentityMappingPolicyActionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
