/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ApcMappingPolicyActionAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApcMappingPolicyActionAllOf{}

// ApcMappingPolicyActionAllOf An authentication policy contract selection action.
type ApcMappingPolicyActionAllOf struct {
	AuthenticationPolicyContractRef ResourceLink     `json:"authenticationPolicyContractRef"`
	AttributeMapping                AttributeMapping `json:"attributeMapping"`
}

// NewApcMappingPolicyActionAllOf instantiates a new ApcMappingPolicyActionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApcMappingPolicyActionAllOf(authenticationPolicyContractRef ResourceLink, attributeMapping AttributeMapping) *ApcMappingPolicyActionAllOf {
	this := ApcMappingPolicyActionAllOf{}
	this.AuthenticationPolicyContractRef = authenticationPolicyContractRef
	this.AttributeMapping = attributeMapping
	return &this
}

// NewApcMappingPolicyActionAllOfWithDefaults instantiates a new ApcMappingPolicyActionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApcMappingPolicyActionAllOfWithDefaults() *ApcMappingPolicyActionAllOf {
	this := ApcMappingPolicyActionAllOf{}
	return &this
}

// GetAuthenticationPolicyContractRef returns the AuthenticationPolicyContractRef field value
func (o *ApcMappingPolicyActionAllOf) GetAuthenticationPolicyContractRef() ResourceLink {
	if o == nil {
		var ret ResourceLink
		return ret
	}

	return o.AuthenticationPolicyContractRef
}

// GetAuthenticationPolicyContractRefOk returns a tuple with the AuthenticationPolicyContractRef field value
// and a boolean to check if the value has been set.
func (o *ApcMappingPolicyActionAllOf) GetAuthenticationPolicyContractRefOk() (*ResourceLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationPolicyContractRef, true
}

// SetAuthenticationPolicyContractRef sets field value
func (o *ApcMappingPolicyActionAllOf) SetAuthenticationPolicyContractRef(v ResourceLink) {
	o.AuthenticationPolicyContractRef = v
}

// GetAttributeMapping returns the AttributeMapping field value
func (o *ApcMappingPolicyActionAllOf) GetAttributeMapping() AttributeMapping {
	if o == nil {
		var ret AttributeMapping
		return ret
	}

	return o.AttributeMapping
}

// GetAttributeMappingOk returns a tuple with the AttributeMapping field value
// and a boolean to check if the value has been set.
func (o *ApcMappingPolicyActionAllOf) GetAttributeMappingOk() (*AttributeMapping, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeMapping, true
}

// SetAttributeMapping sets field value
func (o *ApcMappingPolicyActionAllOf) SetAttributeMapping(v AttributeMapping) {
	o.AttributeMapping = v
}

func (o ApcMappingPolicyActionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApcMappingPolicyActionAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authenticationPolicyContractRef"] = o.AuthenticationPolicyContractRef
	toSerialize["attributeMapping"] = o.AttributeMapping
	return toSerialize, nil
}

type NullableApcMappingPolicyActionAllOf struct {
	value *ApcMappingPolicyActionAllOf
	isSet bool
}

func (v NullableApcMappingPolicyActionAllOf) Get() *ApcMappingPolicyActionAllOf {
	return v.value
}

func (v *NullableApcMappingPolicyActionAllOf) Set(val *ApcMappingPolicyActionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApcMappingPolicyActionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApcMappingPolicyActionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApcMappingPolicyActionAllOf(val *ApcMappingPolicyActionAllOf) *NullableApcMappingPolicyActionAllOf {
	return &NullableApcMappingPolicyActionAllOf{value: val, isSet: true}
}

func (v NullableApcMappingPolicyActionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApcMappingPolicyActionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
