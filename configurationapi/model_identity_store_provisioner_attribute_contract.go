/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the IdentityStoreProvisionerAttributeContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityStoreProvisionerAttributeContract{}

// IdentityStoreProvisionerAttributeContract A set of attributes exposed by an identity store provisioner.
type IdentityStoreProvisionerAttributeContract struct {
	// A list of identity store provisioner attributes that correspond to the attributes exposed by the identity store provisioner type.
	CoreAttributes []Attribute `json:"coreAttributes" tfsdk:"core_attributes"`
	// A list of additional attributes that can be returned by the identity store provisioner. The extended attributes are only used if the provisioner supports them.
	ExtendedAttributes []Attribute `json:"extendedAttributes,omitempty" tfsdk:"extended_attributes"`
}

// NewIdentityStoreProvisionerAttributeContract instantiates a new IdentityStoreProvisionerAttributeContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityStoreProvisionerAttributeContract(coreAttributes []Attribute) *IdentityStoreProvisionerAttributeContract {
	this := IdentityStoreProvisionerAttributeContract{}
	this.CoreAttributes = coreAttributes
	return &this
}

// NewIdentityStoreProvisionerAttributeContractWithDefaults instantiates a new IdentityStoreProvisionerAttributeContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityStoreProvisionerAttributeContractWithDefaults() *IdentityStoreProvisionerAttributeContract {
	this := IdentityStoreProvisionerAttributeContract{}
	return &this
}

// GetCoreAttributes returns the CoreAttributes field value
func (o *IdentityStoreProvisionerAttributeContract) GetCoreAttributes() []Attribute {
	if o == nil {
		var ret []Attribute
		return ret
	}

	return o.CoreAttributes
}

// GetCoreAttributesOk returns a tuple with the CoreAttributes field value
// and a boolean to check if the value has been set.
func (o *IdentityStoreProvisionerAttributeContract) GetCoreAttributesOk() ([]Attribute, bool) {
	if o == nil {
		return nil, false
	}
	return o.CoreAttributes, true
}

// SetCoreAttributes sets field value
func (o *IdentityStoreProvisionerAttributeContract) SetCoreAttributes(v []Attribute) {
	o.CoreAttributes = v
}

// GetExtendedAttributes returns the ExtendedAttributes field value if set, zero value otherwise.
func (o *IdentityStoreProvisionerAttributeContract) GetExtendedAttributes() []Attribute {
	if o == nil || IsNil(o.ExtendedAttributes) {
		var ret []Attribute
		return ret
	}
	return o.ExtendedAttributes
}

// GetExtendedAttributesOk returns a tuple with the ExtendedAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityStoreProvisionerAttributeContract) GetExtendedAttributesOk() ([]Attribute, bool) {
	if o == nil || IsNil(o.ExtendedAttributes) {
		return nil, false
	}
	return o.ExtendedAttributes, true
}

// HasExtendedAttributes returns a boolean if a field has been set.
func (o *IdentityStoreProvisionerAttributeContract) HasExtendedAttributes() bool {
	if o != nil && !IsNil(o.ExtendedAttributes) {
		return true
	}

	return false
}

// SetExtendedAttributes gets a reference to the given []Attribute and assigns it to the ExtendedAttributes field.
func (o *IdentityStoreProvisionerAttributeContract) SetExtendedAttributes(v []Attribute) {
	o.ExtendedAttributes = v
}

func (o IdentityStoreProvisionerAttributeContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityStoreProvisionerAttributeContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["coreAttributes"] = o.CoreAttributes
	if !IsNil(o.ExtendedAttributes) {
		toSerialize["extendedAttributes"] = o.ExtendedAttributes
	}
	return toSerialize, nil
}

type NullableIdentityStoreProvisionerAttributeContract struct {
	value *IdentityStoreProvisionerAttributeContract
	isSet bool
}

func (v NullableIdentityStoreProvisionerAttributeContract) Get() *IdentityStoreProvisionerAttributeContract {
	return v.value
}

func (v *NullableIdentityStoreProvisionerAttributeContract) Set(val *IdentityStoreProvisionerAttributeContract) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityStoreProvisionerAttributeContract) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityStoreProvisionerAttributeContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityStoreProvisionerAttributeContract(val *IdentityStoreProvisionerAttributeContract) *NullableIdentityStoreProvisionerAttributeContract {
	return &NullableIdentityStoreProvisionerAttributeContract{value: val, isSet: true}
}

func (v NullableIdentityStoreProvisionerAttributeContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityStoreProvisionerAttributeContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
