/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AccessTokenAttributeContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTokenAttributeContract{}

// AccessTokenAttributeContract A set of attributes exposed by an Access Token Manager.
type AccessTokenAttributeContract struct {
	// A list of core token attributes that are associated with the access token management plugin type. This field is read-only and is ignored on POST/PUT.
	CoreAttributes []AccessTokenAttribute `json:"coreAttributes,omitempty" tfsdk:"core_attributes"`
	// A list of additional token attributes that are associated with this access token management plugin instance.
	ExtendedAttributes []AccessTokenAttribute `json:"extendedAttributes,omitempty" tfsdk:"extended_attributes"`
	// Default subject attribute to use for audit logging when validating the access token. Blank value means to use USER_KEY attribute value after grant lookup.
	DefaultSubjectAttribute *string `json:"defaultSubjectAttribute,omitempty" tfsdk:"default_subject_attribute"`
}

// NewAccessTokenAttributeContract instantiates a new AccessTokenAttributeContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenAttributeContract() *AccessTokenAttributeContract {
	this := AccessTokenAttributeContract{}
	return &this
}

// NewAccessTokenAttributeContractWithDefaults instantiates a new AccessTokenAttributeContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenAttributeContractWithDefaults() *AccessTokenAttributeContract {
	this := AccessTokenAttributeContract{}
	return &this
}

// GetCoreAttributes returns the CoreAttributes field value if set, zero value otherwise.
func (o *AccessTokenAttributeContract) GetCoreAttributes() []AccessTokenAttribute {
	if o == nil || IsNil(o.CoreAttributes) {
		var ret []AccessTokenAttribute
		return ret
	}
	return o.CoreAttributes
}

// GetCoreAttributesOk returns a tuple with the CoreAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenAttributeContract) GetCoreAttributesOk() ([]AccessTokenAttribute, bool) {
	if o == nil || IsNil(o.CoreAttributes) {
		return nil, false
	}
	return o.CoreAttributes, true
}

// HasCoreAttributes returns a boolean if a field has been set.
func (o *AccessTokenAttributeContract) HasCoreAttributes() bool {
	if o != nil && !IsNil(o.CoreAttributes) {
		return true
	}

	return false
}

// SetCoreAttributes gets a reference to the given []AccessTokenAttribute and assigns it to the CoreAttributes field.
func (o *AccessTokenAttributeContract) SetCoreAttributes(v []AccessTokenAttribute) {
	o.CoreAttributes = v
}

// GetExtendedAttributes returns the ExtendedAttributes field value if set, zero value otherwise.
func (o *AccessTokenAttributeContract) GetExtendedAttributes() []AccessTokenAttribute {
	if o == nil || IsNil(o.ExtendedAttributes) {
		var ret []AccessTokenAttribute
		return ret
	}
	return o.ExtendedAttributes
}

// GetExtendedAttributesOk returns a tuple with the ExtendedAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenAttributeContract) GetExtendedAttributesOk() ([]AccessTokenAttribute, bool) {
	if o == nil || IsNil(o.ExtendedAttributes) {
		return nil, false
	}
	return o.ExtendedAttributes, true
}

// HasExtendedAttributes returns a boolean if a field has been set.
func (o *AccessTokenAttributeContract) HasExtendedAttributes() bool {
	if o != nil && !IsNil(o.ExtendedAttributes) {
		return true
	}

	return false
}

// SetExtendedAttributes gets a reference to the given []AccessTokenAttribute and assigns it to the ExtendedAttributes field.
func (o *AccessTokenAttributeContract) SetExtendedAttributes(v []AccessTokenAttribute) {
	o.ExtendedAttributes = v
}

// GetDefaultSubjectAttribute returns the DefaultSubjectAttribute field value if set, zero value otherwise.
func (o *AccessTokenAttributeContract) GetDefaultSubjectAttribute() string {
	if o == nil || IsNil(o.DefaultSubjectAttribute) {
		var ret string
		return ret
	}
	return *o.DefaultSubjectAttribute
}

// GetDefaultSubjectAttributeOk returns a tuple with the DefaultSubjectAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenAttributeContract) GetDefaultSubjectAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultSubjectAttribute) {
		return nil, false
	}
	return o.DefaultSubjectAttribute, true
}

// HasDefaultSubjectAttribute returns a boolean if a field has been set.
func (o *AccessTokenAttributeContract) HasDefaultSubjectAttribute() bool {
	if o != nil && !IsNil(o.DefaultSubjectAttribute) {
		return true
	}

	return false
}

// SetDefaultSubjectAttribute gets a reference to the given string and assigns it to the DefaultSubjectAttribute field.
func (o *AccessTokenAttributeContract) SetDefaultSubjectAttribute(v string) {
	o.DefaultSubjectAttribute = &v
}

func (o AccessTokenAttributeContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTokenAttributeContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoreAttributes) {
		toSerialize["coreAttributes"] = o.CoreAttributes
	}
	if !IsNil(o.ExtendedAttributes) {
		toSerialize["extendedAttributes"] = o.ExtendedAttributes
	}
	if !IsNil(o.DefaultSubjectAttribute) {
		toSerialize["defaultSubjectAttribute"] = o.DefaultSubjectAttribute
	}
	return toSerialize, nil
}

type NullableAccessTokenAttributeContract struct {
	value *AccessTokenAttributeContract
	isSet bool
}

func (v NullableAccessTokenAttributeContract) Get() *AccessTokenAttributeContract {
	return v.value
}

func (v *NullableAccessTokenAttributeContract) Set(val *AccessTokenAttributeContract) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenAttributeContract) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenAttributeContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenAttributeContract(val *AccessTokenAttributeContract) *NullableAccessTokenAttributeContract {
	return &NullableAccessTokenAttributeContract{value: val, isSet: true}
}

func (v NullableAccessTokenAttributeContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenAttributeContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
