/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ReadGroups type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadGroups{}

// ReadGroups Group info lookup and respond to incoming SCIM requests configuration.
type ReadGroups struct {
	AttributeContract IdpInboundProvisioningAttributeContract `json:"attributeContract" tfsdk:"attribute_contract"`
	// A list of LDAP data store attributes to populate a response to a user-provisioning request.
	Attributes []Attribute `json:"attributes" tfsdk:"attributes"`
	// A list of user repository mappings from attribute names to their fulfillment values.
	AttributeFulfillment map[string]AttributeFulfillmentValue `json:"attributeFulfillment" tfsdk:"attribute_fulfillment"`
}

// NewReadGroups instantiates a new ReadGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadGroups(attributeContract IdpInboundProvisioningAttributeContract, attributes []Attribute, attributeFulfillment map[string]AttributeFulfillmentValue) *ReadGroups {
	this := ReadGroups{}
	this.AttributeContract = attributeContract
	this.Attributes = attributes
	this.AttributeFulfillment = attributeFulfillment
	return &this
}

// NewReadGroupsWithDefaults instantiates a new ReadGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadGroupsWithDefaults() *ReadGroups {
	this := ReadGroups{}
	return &this
}

// GetAttributeContract returns the AttributeContract field value
func (o *ReadGroups) GetAttributeContract() IdpInboundProvisioningAttributeContract {
	if o == nil {
		var ret IdpInboundProvisioningAttributeContract
		return ret
	}

	return o.AttributeContract
}

// GetAttributeContractOk returns a tuple with the AttributeContract field value
// and a boolean to check if the value has been set.
func (o *ReadGroups) GetAttributeContractOk() (*IdpInboundProvisioningAttributeContract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeContract, true
}

// SetAttributeContract sets field value
func (o *ReadGroups) SetAttributeContract(v IdpInboundProvisioningAttributeContract) {
	o.AttributeContract = v
}

// GetAttributes returns the Attributes field value
func (o *ReadGroups) GetAttributes() []Attribute {
	if o == nil {
		var ret []Attribute
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *ReadGroups) GetAttributesOk() ([]Attribute, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *ReadGroups) SetAttributes(v []Attribute) {
	o.Attributes = v
}

// GetAttributeFulfillment returns the AttributeFulfillment field value
func (o *ReadGroups) GetAttributeFulfillment() map[string]AttributeFulfillmentValue {
	if o == nil {
		var ret map[string]AttributeFulfillmentValue
		return ret
	}

	return o.AttributeFulfillment
}

// GetAttributeFulfillmentOk returns a tuple with the AttributeFulfillment field value
// and a boolean to check if the value has been set.
func (o *ReadGroups) GetAttributeFulfillmentOk() (*map[string]AttributeFulfillmentValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeFulfillment, true
}

// SetAttributeFulfillment sets field value
func (o *ReadGroups) SetAttributeFulfillment(v map[string]AttributeFulfillmentValue) {
	o.AttributeFulfillment = v
}

func (o ReadGroups) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadGroups) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributeContract"] = o.AttributeContract
	toSerialize["attributes"] = o.Attributes
	toSerialize["attributeFulfillment"] = o.AttributeFulfillment
	return toSerialize, nil
}

type NullableReadGroups struct {
	value *ReadGroups
	isSet bool
}

func (v NullableReadGroups) Get() *ReadGroups {
	return v.value
}

func (v *NullableReadGroups) Set(val *ReadGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableReadGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableReadGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadGroups(val *ReadGroups) *NullableReadGroups {
	return &NullableReadGroups{value: val, isSet: true}
}

func (v NullableReadGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
