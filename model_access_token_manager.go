/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AccessTokenManager type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTokenManager{}

// AccessTokenManager struct for AccessTokenManager
type AccessTokenManager struct {
	// The ID of the plugin instance. The ID cannot be modified once the instance is created.<br>Note: Ignored when specifying a connection's adapter override.
	Id string `json:"id"`
	// The plugin instance name. The name can be modified once the instance is created.<br>Note: Ignored when specifying a connection's adapter override.
	Name                      string                        `json:"name"`
	PluginDescriptorRef       ResourceLink                  `json:"pluginDescriptorRef"`
	ParentRef                 *ResourceLink                 `json:"parentRef,omitempty"`
	Configuration             PluginConfiguration           `json:"configuration"`
	AttributeContract         *AccessTokenAttributeContract `json:"attributeContract,omitempty"`
	SelectionSettings         *AtmSelectionSettings         `json:"selectionSettings,omitempty"`
	AccessControlSettings     *AtmAccessControlSettings     `json:"accessControlSettings,omitempty"`
	SessionValidationSettings *SessionValidationSettings    `json:"sessionValidationSettings,omitempty"`
	// Number added to an access token to identify which Access Token Manager issued the token.
	SequenceNumber *int64 `json:"sequenceNumber,omitempty"`
}

// NewAccessTokenManager instantiates a new AccessTokenManager object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenManager(id string, name string, pluginDescriptorRef ResourceLink, configuration PluginConfiguration) *AccessTokenManager {
	this := AccessTokenManager{}
	this.Id = id
	this.Name = name
	this.PluginDescriptorRef = pluginDescriptorRef
	this.Configuration = configuration
	return &this
}

// NewAccessTokenManagerWithDefaults instantiates a new AccessTokenManager object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenManagerWithDefaults() *AccessTokenManager {
	this := AccessTokenManager{}
	return &this
}

// GetId returns the Id field value
func (o *AccessTokenManager) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccessTokenManager) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AccessTokenManager) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccessTokenManager) SetName(v string) {
	o.Name = v
}

// GetPluginDescriptorRef returns the PluginDescriptorRef field value
func (o *AccessTokenManager) GetPluginDescriptorRef() ResourceLink {
	if o == nil {
		var ret ResourceLink
		return ret
	}

	return o.PluginDescriptorRef
}

// GetPluginDescriptorRefOk returns a tuple with the PluginDescriptorRef field value
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetPluginDescriptorRefOk() (*ResourceLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluginDescriptorRef, true
}

// SetPluginDescriptorRef sets field value
func (o *AccessTokenManager) SetPluginDescriptorRef(v ResourceLink) {
	o.PluginDescriptorRef = v
}

// GetParentRef returns the ParentRef field value if set, zero value otherwise.
func (o *AccessTokenManager) GetParentRef() ResourceLink {
	if o == nil || IsNil(o.ParentRef) {
		var ret ResourceLink
		return ret
	}
	return *o.ParentRef
}

// GetParentRefOk returns a tuple with the ParentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetParentRefOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.ParentRef) {
		return nil, false
	}
	return o.ParentRef, true
}

// HasParentRef returns a boolean if a field has been set.
func (o *AccessTokenManager) HasParentRef() bool {
	if o != nil && !IsNil(o.ParentRef) {
		return true
	}

	return false
}

// SetParentRef gets a reference to the given ResourceLink and assigns it to the ParentRef field.
func (o *AccessTokenManager) SetParentRef(v ResourceLink) {
	o.ParentRef = &v
}

// GetConfiguration returns the Configuration field value
func (o *AccessTokenManager) GetConfiguration() PluginConfiguration {
	if o == nil {
		var ret PluginConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetConfigurationOk() (*PluginConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *AccessTokenManager) SetConfiguration(v PluginConfiguration) {
	o.Configuration = v
}

// GetAttributeContract returns the AttributeContract field value if set, zero value otherwise.
func (o *AccessTokenManager) GetAttributeContract() AccessTokenAttributeContract {
	if o == nil || IsNil(o.AttributeContract) {
		var ret AccessTokenAttributeContract
		return ret
	}
	return *o.AttributeContract
}

// GetAttributeContractOk returns a tuple with the AttributeContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetAttributeContractOk() (*AccessTokenAttributeContract, bool) {
	if o == nil || IsNil(o.AttributeContract) {
		return nil, false
	}
	return o.AttributeContract, true
}

// HasAttributeContract returns a boolean if a field has been set.
func (o *AccessTokenManager) HasAttributeContract() bool {
	if o != nil && !IsNil(o.AttributeContract) {
		return true
	}

	return false
}

// SetAttributeContract gets a reference to the given AccessTokenAttributeContract and assigns it to the AttributeContract field.
func (o *AccessTokenManager) SetAttributeContract(v AccessTokenAttributeContract) {
	o.AttributeContract = &v
}

// GetSelectionSettings returns the SelectionSettings field value if set, zero value otherwise.
func (o *AccessTokenManager) GetSelectionSettings() AtmSelectionSettings {
	if o == nil || IsNil(o.SelectionSettings) {
		var ret AtmSelectionSettings
		return ret
	}
	return *o.SelectionSettings
}

// GetSelectionSettingsOk returns a tuple with the SelectionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetSelectionSettingsOk() (*AtmSelectionSettings, bool) {
	if o == nil || IsNil(o.SelectionSettings) {
		return nil, false
	}
	return o.SelectionSettings, true
}

// HasSelectionSettings returns a boolean if a field has been set.
func (o *AccessTokenManager) HasSelectionSettings() bool {
	if o != nil && !IsNil(o.SelectionSettings) {
		return true
	}

	return false
}

// SetSelectionSettings gets a reference to the given AtmSelectionSettings and assigns it to the SelectionSettings field.
func (o *AccessTokenManager) SetSelectionSettings(v AtmSelectionSettings) {
	o.SelectionSettings = &v
}

// GetAccessControlSettings returns the AccessControlSettings field value if set, zero value otherwise.
func (o *AccessTokenManager) GetAccessControlSettings() AtmAccessControlSettings {
	if o == nil || IsNil(o.AccessControlSettings) {
		var ret AtmAccessControlSettings
		return ret
	}
	return *o.AccessControlSettings
}

// GetAccessControlSettingsOk returns a tuple with the AccessControlSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetAccessControlSettingsOk() (*AtmAccessControlSettings, bool) {
	if o == nil || IsNil(o.AccessControlSettings) {
		return nil, false
	}
	return o.AccessControlSettings, true
}

// HasAccessControlSettings returns a boolean if a field has been set.
func (o *AccessTokenManager) HasAccessControlSettings() bool {
	if o != nil && !IsNil(o.AccessControlSettings) {
		return true
	}

	return false
}

// SetAccessControlSettings gets a reference to the given AtmAccessControlSettings and assigns it to the AccessControlSettings field.
func (o *AccessTokenManager) SetAccessControlSettings(v AtmAccessControlSettings) {
	o.AccessControlSettings = &v
}

// GetSessionValidationSettings returns the SessionValidationSettings field value if set, zero value otherwise.
func (o *AccessTokenManager) GetSessionValidationSettings() SessionValidationSettings {
	if o == nil || IsNil(o.SessionValidationSettings) {
		var ret SessionValidationSettings
		return ret
	}
	return *o.SessionValidationSettings
}

// GetSessionValidationSettingsOk returns a tuple with the SessionValidationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetSessionValidationSettingsOk() (*SessionValidationSettings, bool) {
	if o == nil || IsNil(o.SessionValidationSettings) {
		return nil, false
	}
	return o.SessionValidationSettings, true
}

// HasSessionValidationSettings returns a boolean if a field has been set.
func (o *AccessTokenManager) HasSessionValidationSettings() bool {
	if o != nil && !IsNil(o.SessionValidationSettings) {
		return true
	}

	return false
}

// SetSessionValidationSettings gets a reference to the given SessionValidationSettings and assigns it to the SessionValidationSettings field.
func (o *AccessTokenManager) SetSessionValidationSettings(v SessionValidationSettings) {
	o.SessionValidationSettings = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *AccessTokenManager) GetSequenceNumber() int64 {
	if o == nil || IsNil(o.SequenceNumber) {
		var ret int64
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenManager) GetSequenceNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.SequenceNumber) {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *AccessTokenManager) HasSequenceNumber() bool {
	if o != nil && !IsNil(o.SequenceNumber) {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int64 and assigns it to the SequenceNumber field.
func (o *AccessTokenManager) SetSequenceNumber(v int64) {
	o.SequenceNumber = &v
}

func (o AccessTokenManager) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTokenManager) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["pluginDescriptorRef"] = o.PluginDescriptorRef
	if !IsNil(o.ParentRef) {
		toSerialize["parentRef"] = o.ParentRef
	}
	toSerialize["configuration"] = o.Configuration
	if !IsNil(o.AttributeContract) {
		toSerialize["attributeContract"] = o.AttributeContract
	}
	if !IsNil(o.SelectionSettings) {
		toSerialize["selectionSettings"] = o.SelectionSettings
	}
	if !IsNil(o.AccessControlSettings) {
		toSerialize["accessControlSettings"] = o.AccessControlSettings
	}
	if !IsNil(o.SessionValidationSettings) {
		toSerialize["sessionValidationSettings"] = o.SessionValidationSettings
	}
	if !IsNil(o.SequenceNumber) {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	return toSerialize, nil
}

type NullableAccessTokenManager struct {
	value *AccessTokenManager
	isSet bool
}

func (v NullableAccessTokenManager) Get() *AccessTokenManager {
	return v.value
}

func (v *NullableAccessTokenManager) Set(val *AccessTokenManager) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenManager) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenManager) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenManager(val *AccessTokenManager) *NullableAccessTokenManager {
	return &NullableAccessTokenManager{value: val, isSet: true}
}

func (v NullableAccessTokenManager) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenManager) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
