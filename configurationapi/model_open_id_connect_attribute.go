/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the OpenIdConnectAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenIdConnectAttribute{}

// OpenIdConnectAttribute An attribute for the OpenID Connect returned to OAuth clients.
type OpenIdConnectAttribute struct {
	// The name of this attribute.
	Name string `json:"name" tfsdk:"name"`
	// Attribute is included in the ID Token.
	IncludeInIdToken *bool `json:"includeInIdToken,omitempty" tfsdk:"include_in_id_token"`
	// Attribute is included in the User Info.
	IncludeInUserInfo *bool `json:"includeInUserInfo,omitempty" tfsdk:"include_in_user_info"`
	// Indicates whether attribute value is always returned as an array.
	MultiValued *bool `json:"multiValued,omitempty" tfsdk:"multi_valued"`
}

// NewOpenIdConnectAttribute instantiates a new OpenIdConnectAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenIdConnectAttribute(name string) *OpenIdConnectAttribute {
	this := OpenIdConnectAttribute{}
	this.Name = name
	return &this
}

// NewOpenIdConnectAttributeWithDefaults instantiates a new OpenIdConnectAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenIdConnectAttributeWithDefaults() *OpenIdConnectAttribute {
	this := OpenIdConnectAttribute{}
	return &this
}

// GetName returns the Name field value
func (o *OpenIdConnectAttribute) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OpenIdConnectAttribute) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OpenIdConnectAttribute) SetName(v string) {
	o.Name = v
}

// GetIncludeInIdToken returns the IncludeInIdToken field value if set, zero value otherwise.
func (o *OpenIdConnectAttribute) GetIncludeInIdToken() bool {
	if o == nil || IsNil(o.IncludeInIdToken) {
		var ret bool
		return ret
	}
	return *o.IncludeInIdToken
}

// GetIncludeInIdTokenOk returns a tuple with the IncludeInIdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenIdConnectAttribute) GetIncludeInIdTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeInIdToken) {
		return nil, false
	}
	return o.IncludeInIdToken, true
}

// HasIncludeInIdToken returns a boolean if a field has been set.
func (o *OpenIdConnectAttribute) HasIncludeInIdToken() bool {
	if o != nil && !IsNil(o.IncludeInIdToken) {
		return true
	}

	return false
}

// SetIncludeInIdToken gets a reference to the given bool and assigns it to the IncludeInIdToken field.
func (o *OpenIdConnectAttribute) SetIncludeInIdToken(v bool) {
	o.IncludeInIdToken = &v
}

// GetIncludeInUserInfo returns the IncludeInUserInfo field value if set, zero value otherwise.
func (o *OpenIdConnectAttribute) GetIncludeInUserInfo() bool {
	if o == nil || IsNil(o.IncludeInUserInfo) {
		var ret bool
		return ret
	}
	return *o.IncludeInUserInfo
}

// GetIncludeInUserInfoOk returns a tuple with the IncludeInUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenIdConnectAttribute) GetIncludeInUserInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeInUserInfo) {
		return nil, false
	}
	return o.IncludeInUserInfo, true
}

// HasIncludeInUserInfo returns a boolean if a field has been set.
func (o *OpenIdConnectAttribute) HasIncludeInUserInfo() bool {
	if o != nil && !IsNil(o.IncludeInUserInfo) {
		return true
	}

	return false
}

// SetIncludeInUserInfo gets a reference to the given bool and assigns it to the IncludeInUserInfo field.
func (o *OpenIdConnectAttribute) SetIncludeInUserInfo(v bool) {
	o.IncludeInUserInfo = &v
}

// GetMultiValued returns the MultiValued field value if set, zero value otherwise.
func (o *OpenIdConnectAttribute) GetMultiValued() bool {
	if o == nil || IsNil(o.MultiValued) {
		var ret bool
		return ret
	}
	return *o.MultiValued
}

// GetMultiValuedOk returns a tuple with the MultiValued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenIdConnectAttribute) GetMultiValuedOk() (*bool, bool) {
	if o == nil || IsNil(o.MultiValued) {
		return nil, false
	}
	return o.MultiValued, true
}

// HasMultiValued returns a boolean if a field has been set.
func (o *OpenIdConnectAttribute) HasMultiValued() bool {
	if o != nil && !IsNil(o.MultiValued) {
		return true
	}

	return false
}

// SetMultiValued gets a reference to the given bool and assigns it to the MultiValued field.
func (o *OpenIdConnectAttribute) SetMultiValued(v bool) {
	o.MultiValued = &v
}

func (o OpenIdConnectAttribute) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenIdConnectAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.IncludeInIdToken) {
		toSerialize["includeInIdToken"] = o.IncludeInIdToken
	}
	if !IsNil(o.IncludeInUserInfo) {
		toSerialize["includeInUserInfo"] = o.IncludeInUserInfo
	}
	if !IsNil(o.MultiValued) {
		toSerialize["multiValued"] = o.MultiValued
	}
	return toSerialize, nil
}

type NullableOpenIdConnectAttribute struct {
	value *OpenIdConnectAttribute
	isSet bool
}

func (v NullableOpenIdConnectAttribute) Get() *OpenIdConnectAttribute {
	return v.value
}

func (v *NullableOpenIdConnectAttribute) Set(val *OpenIdConnectAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenIdConnectAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenIdConnectAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenIdConnectAttribute(val *OpenIdConnectAttribute) *NullableOpenIdConnectAttribute {
	return &NullableOpenIdConnectAttribute{value: val, isSet: true}
}

func (v NullableOpenIdConnectAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenIdConnectAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
