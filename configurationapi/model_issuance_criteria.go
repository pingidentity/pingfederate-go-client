/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the IssuanceCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssuanceCriteria{}

// IssuanceCriteria A list of criteria that determines whether a transaction (usually a SSO transaction) is continued. All criteria must pass in order for the transaction to continue.
type IssuanceCriteria struct {
	// A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
	ConditionalCriteria []ConditionalIssuanceCriteriaEntry `json:"conditionalCriteria,omitempty" tfsdk:"conditional_criteria"`
	// A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
	ExpressionCriteria []ExpressionIssuanceCriteriaEntry `json:"expressionCriteria,omitempty" tfsdk:"expression_criteria"`
}

// NewIssuanceCriteria instantiates a new IssuanceCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuanceCriteria() *IssuanceCriteria {
	this := IssuanceCriteria{}
	return &this
}

// NewIssuanceCriteriaWithDefaults instantiates a new IssuanceCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuanceCriteriaWithDefaults() *IssuanceCriteria {
	this := IssuanceCriteria{}
	return &this
}

// GetConditionalCriteria returns the ConditionalCriteria field value if set, zero value otherwise.
func (o *IssuanceCriteria) GetConditionalCriteria() []ConditionalIssuanceCriteriaEntry {
	if o == nil || IsNil(o.ConditionalCriteria) {
		var ret []ConditionalIssuanceCriteriaEntry
		return ret
	}
	return o.ConditionalCriteria
}

// GetConditionalCriteriaOk returns a tuple with the ConditionalCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuanceCriteria) GetConditionalCriteriaOk() ([]ConditionalIssuanceCriteriaEntry, bool) {
	if o == nil || IsNil(o.ConditionalCriteria) {
		return nil, false
	}
	return o.ConditionalCriteria, true
}

// HasConditionalCriteria returns a boolean if a field has been set.
func (o *IssuanceCriteria) HasConditionalCriteria() bool {
	if o != nil && !IsNil(o.ConditionalCriteria) {
		return true
	}

	return false
}

// SetConditionalCriteria gets a reference to the given []ConditionalIssuanceCriteriaEntry and assigns it to the ConditionalCriteria field.
func (o *IssuanceCriteria) SetConditionalCriteria(v []ConditionalIssuanceCriteriaEntry) {
	o.ConditionalCriteria = v
}

// GetExpressionCriteria returns the ExpressionCriteria field value if set, zero value otherwise.
func (o *IssuanceCriteria) GetExpressionCriteria() []ExpressionIssuanceCriteriaEntry {
	if o == nil || IsNil(o.ExpressionCriteria) {
		var ret []ExpressionIssuanceCriteriaEntry
		return ret
	}
	return o.ExpressionCriteria
}

// GetExpressionCriteriaOk returns a tuple with the ExpressionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuanceCriteria) GetExpressionCriteriaOk() ([]ExpressionIssuanceCriteriaEntry, bool) {
	if o == nil || IsNil(o.ExpressionCriteria) {
		return nil, false
	}
	return o.ExpressionCriteria, true
}

// HasExpressionCriteria returns a boolean if a field has been set.
func (o *IssuanceCriteria) HasExpressionCriteria() bool {
	if o != nil && !IsNil(o.ExpressionCriteria) {
		return true
	}

	return false
}

// SetExpressionCriteria gets a reference to the given []ExpressionIssuanceCriteriaEntry and assigns it to the ExpressionCriteria field.
func (o *IssuanceCriteria) SetExpressionCriteria(v []ExpressionIssuanceCriteriaEntry) {
	o.ExpressionCriteria = v
}

func (o IssuanceCriteria) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssuanceCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConditionalCriteria) {
		toSerialize["conditionalCriteria"] = o.ConditionalCriteria
	}
	if !IsNil(o.ExpressionCriteria) {
		toSerialize["expressionCriteria"] = o.ExpressionCriteria
	}
	return toSerialize, nil
}

type NullableIssuanceCriteria struct {
	value *IssuanceCriteria
	isSet bool
}

func (v NullableIssuanceCriteria) Get() *IssuanceCriteria {
	return v.value
}

func (v *NullableIssuanceCriteria) Set(val *IssuanceCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuanceCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuanceCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuanceCriteria(val *IssuanceCriteria) *NullableIssuanceCriteria {
	return &NullableIssuanceCriteria{value: val, isSet: true}
}

func (v NullableIssuanceCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuanceCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
