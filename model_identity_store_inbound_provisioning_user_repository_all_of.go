/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the IdentityStoreInboundProvisioningUserRepositoryAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityStoreInboundProvisioningUserRepositoryAllOf{}

// IdentityStoreInboundProvisioningUserRepositoryAllOf Identity Store Provisioner data store user repository.
type IdentityStoreInboundProvisioningUserRepositoryAllOf struct {
	IdentityStoreProvisionerRef ResourceLink `json:"identityStoreProvisionerRef" tfsdk:"identity_store_provisioner_ref"`
}

// NewIdentityStoreInboundProvisioningUserRepositoryAllOf instantiates a new IdentityStoreInboundProvisioningUserRepositoryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityStoreInboundProvisioningUserRepositoryAllOf(identityStoreProvisionerRef ResourceLink) *IdentityStoreInboundProvisioningUserRepositoryAllOf {
	this := IdentityStoreInboundProvisioningUserRepositoryAllOf{}
	this.IdentityStoreProvisionerRef = identityStoreProvisionerRef
	return &this
}

// NewIdentityStoreInboundProvisioningUserRepositoryAllOfWithDefaults instantiates a new IdentityStoreInboundProvisioningUserRepositoryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityStoreInboundProvisioningUserRepositoryAllOfWithDefaults() *IdentityStoreInboundProvisioningUserRepositoryAllOf {
	this := IdentityStoreInboundProvisioningUserRepositoryAllOf{}
	return &this
}

// GetIdentityStoreProvisionerRef returns the IdentityStoreProvisionerRef field value
func (o *IdentityStoreInboundProvisioningUserRepositoryAllOf) GetIdentityStoreProvisionerRef() ResourceLink {
	if o == nil {
		var ret ResourceLink
		return ret
	}

	return o.IdentityStoreProvisionerRef
}

// GetIdentityStoreProvisionerRefOk returns a tuple with the IdentityStoreProvisionerRef field value
// and a boolean to check if the value has been set.
func (o *IdentityStoreInboundProvisioningUserRepositoryAllOf) GetIdentityStoreProvisionerRefOk() (*ResourceLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityStoreProvisionerRef, true
}

// SetIdentityStoreProvisionerRef sets field value
func (o *IdentityStoreInboundProvisioningUserRepositoryAllOf) SetIdentityStoreProvisionerRef(v ResourceLink) {
	o.IdentityStoreProvisionerRef = v
}

func (o IdentityStoreInboundProvisioningUserRepositoryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityStoreInboundProvisioningUserRepositoryAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identityStoreProvisionerRef"] = o.IdentityStoreProvisionerRef
	return toSerialize, nil
}

type NullableIdentityStoreInboundProvisioningUserRepositoryAllOf struct {
	value *IdentityStoreInboundProvisioningUserRepositoryAllOf
	isSet bool
}

func (v NullableIdentityStoreInboundProvisioningUserRepositoryAllOf) Get() *IdentityStoreInboundProvisioningUserRepositoryAllOf {
	return v.value
}

func (v *NullableIdentityStoreInboundProvisioningUserRepositoryAllOf) Set(val *IdentityStoreInboundProvisioningUserRepositoryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityStoreInboundProvisioningUserRepositoryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityStoreInboundProvisioningUserRepositoryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityStoreInboundProvisioningUserRepositoryAllOf(val *IdentityStoreInboundProvisioningUserRepositoryAllOf) *NullableIdentityStoreInboundProvisioningUserRepositoryAllOf {
	return &NullableIdentityStoreInboundProvisioningUserRepositoryAllOf{value: val, isSet: true}
}

func (v NullableIdentityStoreInboundProvisioningUserRepositoryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityStoreInboundProvisioningUserRepositoryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
