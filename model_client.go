/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"time"
)

// checks if the Client type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Client{}

// Client OAuth client.
type Client struct {
	// A unique identifier the client provides to the Resource Server to identify itself. This identifier is included with every request the client makes. For PUT requests, this field is optional and it will be overridden by the 'id' parameter of the PUT request.
	ClientId string `json:"clientId"`
	// Specifies whether the client is enabled. The default value is true.
	Enabled *bool `json:"enabled,omitempty"`
	// URIs to which the OAuth AS may redirect the resource owner's user agent after authorization is obtained. A redirection URI is used with the Authorization Code and Implicit grant types. Wildcards are allowed. However, for security reasons, make the URL as restrictive as possible.For example: https://_*.company.com/_* Important: If more than one URI is added or if a single URI uses wildcards, then Authorization Code grant and token requests must contain a specific matching redirect uri parameter.
	RedirectUris []string `json:"redirectUris,omitempty"`
	// The grant types allowed for this client. The EXTENSION grant type applies to SAML/JWT assertion grants.
	GrantTypes []string `json:"grantTypes"`
	// A descriptive name for the client instance. This name appears when the user is prompted for authorization.
	Name string `json:"name"`
	// A description of what the client application does. This description appears when the user is prompted for authorization.
	Description *string `json:"description,omitempty"`
	// The time at which the client was last changed. This property is read only and is ignored on PUT and POST requests.
	ModificationDate *time.Time `json:"modificationDate,omitempty"`
	// The time at which the client was created. This property is read only and is ignored on PUT and POST requests.
	CreationDate *time.Time `json:"creationDate,omitempty"`
	// The location of the logo used on user-facing OAuth grant authorization and revocation pages.
	LogoUrl                      *string       `json:"logoUrl,omitempty"`
	DefaultAccessTokenManagerRef *ResourceLink `json:"defaultAccessTokenManagerRef,omitempty"`
	// Determines whether the client is restricted to using only its default access token manager. The default is false.
	RestrictToDefaultAccessTokenManager *bool `json:"restrictToDefaultAccessTokenManager,omitempty"`
	// Validates token using all eligible access token managers for the client. This setting is ignored if 'restrictToDefaultAccessTokenManager' is set to true.
	ValidateUsingAllEligibleAtms *bool `json:"validateUsingAllEligibleAtms,omitempty"`
	// Use ROLL or DONT_ROLL to override the Roll Refresh Token Values setting on the Authorization Server Settings. SERVER_DEFAULT will default to the Roll Refresh Token Values setting on the Authorization Server Setting screen. Defaults to SERVER_DEFAULT.
	RefreshRolling *string `json:"refreshRolling,omitempty"`
	// Use OVERRIDE_SERVER_DEFAULT to override the Refresh Token Rolling Interval value on the Authorization Server Settings. SERVER_DEFAULT will default to the Refresh Token Rolling Interval value on the Authorization Server Setting. Defaults to SERVER_DEFAULT.
	RefreshTokenRollingIntervalType *string `json:"refreshTokenRollingIntervalType,omitempty"`
	// The minimum interval to roll refresh tokens, in hours. This value will override the Refresh Token Rolling Interval Value on the Authorization Server Settings.
	RefreshTokenRollingInterval *int64 `json:"refreshTokenRollingInterval,omitempty"`
	// Allows an administrator to override the Persistent Grant Lifetime set globally for the OAuth AS. Defaults to SERVER_DEFAULT.
	PersistentGrantExpirationType *string `json:"persistentGrantExpirationType,omitempty"`
	// The persistent grant expiration time. -1 indicates an indefinite amount of time.
	PersistentGrantExpirationTime *int64 `json:"persistentGrantExpirationTime,omitempty"`
	// The persistent grant expiration time unit.
	PersistentGrantExpirationTimeUnit *string `json:"persistentGrantExpirationTimeUnit,omitempty"`
	// Allows an administrator to override the Persistent Grant Idle Timeout set globally for the OAuth AS. Defaults to SERVER_DEFAULT.
	PersistentGrantIdleTimeoutType *string `json:"persistentGrantIdleTimeoutType,omitempty"`
	// The persistent grant idle timeout.
	PersistentGrantIdleTimeout *int64 `json:"persistentGrantIdleTimeout,omitempty"`
	// The persistent grant idle timeout time unit.
	PersistentGrantIdleTimeoutTimeUnit *string `json:"persistentGrantIdleTimeoutTimeUnit,omitempty"`
	// Allows and administrator to override the Reuse Existing Persistent Access Grants for Grant Types set globally for OAuth AS. Defaults to SERVER_DEFAULT.
	PersistentGrantReuseType *string `json:"persistentGrantReuseType,omitempty"`
	// The grant types that the OAuth AS can reuse rather than creating a new grant for each request. This value will override the Reuse Existing Persistent Access Grants for Grant Types on the Authorization Server Settings. Only 'IMPLICIT' or 'AUTHORIZATION_CODE' or 'RESOURCE_OWNER_CREDENTIALS' are valid grant types.
	PersistentGrantReuseGrantTypes []string `json:"persistentGrantReuseGrantTypes,omitempty"`
	// Set to true to allow this client to initiate the authentication API redirectless flow.
	AllowAuthenticationApiInit *bool `json:"allowAuthenticationApiInit,omitempty"`
	// Use this setting, for example, when you want to deploy a trusted application and authenticate end users via an IdP adapter or IdP connection.
	BypassApprovalPage *bool `json:"bypassApprovalPage,omitempty"`
	// Restricts this client's access to specific scopes.
	RestrictScopes *bool `json:"restrictScopes,omitempty"`
	// The scopes available for this client.
	RestrictedScopes []string `json:"restrictedScopes,omitempty"`
	// The exclusive scopes available for this client.
	ExclusiveScopes []string `json:"exclusiveScopes,omitempty"`
	// The authorization detail types available for this client.
	AuthorizationDetailTypes []string `json:"authorizationDetailTypes,omitempty"`
	// The response types allowed for this client. If omitted all response types are available to the client.
	RestrictedResponseTypes []string `json:"restrictedResponseTypes,omitempty"`
	// Determines whether pushed authorization requests are required when initiating an authorization request. The default is false.
	RequirePushedAuthorizationRequests *bool `json:"requirePushedAuthorizationRequests,omitempty"`
	// Determines whether JWT Secured authorization response mode is required when initiating an authorization request. The default is false.
	RequireJwtSecuredAuthorizationResponseMode *bool `json:"requireJwtSecuredAuthorizationResponseMode,omitempty"`
	// Determines whether signed requests are required for this client
	RequireSignedRequests *bool `json:"requireSignedRequests,omitempty"`
	// The JSON Web Signature [JWS] algorithm that must be used to sign the Request Object. All signing algorithms are allowed if value is not present <br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11.
	RequestObjectSigningAlgorithm *string           `json:"requestObjectSigningAlgorithm,omitempty"`
	OidcPolicy                    *ClientOIDCPolicy `json:"oidcPolicy,omitempty"`
	ClientAuth                    *ClientAuth       `json:"clientAuth,omitempty"`
	JwksSettings                  *JwksSettings     `json:"jwksSettings,omitempty"`
	// OAuth Client Metadata can be extended to use custom Client Metadata Parameters. The names of these custom parameters should be defined in /extendedProperties.
	ExtendedParameters *map[string]ParameterValues `json:"extendedParameters,omitempty"`
	// Allows an administrator to override the Device Authorization Settings set globally for the OAuth AS. Defaults to SERVER_DEFAULT.
	DeviceFlowSettingType *string `json:"deviceFlowSettingType,omitempty"`
	// The URL used as 'verification_url' and 'verification_url_complete' values in a Device Authorization request. This property overrides the 'userAuthorizationUrl' value present in Authorization Server Settings.
	UserAuthorizationUrlOverride *string `json:"userAuthorizationUrlOverride,omitempty"`
	// The 'device_code' and 'user_code' timeout, in seconds. This overrides the 'pendingAuthorizationTimeout' value present in Authorization Server Settings.
	PendingAuthorizationTimeoutOverride *int64 `json:"pendingAuthorizationTimeoutOverride,omitempty"`
	// The amount of time client should wait between polling requests, in seconds. This overrides the 'devicePollingInterval' value present in Authorization Server Settings.
	DevicePollingIntervalOverride *int64 `json:"devicePollingIntervalOverride,omitempty"`
	// Indicates if the Activation Code Confirmation page should be bypassed if 'verification_url_complete' is used by the end user to authorize a device. This overrides the 'bypassUseCodeConfirmation' value present in Authorization Server Settings.
	BypassActivationCodeConfirmationOverride *bool `json:"bypassActivationCodeConfirmationOverride,omitempty"`
	// Determines whether Proof Key for Code Exchange (PKCE) is required for this client.
	RequireProofKeyForCodeExchange *bool `json:"requireProofKeyForCodeExchange,omitempty"`
	// The token delivery mode for the client.  The default value is 'POLL'.
	CibaDeliveryMode *string `json:"cibaDeliveryMode,omitempty"`
	// The endpoint the OP will call after a successful or failed end-user authentication.
	CibaNotificationEndpoint *string `json:"cibaNotificationEndpoint,omitempty"`
	// The minimum amount of time in seconds that the Client must wait between polling requests to the token endpoint. The default is 3 seconds.
	CibaPollingInterval *int64 `json:"cibaPollingInterval,omitempty"`
	// Determines whether CIBA signed requests are required for this client.
	CibaRequireSignedRequests *bool `json:"cibaRequireSignedRequests,omitempty"`
	// The JSON Web Signature [JWS] algorithm that must be used to sign the CIBA Request Object. All signing algorithms are allowed if value is not present <br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11.
	CibaRequestObjectSigningAlgorithm *string `json:"cibaRequestObjectSigningAlgorithm,omitempty"`
	// Determines whether CIBA user code is supported for this client.
	CibaUserCodeSupported           *bool         `json:"cibaUserCodeSupported,omitempty"`
	RequestPolicyRef                *ResourceLink `json:"requestPolicyRef,omitempty"`
	TokenExchangeProcessorPolicyRef *ResourceLink `json:"tokenExchangeProcessorPolicyRef,omitempty"`
	// When specified, it overrides the global Refresh Token Grace Period defined in the Authorization Server Settings. The default value is SERVER_DEFAULT
	RefreshTokenRollingGracePeriodType *string `json:"refreshTokenRollingGracePeriodType,omitempty"`
	// The grace period that a rolled refresh token remains valid in seconds.
	RefreshTokenRollingGracePeriod *int64 `json:"refreshTokenRollingGracePeriod,omitempty"`
	// Use OVERRIDE_SERVER_DEFAULT to override the Client Secret Retention Period value on the Authorization Server Settings. SERVER_DEFAULT will default to the Client Secret Retention Period value on the Authorization Server Setting. Defaults to SERVER_DEFAULT.
	ClientSecretRetentionPeriodType *string `json:"clientSecretRetentionPeriodType,omitempty"`
	// The length of time in minutes that client secrets will be retained as secondary secrets after secret change. The default value is 0, which will disable secondary client secret retention. This value will override the Client Secret Retention Period value on the Authorization Server Settings.
	ClientSecretRetentionPeriod *int64 `json:"clientSecretRetentionPeriod,omitempty"`
	// The time at which the client secret was last changed. This property is read only and is ignored on PUT and POST requests.
	ClientSecretChangedTime *time.Time `json:"clientSecretChangedTime,omitempty"`
	// The JSON Web Signature [JWS] algorithm required to sign the Token Introspection Response.<br>HS256 - HMAC using SHA-256<br>HS384 - HMAC using SHA-384<br>HS512 - HMAC using SHA-512<br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>A null value will represent the default algorithm which is RS256.<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11
	TokenIntrospectionSigningAlgorithm *string `json:"tokenIntrospectionSigningAlgorithm,omitempty"`
	// The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content-encryption key of the Token Introspection Response.<br>DIR - Direct Encryption with symmetric key<br>A128KW - AES-128 Key Wrap<br>A192KW - AES-192 Key Wrap<br>A256KW - AES-256 Key Wrap<br>A128GCMKW - AES-GCM-128 key encryption<br>A192GCMKW - AES-GCM-192 key encryption<br>A256GCMKW - AES-GCM-256 key encryption<br>ECDH_ES - ECDH-ES<br>ECDH_ES_A128KW - ECDH-ES with AES-128 Key Wrap<br>ECDH_ES_A192KW - ECDH-ES with AES-192 Key Wrap<br>ECDH_ES_A256KW - ECDH-ES with AES-256 Key Wrap<br>RSA_OAEP - RSAES OAEP<br>RSA_OAEP_256 - RSAES OAEP using SHA-256 and MGF1 with SHA-256
	TokenIntrospectionEncryptionAlgorithm *string `json:"tokenIntrospectionEncryptionAlgorithm,omitempty"`
	// The JSON Web Encryption [JWE] content-encryption algorithm for the Token Introspection Response.<br>AES_128_CBC_HMAC_SHA_256 - Composite AES-CBC-128 HMAC-SHA-256<br>AES_192_CBC_HMAC_SHA_384 - Composite AES-CBC-192 HMAC-SHA-384<br>AES_256_CBC_HMAC_SHA_512 - Composite AES-CBC-256 HMAC-SHA-512<br>AES_128_GCM - AES-GCM-128<br>AES_192_GCM - AES-GCM-192<br>AES_256_GCM - AES-GCM-256
	TokenIntrospectionContentEncryptionAlgorithm *string `json:"tokenIntrospectionContentEncryptionAlgorithm,omitempty"`
	// The JSON Web Signature [JWS] algorithm required to sign the JWT Secured Authorization Response.<br>HS256 - HMAC using SHA-256<br>HS384 - HMAC using SHA-384<br>HS512 - HMAC using SHA-512<br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>A null value will represent the default algorithm which is RS256.<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11
	JwtSecuredAuthorizationResponseModeSigningAlgorithm *string `json:"jwtSecuredAuthorizationResponseModeSigningAlgorithm,omitempty"`
	// The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content-encryption key of the JWT Secured Authorization Response.<br>DIR - Direct Encryption with symmetric key<br>A128KW - AES-128 Key Wrap<br>A192KW - AES-192 Key Wrap<br>A256KW - AES-256 Key Wrap<br>A128GCMKW - AES-GCM-128 key encryption<br>A192GCMKW - AES-GCM-192 key encryption<br>A256GCMKW - AES-GCM-256 key encryption<br>ECDH_ES - ECDH-ES<br>ECDH_ES_A128KW - ECDH-ES with AES-128 Key Wrap<br>ECDH_ES_A192KW - ECDH-ES with AES-192 Key Wrap<br>ECDH_ES_A256KW - ECDH-ES with AES-256 Key Wrap<br>RSA_OAEP - RSAES OAEP<br>RSA_OAEP_256 - RSAES OAEP using SHA-256 and MGF1 with SHA-256
	JwtSecuredAuthorizationResponseModeEncryptionAlgorithm *string `json:"jwtSecuredAuthorizationResponseModeEncryptionAlgorithm,omitempty"`
	// The JSON Web Encryption [JWE] content-encryption algorithm for the JWT Secured Authorization Response.<br>AES_128_CBC_HMAC_SHA_256 - Composite AES-CBC-128 HMAC-SHA-256<br>AES_192_CBC_HMAC_SHA_384 - Composite AES-CBC-192 HMAC-SHA-384<br>AES_256_CBC_HMAC_SHA_512 - Composite AES-CBC-256 HMAC-SHA-512<br>AES_128_GCM - AES-GCM-128<br>AES_192_GCM - AES-GCM-192<br>AES_256_GCM - AES-GCM-256
	JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm *string `json:"jwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm,omitempty"`
}

// NewClient instantiates a new Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClient(clientId string, grantTypes []string, name string) *Client {
	this := Client{}
	this.ClientId = clientId
	this.GrantTypes = grantTypes
	this.Name = name
	return &this
}

// NewClientWithDefaults instantiates a new Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientWithDefaults() *Client {
	this := Client{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *Client) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *Client) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *Client) SetClientId(v string) {
	o.ClientId = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Client) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *Client) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Client) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *Client) GetRedirectUris() []string {
	if o == nil || IsNil(o.RedirectUris) {
		var ret []string
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRedirectUrisOk() ([]string, bool) {
	if o == nil || IsNil(o.RedirectUris) {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *Client) HasRedirectUris() bool {
	if o != nil && !IsNil(o.RedirectUris) {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []string and assigns it to the RedirectUris field.
func (o *Client) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

// GetGrantTypes returns the GrantTypes field value
func (o *Client) GetGrantTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GrantTypes
}

// GetGrantTypesOk returns a tuple with the GrantTypes field value
// and a boolean to check if the value has been set.
func (o *Client) GetGrantTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrantTypes, true
}

// SetGrantTypes sets field value
func (o *Client) SetGrantTypes(v []string) {
	o.GrantTypes = v
}

// GetName returns the Name field value
func (o *Client) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Client) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Client) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Client) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Client) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Client) SetDescription(v string) {
	o.Description = &v
}

// GetModificationDate returns the ModificationDate field value if set, zero value otherwise.
func (o *Client) GetModificationDate() time.Time {
	if o == nil || IsNil(o.ModificationDate) {
		var ret time.Time
		return ret
	}
	return *o.ModificationDate
}

// GetModificationDateOk returns a tuple with the ModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetModificationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModificationDate) {
		return nil, false
	}
	return o.ModificationDate, true
}

// HasModificationDate returns a boolean if a field has been set.
func (o *Client) HasModificationDate() bool {
	if o != nil && !IsNil(o.ModificationDate) {
		return true
	}

	return false
}

// SetModificationDate gets a reference to the given time.Time and assigns it to the ModificationDate field.
func (o *Client) SetModificationDate(v time.Time) {
	o.ModificationDate = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *Client) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *Client) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *Client) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *Client) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *Client) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *Client) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetDefaultAccessTokenManagerRef returns the DefaultAccessTokenManagerRef field value if set, zero value otherwise.
func (o *Client) GetDefaultAccessTokenManagerRef() ResourceLink {
	if o == nil || IsNil(o.DefaultAccessTokenManagerRef) {
		var ret ResourceLink
		return ret
	}
	return *o.DefaultAccessTokenManagerRef
}

// GetDefaultAccessTokenManagerRefOk returns a tuple with the DefaultAccessTokenManagerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetDefaultAccessTokenManagerRefOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.DefaultAccessTokenManagerRef) {
		return nil, false
	}
	return o.DefaultAccessTokenManagerRef, true
}

// HasDefaultAccessTokenManagerRef returns a boolean if a field has been set.
func (o *Client) HasDefaultAccessTokenManagerRef() bool {
	if o != nil && !IsNil(o.DefaultAccessTokenManagerRef) {
		return true
	}

	return false
}

// SetDefaultAccessTokenManagerRef gets a reference to the given ResourceLink and assigns it to the DefaultAccessTokenManagerRef field.
func (o *Client) SetDefaultAccessTokenManagerRef(v ResourceLink) {
	o.DefaultAccessTokenManagerRef = &v
}

// GetRestrictToDefaultAccessTokenManager returns the RestrictToDefaultAccessTokenManager field value if set, zero value otherwise.
func (o *Client) GetRestrictToDefaultAccessTokenManager() bool {
	if o == nil || IsNil(o.RestrictToDefaultAccessTokenManager) {
		var ret bool
		return ret
	}
	return *o.RestrictToDefaultAccessTokenManager
}

// GetRestrictToDefaultAccessTokenManagerOk returns a tuple with the RestrictToDefaultAccessTokenManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRestrictToDefaultAccessTokenManagerOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictToDefaultAccessTokenManager) {
		return nil, false
	}
	return o.RestrictToDefaultAccessTokenManager, true
}

// HasRestrictToDefaultAccessTokenManager returns a boolean if a field has been set.
func (o *Client) HasRestrictToDefaultAccessTokenManager() bool {
	if o != nil && !IsNil(o.RestrictToDefaultAccessTokenManager) {
		return true
	}

	return false
}

// SetRestrictToDefaultAccessTokenManager gets a reference to the given bool and assigns it to the RestrictToDefaultAccessTokenManager field.
func (o *Client) SetRestrictToDefaultAccessTokenManager(v bool) {
	o.RestrictToDefaultAccessTokenManager = &v
}

// GetValidateUsingAllEligibleAtms returns the ValidateUsingAllEligibleAtms field value if set, zero value otherwise.
func (o *Client) GetValidateUsingAllEligibleAtms() bool {
	if o == nil || IsNil(o.ValidateUsingAllEligibleAtms) {
		var ret bool
		return ret
	}
	return *o.ValidateUsingAllEligibleAtms
}

// GetValidateUsingAllEligibleAtmsOk returns a tuple with the ValidateUsingAllEligibleAtms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetValidateUsingAllEligibleAtmsOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateUsingAllEligibleAtms) {
		return nil, false
	}
	return o.ValidateUsingAllEligibleAtms, true
}

// HasValidateUsingAllEligibleAtms returns a boolean if a field has been set.
func (o *Client) HasValidateUsingAllEligibleAtms() bool {
	if o != nil && !IsNil(o.ValidateUsingAllEligibleAtms) {
		return true
	}

	return false
}

// SetValidateUsingAllEligibleAtms gets a reference to the given bool and assigns it to the ValidateUsingAllEligibleAtms field.
func (o *Client) SetValidateUsingAllEligibleAtms(v bool) {
	o.ValidateUsingAllEligibleAtms = &v
}

// GetRefreshRolling returns the RefreshRolling field value if set, zero value otherwise.
func (o *Client) GetRefreshRolling() string {
	if o == nil || IsNil(o.RefreshRolling) {
		var ret string
		return ret
	}
	return *o.RefreshRolling
}

// GetRefreshRollingOk returns a tuple with the RefreshRolling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRefreshRollingOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshRolling) {
		return nil, false
	}
	return o.RefreshRolling, true
}

// HasRefreshRolling returns a boolean if a field has been set.
func (o *Client) HasRefreshRolling() bool {
	if o != nil && !IsNil(o.RefreshRolling) {
		return true
	}

	return false
}

// SetRefreshRolling gets a reference to the given string and assigns it to the RefreshRolling field.
func (o *Client) SetRefreshRolling(v string) {
	o.RefreshRolling = &v
}

// GetRefreshTokenRollingIntervalType returns the RefreshTokenRollingIntervalType field value if set, zero value otherwise.
func (o *Client) GetRefreshTokenRollingIntervalType() string {
	if o == nil || IsNil(o.RefreshTokenRollingIntervalType) {
		var ret string
		return ret
	}
	return *o.RefreshTokenRollingIntervalType
}

// GetRefreshTokenRollingIntervalTypeOk returns a tuple with the RefreshTokenRollingIntervalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRefreshTokenRollingIntervalTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshTokenRollingIntervalType) {
		return nil, false
	}
	return o.RefreshTokenRollingIntervalType, true
}

// HasRefreshTokenRollingIntervalType returns a boolean if a field has been set.
func (o *Client) HasRefreshTokenRollingIntervalType() bool {
	if o != nil && !IsNil(o.RefreshTokenRollingIntervalType) {
		return true
	}

	return false
}

// SetRefreshTokenRollingIntervalType gets a reference to the given string and assigns it to the RefreshTokenRollingIntervalType field.
func (o *Client) SetRefreshTokenRollingIntervalType(v string) {
	o.RefreshTokenRollingIntervalType = &v
}

// GetRefreshTokenRollingInterval returns the RefreshTokenRollingInterval field value if set, zero value otherwise.
func (o *Client) GetRefreshTokenRollingInterval() int64 {
	if o == nil || IsNil(o.RefreshTokenRollingInterval) {
		var ret int64
		return ret
	}
	return *o.RefreshTokenRollingInterval
}

// GetRefreshTokenRollingIntervalOk returns a tuple with the RefreshTokenRollingInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRefreshTokenRollingIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.RefreshTokenRollingInterval) {
		return nil, false
	}
	return o.RefreshTokenRollingInterval, true
}

// HasRefreshTokenRollingInterval returns a boolean if a field has been set.
func (o *Client) HasRefreshTokenRollingInterval() bool {
	if o != nil && !IsNil(o.RefreshTokenRollingInterval) {
		return true
	}

	return false
}

// SetRefreshTokenRollingInterval gets a reference to the given int64 and assigns it to the RefreshTokenRollingInterval field.
func (o *Client) SetRefreshTokenRollingInterval(v int64) {
	o.RefreshTokenRollingInterval = &v
}

// GetPersistentGrantExpirationType returns the PersistentGrantExpirationType field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantExpirationType() string {
	if o == nil || IsNil(o.PersistentGrantExpirationType) {
		var ret string
		return ret
	}
	return *o.PersistentGrantExpirationType
}

// GetPersistentGrantExpirationTypeOk returns a tuple with the PersistentGrantExpirationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantExpirationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PersistentGrantExpirationType) {
		return nil, false
	}
	return o.PersistentGrantExpirationType, true
}

// HasPersistentGrantExpirationType returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantExpirationType() bool {
	if o != nil && !IsNil(o.PersistentGrantExpirationType) {
		return true
	}

	return false
}

// SetPersistentGrantExpirationType gets a reference to the given string and assigns it to the PersistentGrantExpirationType field.
func (o *Client) SetPersistentGrantExpirationType(v string) {
	o.PersistentGrantExpirationType = &v
}

// GetPersistentGrantExpirationTime returns the PersistentGrantExpirationTime field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantExpirationTime() int64 {
	if o == nil || IsNil(o.PersistentGrantExpirationTime) {
		var ret int64
		return ret
	}
	return *o.PersistentGrantExpirationTime
}

// GetPersistentGrantExpirationTimeOk returns a tuple with the PersistentGrantExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantExpirationTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.PersistentGrantExpirationTime) {
		return nil, false
	}
	return o.PersistentGrantExpirationTime, true
}

// HasPersistentGrantExpirationTime returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantExpirationTime() bool {
	if o != nil && !IsNil(o.PersistentGrantExpirationTime) {
		return true
	}

	return false
}

// SetPersistentGrantExpirationTime gets a reference to the given int64 and assigns it to the PersistentGrantExpirationTime field.
func (o *Client) SetPersistentGrantExpirationTime(v int64) {
	o.PersistentGrantExpirationTime = &v
}

// GetPersistentGrantExpirationTimeUnit returns the PersistentGrantExpirationTimeUnit field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantExpirationTimeUnit() string {
	if o == nil || IsNil(o.PersistentGrantExpirationTimeUnit) {
		var ret string
		return ret
	}
	return *o.PersistentGrantExpirationTimeUnit
}

// GetPersistentGrantExpirationTimeUnitOk returns a tuple with the PersistentGrantExpirationTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantExpirationTimeUnitOk() (*string, bool) {
	if o == nil || IsNil(o.PersistentGrantExpirationTimeUnit) {
		return nil, false
	}
	return o.PersistentGrantExpirationTimeUnit, true
}

// HasPersistentGrantExpirationTimeUnit returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantExpirationTimeUnit() bool {
	if o != nil && !IsNil(o.PersistentGrantExpirationTimeUnit) {
		return true
	}

	return false
}

// SetPersistentGrantExpirationTimeUnit gets a reference to the given string and assigns it to the PersistentGrantExpirationTimeUnit field.
func (o *Client) SetPersistentGrantExpirationTimeUnit(v string) {
	o.PersistentGrantExpirationTimeUnit = &v
}

// GetPersistentGrantIdleTimeoutType returns the PersistentGrantIdleTimeoutType field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantIdleTimeoutType() string {
	if o == nil || IsNil(o.PersistentGrantIdleTimeoutType) {
		var ret string
		return ret
	}
	return *o.PersistentGrantIdleTimeoutType
}

// GetPersistentGrantIdleTimeoutTypeOk returns a tuple with the PersistentGrantIdleTimeoutType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantIdleTimeoutTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PersistentGrantIdleTimeoutType) {
		return nil, false
	}
	return o.PersistentGrantIdleTimeoutType, true
}

// HasPersistentGrantIdleTimeoutType returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantIdleTimeoutType() bool {
	if o != nil && !IsNil(o.PersistentGrantIdleTimeoutType) {
		return true
	}

	return false
}

// SetPersistentGrantIdleTimeoutType gets a reference to the given string and assigns it to the PersistentGrantIdleTimeoutType field.
func (o *Client) SetPersistentGrantIdleTimeoutType(v string) {
	o.PersistentGrantIdleTimeoutType = &v
}

// GetPersistentGrantIdleTimeout returns the PersistentGrantIdleTimeout field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantIdleTimeout() int64 {
	if o == nil || IsNil(o.PersistentGrantIdleTimeout) {
		var ret int64
		return ret
	}
	return *o.PersistentGrantIdleTimeout
}

// GetPersistentGrantIdleTimeoutOk returns a tuple with the PersistentGrantIdleTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantIdleTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.PersistentGrantIdleTimeout) {
		return nil, false
	}
	return o.PersistentGrantIdleTimeout, true
}

// HasPersistentGrantIdleTimeout returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantIdleTimeout() bool {
	if o != nil && !IsNil(o.PersistentGrantIdleTimeout) {
		return true
	}

	return false
}

// SetPersistentGrantIdleTimeout gets a reference to the given int64 and assigns it to the PersistentGrantIdleTimeout field.
func (o *Client) SetPersistentGrantIdleTimeout(v int64) {
	o.PersistentGrantIdleTimeout = &v
}

// GetPersistentGrantIdleTimeoutTimeUnit returns the PersistentGrantIdleTimeoutTimeUnit field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantIdleTimeoutTimeUnit() string {
	if o == nil || IsNil(o.PersistentGrantIdleTimeoutTimeUnit) {
		var ret string
		return ret
	}
	return *o.PersistentGrantIdleTimeoutTimeUnit
}

// GetPersistentGrantIdleTimeoutTimeUnitOk returns a tuple with the PersistentGrantIdleTimeoutTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantIdleTimeoutTimeUnitOk() (*string, bool) {
	if o == nil || IsNil(o.PersistentGrantIdleTimeoutTimeUnit) {
		return nil, false
	}
	return o.PersistentGrantIdleTimeoutTimeUnit, true
}

// HasPersistentGrantIdleTimeoutTimeUnit returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantIdleTimeoutTimeUnit() bool {
	if o != nil && !IsNil(o.PersistentGrantIdleTimeoutTimeUnit) {
		return true
	}

	return false
}

// SetPersistentGrantIdleTimeoutTimeUnit gets a reference to the given string and assigns it to the PersistentGrantIdleTimeoutTimeUnit field.
func (o *Client) SetPersistentGrantIdleTimeoutTimeUnit(v string) {
	o.PersistentGrantIdleTimeoutTimeUnit = &v
}

// GetPersistentGrantReuseType returns the PersistentGrantReuseType field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantReuseType() string {
	if o == nil || IsNil(o.PersistentGrantReuseType) {
		var ret string
		return ret
	}
	return *o.PersistentGrantReuseType
}

// GetPersistentGrantReuseTypeOk returns a tuple with the PersistentGrantReuseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantReuseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PersistentGrantReuseType) {
		return nil, false
	}
	return o.PersistentGrantReuseType, true
}

// HasPersistentGrantReuseType returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantReuseType() bool {
	if o != nil && !IsNil(o.PersistentGrantReuseType) {
		return true
	}

	return false
}

// SetPersistentGrantReuseType gets a reference to the given string and assigns it to the PersistentGrantReuseType field.
func (o *Client) SetPersistentGrantReuseType(v string) {
	o.PersistentGrantReuseType = &v
}

// GetPersistentGrantReuseGrantTypes returns the PersistentGrantReuseGrantTypes field value if set, zero value otherwise.
func (o *Client) GetPersistentGrantReuseGrantTypes() []string {
	if o == nil || IsNil(o.PersistentGrantReuseGrantTypes) {
		var ret []string
		return ret
	}
	return o.PersistentGrantReuseGrantTypes
}

// GetPersistentGrantReuseGrantTypesOk returns a tuple with the PersistentGrantReuseGrantTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPersistentGrantReuseGrantTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.PersistentGrantReuseGrantTypes) {
		return nil, false
	}
	return o.PersistentGrantReuseGrantTypes, true
}

// HasPersistentGrantReuseGrantTypes returns a boolean if a field has been set.
func (o *Client) HasPersistentGrantReuseGrantTypes() bool {
	if o != nil && !IsNil(o.PersistentGrantReuseGrantTypes) {
		return true
	}

	return false
}

// SetPersistentGrantReuseGrantTypes gets a reference to the given []string and assigns it to the PersistentGrantReuseGrantTypes field.
func (o *Client) SetPersistentGrantReuseGrantTypes(v []string) {
	o.PersistentGrantReuseGrantTypes = v
}

// GetAllowAuthenticationApiInit returns the AllowAuthenticationApiInit field value if set, zero value otherwise.
func (o *Client) GetAllowAuthenticationApiInit() bool {
	if o == nil || IsNil(o.AllowAuthenticationApiInit) {
		var ret bool
		return ret
	}
	return *o.AllowAuthenticationApiInit
}

// GetAllowAuthenticationApiInitOk returns a tuple with the AllowAuthenticationApiInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetAllowAuthenticationApiInitOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAuthenticationApiInit) {
		return nil, false
	}
	return o.AllowAuthenticationApiInit, true
}

// HasAllowAuthenticationApiInit returns a boolean if a field has been set.
func (o *Client) HasAllowAuthenticationApiInit() bool {
	if o != nil && !IsNil(o.AllowAuthenticationApiInit) {
		return true
	}

	return false
}

// SetAllowAuthenticationApiInit gets a reference to the given bool and assigns it to the AllowAuthenticationApiInit field.
func (o *Client) SetAllowAuthenticationApiInit(v bool) {
	o.AllowAuthenticationApiInit = &v
}

// GetBypassApprovalPage returns the BypassApprovalPage field value if set, zero value otherwise.
func (o *Client) GetBypassApprovalPage() bool {
	if o == nil || IsNil(o.BypassApprovalPage) {
		var ret bool
		return ret
	}
	return *o.BypassApprovalPage
}

// GetBypassApprovalPageOk returns a tuple with the BypassApprovalPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetBypassApprovalPageOk() (*bool, bool) {
	if o == nil || IsNil(o.BypassApprovalPage) {
		return nil, false
	}
	return o.BypassApprovalPage, true
}

// HasBypassApprovalPage returns a boolean if a field has been set.
func (o *Client) HasBypassApprovalPage() bool {
	if o != nil && !IsNil(o.BypassApprovalPage) {
		return true
	}

	return false
}

// SetBypassApprovalPage gets a reference to the given bool and assigns it to the BypassApprovalPage field.
func (o *Client) SetBypassApprovalPage(v bool) {
	o.BypassApprovalPage = &v
}

// GetRestrictScopes returns the RestrictScopes field value if set, zero value otherwise.
func (o *Client) GetRestrictScopes() bool {
	if o == nil || IsNil(o.RestrictScopes) {
		var ret bool
		return ret
	}
	return *o.RestrictScopes
}

// GetRestrictScopesOk returns a tuple with the RestrictScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRestrictScopesOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictScopes) {
		return nil, false
	}
	return o.RestrictScopes, true
}

// HasRestrictScopes returns a boolean if a field has been set.
func (o *Client) HasRestrictScopes() bool {
	if o != nil && !IsNil(o.RestrictScopes) {
		return true
	}

	return false
}

// SetRestrictScopes gets a reference to the given bool and assigns it to the RestrictScopes field.
func (o *Client) SetRestrictScopes(v bool) {
	o.RestrictScopes = &v
}

// GetRestrictedScopes returns the RestrictedScopes field value if set, zero value otherwise.
func (o *Client) GetRestrictedScopes() []string {
	if o == nil || IsNil(o.RestrictedScopes) {
		var ret []string
		return ret
	}
	return o.RestrictedScopes
}

// GetRestrictedScopesOk returns a tuple with the RestrictedScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRestrictedScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.RestrictedScopes) {
		return nil, false
	}
	return o.RestrictedScopes, true
}

// HasRestrictedScopes returns a boolean if a field has been set.
func (o *Client) HasRestrictedScopes() bool {
	if o != nil && !IsNil(o.RestrictedScopes) {
		return true
	}

	return false
}

// SetRestrictedScopes gets a reference to the given []string and assigns it to the RestrictedScopes field.
func (o *Client) SetRestrictedScopes(v []string) {
	o.RestrictedScopes = v
}

// GetExclusiveScopes returns the ExclusiveScopes field value if set, zero value otherwise.
func (o *Client) GetExclusiveScopes() []string {
	if o == nil || IsNil(o.ExclusiveScopes) {
		var ret []string
		return ret
	}
	return o.ExclusiveScopes
}

// GetExclusiveScopesOk returns a tuple with the ExclusiveScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetExclusiveScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.ExclusiveScopes) {
		return nil, false
	}
	return o.ExclusiveScopes, true
}

// HasExclusiveScopes returns a boolean if a field has been set.
func (o *Client) HasExclusiveScopes() bool {
	if o != nil && !IsNil(o.ExclusiveScopes) {
		return true
	}

	return false
}

// SetExclusiveScopes gets a reference to the given []string and assigns it to the ExclusiveScopes field.
func (o *Client) SetExclusiveScopes(v []string) {
	o.ExclusiveScopes = v
}

// GetAuthorizationDetailTypes returns the AuthorizationDetailTypes field value if set, zero value otherwise.
func (o *Client) GetAuthorizationDetailTypes() []string {
	if o == nil || IsNil(o.AuthorizationDetailTypes) {
		var ret []string
		return ret
	}
	return o.AuthorizationDetailTypes
}

// GetAuthorizationDetailTypesOk returns a tuple with the AuthorizationDetailTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetAuthorizationDetailTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthorizationDetailTypes) {
		return nil, false
	}
	return o.AuthorizationDetailTypes, true
}

// HasAuthorizationDetailTypes returns a boolean if a field has been set.
func (o *Client) HasAuthorizationDetailTypes() bool {
	if o != nil && !IsNil(o.AuthorizationDetailTypes) {
		return true
	}

	return false
}

// SetAuthorizationDetailTypes gets a reference to the given []string and assigns it to the AuthorizationDetailTypes field.
func (o *Client) SetAuthorizationDetailTypes(v []string) {
	o.AuthorizationDetailTypes = v
}

// GetRestrictedResponseTypes returns the RestrictedResponseTypes field value if set, zero value otherwise.
func (o *Client) GetRestrictedResponseTypes() []string {
	if o == nil || IsNil(o.RestrictedResponseTypes) {
		var ret []string
		return ret
	}
	return o.RestrictedResponseTypes
}

// GetRestrictedResponseTypesOk returns a tuple with the RestrictedResponseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRestrictedResponseTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.RestrictedResponseTypes) {
		return nil, false
	}
	return o.RestrictedResponseTypes, true
}

// HasRestrictedResponseTypes returns a boolean if a field has been set.
func (o *Client) HasRestrictedResponseTypes() bool {
	if o != nil && !IsNil(o.RestrictedResponseTypes) {
		return true
	}

	return false
}

// SetRestrictedResponseTypes gets a reference to the given []string and assigns it to the RestrictedResponseTypes field.
func (o *Client) SetRestrictedResponseTypes(v []string) {
	o.RestrictedResponseTypes = v
}

// GetRequirePushedAuthorizationRequests returns the RequirePushedAuthorizationRequests field value if set, zero value otherwise.
func (o *Client) GetRequirePushedAuthorizationRequests() bool {
	if o == nil || IsNil(o.RequirePushedAuthorizationRequests) {
		var ret bool
		return ret
	}
	return *o.RequirePushedAuthorizationRequests
}

// GetRequirePushedAuthorizationRequestsOk returns a tuple with the RequirePushedAuthorizationRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRequirePushedAuthorizationRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequirePushedAuthorizationRequests) {
		return nil, false
	}
	return o.RequirePushedAuthorizationRequests, true
}

// HasRequirePushedAuthorizationRequests returns a boolean if a field has been set.
func (o *Client) HasRequirePushedAuthorizationRequests() bool {
	if o != nil && !IsNil(o.RequirePushedAuthorizationRequests) {
		return true
	}

	return false
}

// SetRequirePushedAuthorizationRequests gets a reference to the given bool and assigns it to the RequirePushedAuthorizationRequests field.
func (o *Client) SetRequirePushedAuthorizationRequests(v bool) {
	o.RequirePushedAuthorizationRequests = &v
}

// GetRequireJwtSecuredAuthorizationResponseMode returns the RequireJwtSecuredAuthorizationResponseMode field value if set, zero value otherwise.
func (o *Client) GetRequireJwtSecuredAuthorizationResponseMode() bool {
	if o == nil || IsNil(o.RequireJwtSecuredAuthorizationResponseMode) {
		var ret bool
		return ret
	}
	return *o.RequireJwtSecuredAuthorizationResponseMode
}

// GetRequireJwtSecuredAuthorizationResponseModeOk returns a tuple with the RequireJwtSecuredAuthorizationResponseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRequireJwtSecuredAuthorizationResponseModeOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireJwtSecuredAuthorizationResponseMode) {
		return nil, false
	}
	return o.RequireJwtSecuredAuthorizationResponseMode, true
}

// HasRequireJwtSecuredAuthorizationResponseMode returns a boolean if a field has been set.
func (o *Client) HasRequireJwtSecuredAuthorizationResponseMode() bool {
	if o != nil && !IsNil(o.RequireJwtSecuredAuthorizationResponseMode) {
		return true
	}

	return false
}

// SetRequireJwtSecuredAuthorizationResponseMode gets a reference to the given bool and assigns it to the RequireJwtSecuredAuthorizationResponseMode field.
func (o *Client) SetRequireJwtSecuredAuthorizationResponseMode(v bool) {
	o.RequireJwtSecuredAuthorizationResponseMode = &v
}

// GetRequireSignedRequests returns the RequireSignedRequests field value if set, zero value otherwise.
func (o *Client) GetRequireSignedRequests() bool {
	if o == nil || IsNil(o.RequireSignedRequests) {
		var ret bool
		return ret
	}
	return *o.RequireSignedRequests
}

// GetRequireSignedRequestsOk returns a tuple with the RequireSignedRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRequireSignedRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireSignedRequests) {
		return nil, false
	}
	return o.RequireSignedRequests, true
}

// HasRequireSignedRequests returns a boolean if a field has been set.
func (o *Client) HasRequireSignedRequests() bool {
	if o != nil && !IsNil(o.RequireSignedRequests) {
		return true
	}

	return false
}

// SetRequireSignedRequests gets a reference to the given bool and assigns it to the RequireSignedRequests field.
func (o *Client) SetRequireSignedRequests(v bool) {
	o.RequireSignedRequests = &v
}

// GetRequestObjectSigningAlgorithm returns the RequestObjectSigningAlgorithm field value if set, zero value otherwise.
func (o *Client) GetRequestObjectSigningAlgorithm() string {
	if o == nil || IsNil(o.RequestObjectSigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.RequestObjectSigningAlgorithm
}

// GetRequestObjectSigningAlgorithmOk returns a tuple with the RequestObjectSigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRequestObjectSigningAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.RequestObjectSigningAlgorithm) {
		return nil, false
	}
	return o.RequestObjectSigningAlgorithm, true
}

// HasRequestObjectSigningAlgorithm returns a boolean if a field has been set.
func (o *Client) HasRequestObjectSigningAlgorithm() bool {
	if o != nil && !IsNil(o.RequestObjectSigningAlgorithm) {
		return true
	}

	return false
}

// SetRequestObjectSigningAlgorithm gets a reference to the given string and assigns it to the RequestObjectSigningAlgorithm field.
func (o *Client) SetRequestObjectSigningAlgorithm(v string) {
	o.RequestObjectSigningAlgorithm = &v
}

// GetOidcPolicy returns the OidcPolicy field value if set, zero value otherwise.
func (o *Client) GetOidcPolicy() ClientOIDCPolicy {
	if o == nil || IsNil(o.OidcPolicy) {
		var ret ClientOIDCPolicy
		return ret
	}
	return *o.OidcPolicy
}

// GetOidcPolicyOk returns a tuple with the OidcPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetOidcPolicyOk() (*ClientOIDCPolicy, bool) {
	if o == nil || IsNil(o.OidcPolicy) {
		return nil, false
	}
	return o.OidcPolicy, true
}

// HasOidcPolicy returns a boolean if a field has been set.
func (o *Client) HasOidcPolicy() bool {
	if o != nil && !IsNil(o.OidcPolicy) {
		return true
	}

	return false
}

// SetOidcPolicy gets a reference to the given ClientOIDCPolicy and assigns it to the OidcPolicy field.
func (o *Client) SetOidcPolicy(v ClientOIDCPolicy) {
	o.OidcPolicy = &v
}

// GetClientAuth returns the ClientAuth field value if set, zero value otherwise.
func (o *Client) GetClientAuth() ClientAuth {
	if o == nil || IsNil(o.ClientAuth) {
		var ret ClientAuth
		return ret
	}
	return *o.ClientAuth
}

// GetClientAuthOk returns a tuple with the ClientAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetClientAuthOk() (*ClientAuth, bool) {
	if o == nil || IsNil(o.ClientAuth) {
		return nil, false
	}
	return o.ClientAuth, true
}

// HasClientAuth returns a boolean if a field has been set.
func (o *Client) HasClientAuth() bool {
	if o != nil && !IsNil(o.ClientAuth) {
		return true
	}

	return false
}

// SetClientAuth gets a reference to the given ClientAuth and assigns it to the ClientAuth field.
func (o *Client) SetClientAuth(v ClientAuth) {
	o.ClientAuth = &v
}

// GetJwksSettings returns the JwksSettings field value if set, zero value otherwise.
func (o *Client) GetJwksSettings() JwksSettings {
	if o == nil || IsNil(o.JwksSettings) {
		var ret JwksSettings
		return ret
	}
	return *o.JwksSettings
}

// GetJwksSettingsOk returns a tuple with the JwksSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetJwksSettingsOk() (*JwksSettings, bool) {
	if o == nil || IsNil(o.JwksSettings) {
		return nil, false
	}
	return o.JwksSettings, true
}

// HasJwksSettings returns a boolean if a field has been set.
func (o *Client) HasJwksSettings() bool {
	if o != nil && !IsNil(o.JwksSettings) {
		return true
	}

	return false
}

// SetJwksSettings gets a reference to the given JwksSettings and assigns it to the JwksSettings field.
func (o *Client) SetJwksSettings(v JwksSettings) {
	o.JwksSettings = &v
}

// GetExtendedParameters returns the ExtendedParameters field value if set, zero value otherwise.
func (o *Client) GetExtendedParameters() map[string]ParameterValues {
	if o == nil || IsNil(o.ExtendedParameters) {
		var ret map[string]ParameterValues
		return ret
	}
	return *o.ExtendedParameters
}

// GetExtendedParametersOk returns a tuple with the ExtendedParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetExtendedParametersOk() (*map[string]ParameterValues, bool) {
	if o == nil || IsNil(o.ExtendedParameters) {
		return nil, false
	}
	return o.ExtendedParameters, true
}

// HasExtendedParameters returns a boolean if a field has been set.
func (o *Client) HasExtendedParameters() bool {
	if o != nil && !IsNil(o.ExtendedParameters) {
		return true
	}

	return false
}

// SetExtendedParameters gets a reference to the given map[string]ParameterValues and assigns it to the ExtendedParameters field.
func (o *Client) SetExtendedParameters(v map[string]ParameterValues) {
	o.ExtendedParameters = &v
}

// GetDeviceFlowSettingType returns the DeviceFlowSettingType field value if set, zero value otherwise.
func (o *Client) GetDeviceFlowSettingType() string {
	if o == nil || IsNil(o.DeviceFlowSettingType) {
		var ret string
		return ret
	}
	return *o.DeviceFlowSettingType
}

// GetDeviceFlowSettingTypeOk returns a tuple with the DeviceFlowSettingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetDeviceFlowSettingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceFlowSettingType) {
		return nil, false
	}
	return o.DeviceFlowSettingType, true
}

// HasDeviceFlowSettingType returns a boolean if a field has been set.
func (o *Client) HasDeviceFlowSettingType() bool {
	if o != nil && !IsNil(o.DeviceFlowSettingType) {
		return true
	}

	return false
}

// SetDeviceFlowSettingType gets a reference to the given string and assigns it to the DeviceFlowSettingType field.
func (o *Client) SetDeviceFlowSettingType(v string) {
	o.DeviceFlowSettingType = &v
}

// GetUserAuthorizationUrlOverride returns the UserAuthorizationUrlOverride field value if set, zero value otherwise.
func (o *Client) GetUserAuthorizationUrlOverride() string {
	if o == nil || IsNil(o.UserAuthorizationUrlOverride) {
		var ret string
		return ret
	}
	return *o.UserAuthorizationUrlOverride
}

// GetUserAuthorizationUrlOverrideOk returns a tuple with the UserAuthorizationUrlOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetUserAuthorizationUrlOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.UserAuthorizationUrlOverride) {
		return nil, false
	}
	return o.UserAuthorizationUrlOverride, true
}

// HasUserAuthorizationUrlOverride returns a boolean if a field has been set.
func (o *Client) HasUserAuthorizationUrlOverride() bool {
	if o != nil && !IsNil(o.UserAuthorizationUrlOverride) {
		return true
	}

	return false
}

// SetUserAuthorizationUrlOverride gets a reference to the given string and assigns it to the UserAuthorizationUrlOverride field.
func (o *Client) SetUserAuthorizationUrlOverride(v string) {
	o.UserAuthorizationUrlOverride = &v
}

// GetPendingAuthorizationTimeoutOverride returns the PendingAuthorizationTimeoutOverride field value if set, zero value otherwise.
func (o *Client) GetPendingAuthorizationTimeoutOverride() int64 {
	if o == nil || IsNil(o.PendingAuthorizationTimeoutOverride) {
		var ret int64
		return ret
	}
	return *o.PendingAuthorizationTimeoutOverride
}

// GetPendingAuthorizationTimeoutOverrideOk returns a tuple with the PendingAuthorizationTimeoutOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetPendingAuthorizationTimeoutOverrideOk() (*int64, bool) {
	if o == nil || IsNil(o.PendingAuthorizationTimeoutOverride) {
		return nil, false
	}
	return o.PendingAuthorizationTimeoutOverride, true
}

// HasPendingAuthorizationTimeoutOverride returns a boolean if a field has been set.
func (o *Client) HasPendingAuthorizationTimeoutOverride() bool {
	if o != nil && !IsNil(o.PendingAuthorizationTimeoutOverride) {
		return true
	}

	return false
}

// SetPendingAuthorizationTimeoutOverride gets a reference to the given int64 and assigns it to the PendingAuthorizationTimeoutOverride field.
func (o *Client) SetPendingAuthorizationTimeoutOverride(v int64) {
	o.PendingAuthorizationTimeoutOverride = &v
}

// GetDevicePollingIntervalOverride returns the DevicePollingIntervalOverride field value if set, zero value otherwise.
func (o *Client) GetDevicePollingIntervalOverride() int64 {
	if o == nil || IsNil(o.DevicePollingIntervalOverride) {
		var ret int64
		return ret
	}
	return *o.DevicePollingIntervalOverride
}

// GetDevicePollingIntervalOverrideOk returns a tuple with the DevicePollingIntervalOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetDevicePollingIntervalOverrideOk() (*int64, bool) {
	if o == nil || IsNil(o.DevicePollingIntervalOverride) {
		return nil, false
	}
	return o.DevicePollingIntervalOverride, true
}

// HasDevicePollingIntervalOverride returns a boolean if a field has been set.
func (o *Client) HasDevicePollingIntervalOverride() bool {
	if o != nil && !IsNil(o.DevicePollingIntervalOverride) {
		return true
	}

	return false
}

// SetDevicePollingIntervalOverride gets a reference to the given int64 and assigns it to the DevicePollingIntervalOverride field.
func (o *Client) SetDevicePollingIntervalOverride(v int64) {
	o.DevicePollingIntervalOverride = &v
}

// GetBypassActivationCodeConfirmationOverride returns the BypassActivationCodeConfirmationOverride field value if set, zero value otherwise.
func (o *Client) GetBypassActivationCodeConfirmationOverride() bool {
	if o == nil || IsNil(o.BypassActivationCodeConfirmationOverride) {
		var ret bool
		return ret
	}
	return *o.BypassActivationCodeConfirmationOverride
}

// GetBypassActivationCodeConfirmationOverrideOk returns a tuple with the BypassActivationCodeConfirmationOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetBypassActivationCodeConfirmationOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.BypassActivationCodeConfirmationOverride) {
		return nil, false
	}
	return o.BypassActivationCodeConfirmationOverride, true
}

// HasBypassActivationCodeConfirmationOverride returns a boolean if a field has been set.
func (o *Client) HasBypassActivationCodeConfirmationOverride() bool {
	if o != nil && !IsNil(o.BypassActivationCodeConfirmationOverride) {
		return true
	}

	return false
}

// SetBypassActivationCodeConfirmationOverride gets a reference to the given bool and assigns it to the BypassActivationCodeConfirmationOverride field.
func (o *Client) SetBypassActivationCodeConfirmationOverride(v bool) {
	o.BypassActivationCodeConfirmationOverride = &v
}

// GetRequireProofKeyForCodeExchange returns the RequireProofKeyForCodeExchange field value if set, zero value otherwise.
func (o *Client) GetRequireProofKeyForCodeExchange() bool {
	if o == nil || IsNil(o.RequireProofKeyForCodeExchange) {
		var ret bool
		return ret
	}
	return *o.RequireProofKeyForCodeExchange
}

// GetRequireProofKeyForCodeExchangeOk returns a tuple with the RequireProofKeyForCodeExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRequireProofKeyForCodeExchangeOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireProofKeyForCodeExchange) {
		return nil, false
	}
	return o.RequireProofKeyForCodeExchange, true
}

// HasRequireProofKeyForCodeExchange returns a boolean if a field has been set.
func (o *Client) HasRequireProofKeyForCodeExchange() bool {
	if o != nil && !IsNil(o.RequireProofKeyForCodeExchange) {
		return true
	}

	return false
}

// SetRequireProofKeyForCodeExchange gets a reference to the given bool and assigns it to the RequireProofKeyForCodeExchange field.
func (o *Client) SetRequireProofKeyForCodeExchange(v bool) {
	o.RequireProofKeyForCodeExchange = &v
}

// GetCibaDeliveryMode returns the CibaDeliveryMode field value if set, zero value otherwise.
func (o *Client) GetCibaDeliveryMode() string {
	if o == nil || IsNil(o.CibaDeliveryMode) {
		var ret string
		return ret
	}
	return *o.CibaDeliveryMode
}

// GetCibaDeliveryModeOk returns a tuple with the CibaDeliveryMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCibaDeliveryModeOk() (*string, bool) {
	if o == nil || IsNil(o.CibaDeliveryMode) {
		return nil, false
	}
	return o.CibaDeliveryMode, true
}

// HasCibaDeliveryMode returns a boolean if a field has been set.
func (o *Client) HasCibaDeliveryMode() bool {
	if o != nil && !IsNil(o.CibaDeliveryMode) {
		return true
	}

	return false
}

// SetCibaDeliveryMode gets a reference to the given string and assigns it to the CibaDeliveryMode field.
func (o *Client) SetCibaDeliveryMode(v string) {
	o.CibaDeliveryMode = &v
}

// GetCibaNotificationEndpoint returns the CibaNotificationEndpoint field value if set, zero value otherwise.
func (o *Client) GetCibaNotificationEndpoint() string {
	if o == nil || IsNil(o.CibaNotificationEndpoint) {
		var ret string
		return ret
	}
	return *o.CibaNotificationEndpoint
}

// GetCibaNotificationEndpointOk returns a tuple with the CibaNotificationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCibaNotificationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.CibaNotificationEndpoint) {
		return nil, false
	}
	return o.CibaNotificationEndpoint, true
}

// HasCibaNotificationEndpoint returns a boolean if a field has been set.
func (o *Client) HasCibaNotificationEndpoint() bool {
	if o != nil && !IsNil(o.CibaNotificationEndpoint) {
		return true
	}

	return false
}

// SetCibaNotificationEndpoint gets a reference to the given string and assigns it to the CibaNotificationEndpoint field.
func (o *Client) SetCibaNotificationEndpoint(v string) {
	o.CibaNotificationEndpoint = &v
}

// GetCibaPollingInterval returns the CibaPollingInterval field value if set, zero value otherwise.
func (o *Client) GetCibaPollingInterval() int64 {
	if o == nil || IsNil(o.CibaPollingInterval) {
		var ret int64
		return ret
	}
	return *o.CibaPollingInterval
}

// GetCibaPollingIntervalOk returns a tuple with the CibaPollingInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCibaPollingIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.CibaPollingInterval) {
		return nil, false
	}
	return o.CibaPollingInterval, true
}

// HasCibaPollingInterval returns a boolean if a field has been set.
func (o *Client) HasCibaPollingInterval() bool {
	if o != nil && !IsNil(o.CibaPollingInterval) {
		return true
	}

	return false
}

// SetCibaPollingInterval gets a reference to the given int64 and assigns it to the CibaPollingInterval field.
func (o *Client) SetCibaPollingInterval(v int64) {
	o.CibaPollingInterval = &v
}

// GetCibaRequireSignedRequests returns the CibaRequireSignedRequests field value if set, zero value otherwise.
func (o *Client) GetCibaRequireSignedRequests() bool {
	if o == nil || IsNil(o.CibaRequireSignedRequests) {
		var ret bool
		return ret
	}
	return *o.CibaRequireSignedRequests
}

// GetCibaRequireSignedRequestsOk returns a tuple with the CibaRequireSignedRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCibaRequireSignedRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.CibaRequireSignedRequests) {
		return nil, false
	}
	return o.CibaRequireSignedRequests, true
}

// HasCibaRequireSignedRequests returns a boolean if a field has been set.
func (o *Client) HasCibaRequireSignedRequests() bool {
	if o != nil && !IsNil(o.CibaRequireSignedRequests) {
		return true
	}

	return false
}

// SetCibaRequireSignedRequests gets a reference to the given bool and assigns it to the CibaRequireSignedRequests field.
func (o *Client) SetCibaRequireSignedRequests(v bool) {
	o.CibaRequireSignedRequests = &v
}

// GetCibaRequestObjectSigningAlgorithm returns the CibaRequestObjectSigningAlgorithm field value if set, zero value otherwise.
func (o *Client) GetCibaRequestObjectSigningAlgorithm() string {
	if o == nil || IsNil(o.CibaRequestObjectSigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.CibaRequestObjectSigningAlgorithm
}

// GetCibaRequestObjectSigningAlgorithmOk returns a tuple with the CibaRequestObjectSigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCibaRequestObjectSigningAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.CibaRequestObjectSigningAlgorithm) {
		return nil, false
	}
	return o.CibaRequestObjectSigningAlgorithm, true
}

// HasCibaRequestObjectSigningAlgorithm returns a boolean if a field has been set.
func (o *Client) HasCibaRequestObjectSigningAlgorithm() bool {
	if o != nil && !IsNil(o.CibaRequestObjectSigningAlgorithm) {
		return true
	}

	return false
}

// SetCibaRequestObjectSigningAlgorithm gets a reference to the given string and assigns it to the CibaRequestObjectSigningAlgorithm field.
func (o *Client) SetCibaRequestObjectSigningAlgorithm(v string) {
	o.CibaRequestObjectSigningAlgorithm = &v
}

// GetCibaUserCodeSupported returns the CibaUserCodeSupported field value if set, zero value otherwise.
func (o *Client) GetCibaUserCodeSupported() bool {
	if o == nil || IsNil(o.CibaUserCodeSupported) {
		var ret bool
		return ret
	}
	return *o.CibaUserCodeSupported
}

// GetCibaUserCodeSupportedOk returns a tuple with the CibaUserCodeSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetCibaUserCodeSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.CibaUserCodeSupported) {
		return nil, false
	}
	return o.CibaUserCodeSupported, true
}

// HasCibaUserCodeSupported returns a boolean if a field has been set.
func (o *Client) HasCibaUserCodeSupported() bool {
	if o != nil && !IsNil(o.CibaUserCodeSupported) {
		return true
	}

	return false
}

// SetCibaUserCodeSupported gets a reference to the given bool and assigns it to the CibaUserCodeSupported field.
func (o *Client) SetCibaUserCodeSupported(v bool) {
	o.CibaUserCodeSupported = &v
}

// GetRequestPolicyRef returns the RequestPolicyRef field value if set, zero value otherwise.
func (o *Client) GetRequestPolicyRef() ResourceLink {
	if o == nil || IsNil(o.RequestPolicyRef) {
		var ret ResourceLink
		return ret
	}
	return *o.RequestPolicyRef
}

// GetRequestPolicyRefOk returns a tuple with the RequestPolicyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRequestPolicyRefOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.RequestPolicyRef) {
		return nil, false
	}
	return o.RequestPolicyRef, true
}

// HasRequestPolicyRef returns a boolean if a field has been set.
func (o *Client) HasRequestPolicyRef() bool {
	if o != nil && !IsNil(o.RequestPolicyRef) {
		return true
	}

	return false
}

// SetRequestPolicyRef gets a reference to the given ResourceLink and assigns it to the RequestPolicyRef field.
func (o *Client) SetRequestPolicyRef(v ResourceLink) {
	o.RequestPolicyRef = &v
}

// GetTokenExchangeProcessorPolicyRef returns the TokenExchangeProcessorPolicyRef field value if set, zero value otherwise.
func (o *Client) GetTokenExchangeProcessorPolicyRef() ResourceLink {
	if o == nil || IsNil(o.TokenExchangeProcessorPolicyRef) {
		var ret ResourceLink
		return ret
	}
	return *o.TokenExchangeProcessorPolicyRef
}

// GetTokenExchangeProcessorPolicyRefOk returns a tuple with the TokenExchangeProcessorPolicyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetTokenExchangeProcessorPolicyRefOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.TokenExchangeProcessorPolicyRef) {
		return nil, false
	}
	return o.TokenExchangeProcessorPolicyRef, true
}

// HasTokenExchangeProcessorPolicyRef returns a boolean if a field has been set.
func (o *Client) HasTokenExchangeProcessorPolicyRef() bool {
	if o != nil && !IsNil(o.TokenExchangeProcessorPolicyRef) {
		return true
	}

	return false
}

// SetTokenExchangeProcessorPolicyRef gets a reference to the given ResourceLink and assigns it to the TokenExchangeProcessorPolicyRef field.
func (o *Client) SetTokenExchangeProcessorPolicyRef(v ResourceLink) {
	o.TokenExchangeProcessorPolicyRef = &v
}

// GetRefreshTokenRollingGracePeriodType returns the RefreshTokenRollingGracePeriodType field value if set, zero value otherwise.
func (o *Client) GetRefreshTokenRollingGracePeriodType() string {
	if o == nil || IsNil(o.RefreshTokenRollingGracePeriodType) {
		var ret string
		return ret
	}
	return *o.RefreshTokenRollingGracePeriodType
}

// GetRefreshTokenRollingGracePeriodTypeOk returns a tuple with the RefreshTokenRollingGracePeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRefreshTokenRollingGracePeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshTokenRollingGracePeriodType) {
		return nil, false
	}
	return o.RefreshTokenRollingGracePeriodType, true
}

// HasRefreshTokenRollingGracePeriodType returns a boolean if a field has been set.
func (o *Client) HasRefreshTokenRollingGracePeriodType() bool {
	if o != nil && !IsNil(o.RefreshTokenRollingGracePeriodType) {
		return true
	}

	return false
}

// SetRefreshTokenRollingGracePeriodType gets a reference to the given string and assigns it to the RefreshTokenRollingGracePeriodType field.
func (o *Client) SetRefreshTokenRollingGracePeriodType(v string) {
	o.RefreshTokenRollingGracePeriodType = &v
}

// GetRefreshTokenRollingGracePeriod returns the RefreshTokenRollingGracePeriod field value if set, zero value otherwise.
func (o *Client) GetRefreshTokenRollingGracePeriod() int64 {
	if o == nil || IsNil(o.RefreshTokenRollingGracePeriod) {
		var ret int64
		return ret
	}
	return *o.RefreshTokenRollingGracePeriod
}

// GetRefreshTokenRollingGracePeriodOk returns a tuple with the RefreshTokenRollingGracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetRefreshTokenRollingGracePeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.RefreshTokenRollingGracePeriod) {
		return nil, false
	}
	return o.RefreshTokenRollingGracePeriod, true
}

// HasRefreshTokenRollingGracePeriod returns a boolean if a field has been set.
func (o *Client) HasRefreshTokenRollingGracePeriod() bool {
	if o != nil && !IsNil(o.RefreshTokenRollingGracePeriod) {
		return true
	}

	return false
}

// SetRefreshTokenRollingGracePeriod gets a reference to the given int64 and assigns it to the RefreshTokenRollingGracePeriod field.
func (o *Client) SetRefreshTokenRollingGracePeriod(v int64) {
	o.RefreshTokenRollingGracePeriod = &v
}

// GetClientSecretRetentionPeriodType returns the ClientSecretRetentionPeriodType field value if set, zero value otherwise.
func (o *Client) GetClientSecretRetentionPeriodType() string {
	if o == nil || IsNil(o.ClientSecretRetentionPeriodType) {
		var ret string
		return ret
	}
	return *o.ClientSecretRetentionPeriodType
}

// GetClientSecretRetentionPeriodTypeOk returns a tuple with the ClientSecretRetentionPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetClientSecretRetentionPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecretRetentionPeriodType) {
		return nil, false
	}
	return o.ClientSecretRetentionPeriodType, true
}

// HasClientSecretRetentionPeriodType returns a boolean if a field has been set.
func (o *Client) HasClientSecretRetentionPeriodType() bool {
	if o != nil && !IsNil(o.ClientSecretRetentionPeriodType) {
		return true
	}

	return false
}

// SetClientSecretRetentionPeriodType gets a reference to the given string and assigns it to the ClientSecretRetentionPeriodType field.
func (o *Client) SetClientSecretRetentionPeriodType(v string) {
	o.ClientSecretRetentionPeriodType = &v
}

// GetClientSecretRetentionPeriod returns the ClientSecretRetentionPeriod field value if set, zero value otherwise.
func (o *Client) GetClientSecretRetentionPeriod() int64 {
	if o == nil || IsNil(o.ClientSecretRetentionPeriod) {
		var ret int64
		return ret
	}
	return *o.ClientSecretRetentionPeriod
}

// GetClientSecretRetentionPeriodOk returns a tuple with the ClientSecretRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetClientSecretRetentionPeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientSecretRetentionPeriod) {
		return nil, false
	}
	return o.ClientSecretRetentionPeriod, true
}

// HasClientSecretRetentionPeriod returns a boolean if a field has been set.
func (o *Client) HasClientSecretRetentionPeriod() bool {
	if o != nil && !IsNil(o.ClientSecretRetentionPeriod) {
		return true
	}

	return false
}

// SetClientSecretRetentionPeriod gets a reference to the given int64 and assigns it to the ClientSecretRetentionPeriod field.
func (o *Client) SetClientSecretRetentionPeriod(v int64) {
	o.ClientSecretRetentionPeriod = &v
}

// GetClientSecretChangedTime returns the ClientSecretChangedTime field value if set, zero value otherwise.
func (o *Client) GetClientSecretChangedTime() time.Time {
	if o == nil || IsNil(o.ClientSecretChangedTime) {
		var ret time.Time
		return ret
	}
	return *o.ClientSecretChangedTime
}

// GetClientSecretChangedTimeOk returns a tuple with the ClientSecretChangedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetClientSecretChangedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClientSecretChangedTime) {
		return nil, false
	}
	return o.ClientSecretChangedTime, true
}

// HasClientSecretChangedTime returns a boolean if a field has been set.
func (o *Client) HasClientSecretChangedTime() bool {
	if o != nil && !IsNil(o.ClientSecretChangedTime) {
		return true
	}

	return false
}

// SetClientSecretChangedTime gets a reference to the given time.Time and assigns it to the ClientSecretChangedTime field.
func (o *Client) SetClientSecretChangedTime(v time.Time) {
	o.ClientSecretChangedTime = &v
}

// GetTokenIntrospectionSigningAlgorithm returns the TokenIntrospectionSigningAlgorithm field value if set, zero value otherwise.
func (o *Client) GetTokenIntrospectionSigningAlgorithm() string {
	if o == nil || IsNil(o.TokenIntrospectionSigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.TokenIntrospectionSigningAlgorithm
}

// GetTokenIntrospectionSigningAlgorithmOk returns a tuple with the TokenIntrospectionSigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetTokenIntrospectionSigningAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.TokenIntrospectionSigningAlgorithm) {
		return nil, false
	}
	return o.TokenIntrospectionSigningAlgorithm, true
}

// HasTokenIntrospectionSigningAlgorithm returns a boolean if a field has been set.
func (o *Client) HasTokenIntrospectionSigningAlgorithm() bool {
	if o != nil && !IsNil(o.TokenIntrospectionSigningAlgorithm) {
		return true
	}

	return false
}

// SetTokenIntrospectionSigningAlgorithm gets a reference to the given string and assigns it to the TokenIntrospectionSigningAlgorithm field.
func (o *Client) SetTokenIntrospectionSigningAlgorithm(v string) {
	o.TokenIntrospectionSigningAlgorithm = &v
}

// GetTokenIntrospectionEncryptionAlgorithm returns the TokenIntrospectionEncryptionAlgorithm field value if set, zero value otherwise.
func (o *Client) GetTokenIntrospectionEncryptionAlgorithm() string {
	if o == nil || IsNil(o.TokenIntrospectionEncryptionAlgorithm) {
		var ret string
		return ret
	}
	return *o.TokenIntrospectionEncryptionAlgorithm
}

// GetTokenIntrospectionEncryptionAlgorithmOk returns a tuple with the TokenIntrospectionEncryptionAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetTokenIntrospectionEncryptionAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.TokenIntrospectionEncryptionAlgorithm) {
		return nil, false
	}
	return o.TokenIntrospectionEncryptionAlgorithm, true
}

// HasTokenIntrospectionEncryptionAlgorithm returns a boolean if a field has been set.
func (o *Client) HasTokenIntrospectionEncryptionAlgorithm() bool {
	if o != nil && !IsNil(o.TokenIntrospectionEncryptionAlgorithm) {
		return true
	}

	return false
}

// SetTokenIntrospectionEncryptionAlgorithm gets a reference to the given string and assigns it to the TokenIntrospectionEncryptionAlgorithm field.
func (o *Client) SetTokenIntrospectionEncryptionAlgorithm(v string) {
	o.TokenIntrospectionEncryptionAlgorithm = &v
}

// GetTokenIntrospectionContentEncryptionAlgorithm returns the TokenIntrospectionContentEncryptionAlgorithm field value if set, zero value otherwise.
func (o *Client) GetTokenIntrospectionContentEncryptionAlgorithm() string {
	if o == nil || IsNil(o.TokenIntrospectionContentEncryptionAlgorithm) {
		var ret string
		return ret
	}
	return *o.TokenIntrospectionContentEncryptionAlgorithm
}

// GetTokenIntrospectionContentEncryptionAlgorithmOk returns a tuple with the TokenIntrospectionContentEncryptionAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetTokenIntrospectionContentEncryptionAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.TokenIntrospectionContentEncryptionAlgorithm) {
		return nil, false
	}
	return o.TokenIntrospectionContentEncryptionAlgorithm, true
}

// HasTokenIntrospectionContentEncryptionAlgorithm returns a boolean if a field has been set.
func (o *Client) HasTokenIntrospectionContentEncryptionAlgorithm() bool {
	if o != nil && !IsNil(o.TokenIntrospectionContentEncryptionAlgorithm) {
		return true
	}

	return false
}

// SetTokenIntrospectionContentEncryptionAlgorithm gets a reference to the given string and assigns it to the TokenIntrospectionContentEncryptionAlgorithm field.
func (o *Client) SetTokenIntrospectionContentEncryptionAlgorithm(v string) {
	o.TokenIntrospectionContentEncryptionAlgorithm = &v
}

// GetJwtSecuredAuthorizationResponseModeSigningAlgorithm returns the JwtSecuredAuthorizationResponseModeSigningAlgorithm field value if set, zero value otherwise.
func (o *Client) GetJwtSecuredAuthorizationResponseModeSigningAlgorithm() string {
	if o == nil || IsNil(o.JwtSecuredAuthorizationResponseModeSigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.JwtSecuredAuthorizationResponseModeSigningAlgorithm
}

// GetJwtSecuredAuthorizationResponseModeSigningAlgorithmOk returns a tuple with the JwtSecuredAuthorizationResponseModeSigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetJwtSecuredAuthorizationResponseModeSigningAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.JwtSecuredAuthorizationResponseModeSigningAlgorithm) {
		return nil, false
	}
	return o.JwtSecuredAuthorizationResponseModeSigningAlgorithm, true
}

// HasJwtSecuredAuthorizationResponseModeSigningAlgorithm returns a boolean if a field has been set.
func (o *Client) HasJwtSecuredAuthorizationResponseModeSigningAlgorithm() bool {
	if o != nil && !IsNil(o.JwtSecuredAuthorizationResponseModeSigningAlgorithm) {
		return true
	}

	return false
}

// SetJwtSecuredAuthorizationResponseModeSigningAlgorithm gets a reference to the given string and assigns it to the JwtSecuredAuthorizationResponseModeSigningAlgorithm field.
func (o *Client) SetJwtSecuredAuthorizationResponseModeSigningAlgorithm(v string) {
	o.JwtSecuredAuthorizationResponseModeSigningAlgorithm = &v
}

// GetJwtSecuredAuthorizationResponseModeEncryptionAlgorithm returns the JwtSecuredAuthorizationResponseModeEncryptionAlgorithm field value if set, zero value otherwise.
func (o *Client) GetJwtSecuredAuthorizationResponseModeEncryptionAlgorithm() string {
	if o == nil || IsNil(o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm) {
		var ret string
		return ret
	}
	return *o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm
}

// GetJwtSecuredAuthorizationResponseModeEncryptionAlgorithmOk returns a tuple with the JwtSecuredAuthorizationResponseModeEncryptionAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetJwtSecuredAuthorizationResponseModeEncryptionAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm) {
		return nil, false
	}
	return o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm, true
}

// HasJwtSecuredAuthorizationResponseModeEncryptionAlgorithm returns a boolean if a field has been set.
func (o *Client) HasJwtSecuredAuthorizationResponseModeEncryptionAlgorithm() bool {
	if o != nil && !IsNil(o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm) {
		return true
	}

	return false
}

// SetJwtSecuredAuthorizationResponseModeEncryptionAlgorithm gets a reference to the given string and assigns it to the JwtSecuredAuthorizationResponseModeEncryptionAlgorithm field.
func (o *Client) SetJwtSecuredAuthorizationResponseModeEncryptionAlgorithm(v string) {
	o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm = &v
}

// GetJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm returns the JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm field value if set, zero value otherwise.
func (o *Client) GetJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm() string {
	if o == nil || IsNil(o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm) {
		var ret string
		return ret
	}
	return *o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm
}

// GetJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithmOk returns a tuple with the JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm) {
		return nil, false
	}
	return o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm, true
}

// HasJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm returns a boolean if a field has been set.
func (o *Client) HasJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm() bool {
	if o != nil && !IsNil(o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm) {
		return true
	}

	return false
}

// SetJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm gets a reference to the given string and assigns it to the JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm field.
func (o *Client) SetJwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm(v string) {
	o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm = &v
}

func (o Client) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Client) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clientId"] = o.ClientId
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.RedirectUris) {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	toSerialize["grantTypes"] = o.GrantTypes
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ModificationDate) {
		toSerialize["modificationDate"] = o.ModificationDate
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if !IsNil(o.DefaultAccessTokenManagerRef) {
		toSerialize["defaultAccessTokenManagerRef"] = o.DefaultAccessTokenManagerRef
	}
	if !IsNil(o.RestrictToDefaultAccessTokenManager) {
		toSerialize["restrictToDefaultAccessTokenManager"] = o.RestrictToDefaultAccessTokenManager
	}
	if !IsNil(o.ValidateUsingAllEligibleAtms) {
		toSerialize["validateUsingAllEligibleAtms"] = o.ValidateUsingAllEligibleAtms
	}
	if !IsNil(o.RefreshRolling) {
		toSerialize["refreshRolling"] = o.RefreshRolling
	}
	if !IsNil(o.RefreshTokenRollingIntervalType) {
		toSerialize["refreshTokenRollingIntervalType"] = o.RefreshTokenRollingIntervalType
	}
	if !IsNil(o.RefreshTokenRollingInterval) {
		toSerialize["refreshTokenRollingInterval"] = o.RefreshTokenRollingInterval
	}
	if !IsNil(o.PersistentGrantExpirationType) {
		toSerialize["persistentGrantExpirationType"] = o.PersistentGrantExpirationType
	}
	if !IsNil(o.PersistentGrantExpirationTime) {
		toSerialize["persistentGrantExpirationTime"] = o.PersistentGrantExpirationTime
	}
	if !IsNil(o.PersistentGrantExpirationTimeUnit) {
		toSerialize["persistentGrantExpirationTimeUnit"] = o.PersistentGrantExpirationTimeUnit
	}
	if !IsNil(o.PersistentGrantIdleTimeoutType) {
		toSerialize["persistentGrantIdleTimeoutType"] = o.PersistentGrantIdleTimeoutType
	}
	if !IsNil(o.PersistentGrantIdleTimeout) {
		toSerialize["persistentGrantIdleTimeout"] = o.PersistentGrantIdleTimeout
	}
	if !IsNil(o.PersistentGrantIdleTimeoutTimeUnit) {
		toSerialize["persistentGrantIdleTimeoutTimeUnit"] = o.PersistentGrantIdleTimeoutTimeUnit
	}
	if !IsNil(o.PersistentGrantReuseType) {
		toSerialize["persistentGrantReuseType"] = o.PersistentGrantReuseType
	}
	if !IsNil(o.PersistentGrantReuseGrantTypes) {
		toSerialize["persistentGrantReuseGrantTypes"] = o.PersistentGrantReuseGrantTypes
	}
	if !IsNil(o.AllowAuthenticationApiInit) {
		toSerialize["allowAuthenticationApiInit"] = o.AllowAuthenticationApiInit
	}
	if !IsNil(o.BypassApprovalPage) {
		toSerialize["bypassApprovalPage"] = o.BypassApprovalPage
	}
	if !IsNil(o.RestrictScopes) {
		toSerialize["restrictScopes"] = o.RestrictScopes
	}
	if !IsNil(o.RestrictedScopes) {
		toSerialize["restrictedScopes"] = o.RestrictedScopes
	}
	if !IsNil(o.ExclusiveScopes) {
		toSerialize["exclusiveScopes"] = o.ExclusiveScopes
	}
	if !IsNil(o.AuthorizationDetailTypes) {
		toSerialize["authorizationDetailTypes"] = o.AuthorizationDetailTypes
	}
	if !IsNil(o.RestrictedResponseTypes) {
		toSerialize["restrictedResponseTypes"] = o.RestrictedResponseTypes
	}
	if !IsNil(o.RequirePushedAuthorizationRequests) {
		toSerialize["requirePushedAuthorizationRequests"] = o.RequirePushedAuthorizationRequests
	}
	if !IsNil(o.RequireJwtSecuredAuthorizationResponseMode) {
		toSerialize["requireJwtSecuredAuthorizationResponseMode"] = o.RequireJwtSecuredAuthorizationResponseMode
	}
	if !IsNil(o.RequireSignedRequests) {
		toSerialize["requireSignedRequests"] = o.RequireSignedRequests
	}
	if !IsNil(o.RequestObjectSigningAlgorithm) {
		toSerialize["requestObjectSigningAlgorithm"] = o.RequestObjectSigningAlgorithm
	}
	if !IsNil(o.OidcPolicy) {
		toSerialize["oidcPolicy"] = o.OidcPolicy
	}
	if !IsNil(o.ClientAuth) {
		toSerialize["clientAuth"] = o.ClientAuth
	}
	if !IsNil(o.JwksSettings) {
		toSerialize["jwksSettings"] = o.JwksSettings
	}
	if !IsNil(o.ExtendedParameters) {
		toSerialize["extendedParameters"] = o.ExtendedParameters
	}
	if !IsNil(o.DeviceFlowSettingType) {
		toSerialize["deviceFlowSettingType"] = o.DeviceFlowSettingType
	}
	if !IsNil(o.UserAuthorizationUrlOverride) {
		toSerialize["userAuthorizationUrlOverride"] = o.UserAuthorizationUrlOverride
	}
	if !IsNil(o.PendingAuthorizationTimeoutOverride) {
		toSerialize["pendingAuthorizationTimeoutOverride"] = o.PendingAuthorizationTimeoutOverride
	}
	if !IsNil(o.DevicePollingIntervalOverride) {
		toSerialize["devicePollingIntervalOverride"] = o.DevicePollingIntervalOverride
	}
	if !IsNil(o.BypassActivationCodeConfirmationOverride) {
		toSerialize["bypassActivationCodeConfirmationOverride"] = o.BypassActivationCodeConfirmationOverride
	}
	if !IsNil(o.RequireProofKeyForCodeExchange) {
		toSerialize["requireProofKeyForCodeExchange"] = o.RequireProofKeyForCodeExchange
	}
	if !IsNil(o.CibaDeliveryMode) {
		toSerialize["cibaDeliveryMode"] = o.CibaDeliveryMode
	}
	if !IsNil(o.CibaNotificationEndpoint) {
		toSerialize["cibaNotificationEndpoint"] = o.CibaNotificationEndpoint
	}
	if !IsNil(o.CibaPollingInterval) {
		toSerialize["cibaPollingInterval"] = o.CibaPollingInterval
	}
	if !IsNil(o.CibaRequireSignedRequests) {
		toSerialize["cibaRequireSignedRequests"] = o.CibaRequireSignedRequests
	}
	if !IsNil(o.CibaRequestObjectSigningAlgorithm) {
		toSerialize["cibaRequestObjectSigningAlgorithm"] = o.CibaRequestObjectSigningAlgorithm
	}
	if !IsNil(o.CibaUserCodeSupported) {
		toSerialize["cibaUserCodeSupported"] = o.CibaUserCodeSupported
	}
	if !IsNil(o.RequestPolicyRef) {
		toSerialize["requestPolicyRef"] = o.RequestPolicyRef
	}
	if !IsNil(o.TokenExchangeProcessorPolicyRef) {
		toSerialize["tokenExchangeProcessorPolicyRef"] = o.TokenExchangeProcessorPolicyRef
	}
	if !IsNil(o.RefreshTokenRollingGracePeriodType) {
		toSerialize["refreshTokenRollingGracePeriodType"] = o.RefreshTokenRollingGracePeriodType
	}
	if !IsNil(o.RefreshTokenRollingGracePeriod) {
		toSerialize["refreshTokenRollingGracePeriod"] = o.RefreshTokenRollingGracePeriod
	}
	if !IsNil(o.ClientSecretRetentionPeriodType) {
		toSerialize["clientSecretRetentionPeriodType"] = o.ClientSecretRetentionPeriodType
	}
	if !IsNil(o.ClientSecretRetentionPeriod) {
		toSerialize["clientSecretRetentionPeriod"] = o.ClientSecretRetentionPeriod
	}
	if !IsNil(o.ClientSecretChangedTime) {
		toSerialize["clientSecretChangedTime"] = o.ClientSecretChangedTime
	}
	if !IsNil(o.TokenIntrospectionSigningAlgorithm) {
		toSerialize["tokenIntrospectionSigningAlgorithm"] = o.TokenIntrospectionSigningAlgorithm
	}
	if !IsNil(o.TokenIntrospectionEncryptionAlgorithm) {
		toSerialize["tokenIntrospectionEncryptionAlgorithm"] = o.TokenIntrospectionEncryptionAlgorithm
	}
	if !IsNil(o.TokenIntrospectionContentEncryptionAlgorithm) {
		toSerialize["tokenIntrospectionContentEncryptionAlgorithm"] = o.TokenIntrospectionContentEncryptionAlgorithm
	}
	if !IsNil(o.JwtSecuredAuthorizationResponseModeSigningAlgorithm) {
		toSerialize["jwtSecuredAuthorizationResponseModeSigningAlgorithm"] = o.JwtSecuredAuthorizationResponseModeSigningAlgorithm
	}
	if !IsNil(o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm) {
		toSerialize["jwtSecuredAuthorizationResponseModeEncryptionAlgorithm"] = o.JwtSecuredAuthorizationResponseModeEncryptionAlgorithm
	}
	if !IsNil(o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm) {
		toSerialize["jwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm"] = o.JwtSecuredAuthorizationResponseModeContentEncryptionAlgorithm
	}
	return toSerialize, nil
}

type NullableClient struct {
	value *Client
	isSet bool
}

func (v NullableClient) Get() *Client {
	return v.value
}

func (v *NullableClient) Set(val *Client) {
	v.value = val
	v.isSet = true
}

func (v NullableClient) IsSet() bool {
	return v.isSet
}

func (v *NullableClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClient(val *Client) *NullableClient {
	return &NullableClient{value: val, isSet: true}
}

func (v NullableClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
