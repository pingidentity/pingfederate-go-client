/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the IdpTokenProcessorMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdpTokenProcessorMapping{}

// IdpTokenProcessorMapping The IdP Token Processor Mapping.
type IdpTokenProcessorMapping struct {
	IdpTokenProcessorRef ResourceLink `json:"idpTokenProcessorRef"`
	// The list of virtual server IDs that this mapping is restricted to.
	RestrictedVirtualEntityIds []string `json:"restrictedVirtualEntityIds,omitempty"`
	// A list of configured data stores to look up attributes from.
	AttributeSources []AttributeSource `json:"attributeSources,omitempty"`
	// A list of mappings from attribute names to their fulfillment values.
	AttributeContractFulfillment map[string]AttributeFulfillmentValue `json:"attributeContractFulfillment"`
	IssuanceCriteria             *IssuanceCriteria                    `json:"issuanceCriteria,omitempty"`
}

// NewIdpTokenProcessorMapping instantiates a new IdpTokenProcessorMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdpTokenProcessorMapping(idpTokenProcessorRef ResourceLink, attributeContractFulfillment map[string]AttributeFulfillmentValue) *IdpTokenProcessorMapping {
	this := IdpTokenProcessorMapping{}
	this.IdpTokenProcessorRef = idpTokenProcessorRef
	this.AttributeContractFulfillment = attributeContractFulfillment
	return &this
}

// NewIdpTokenProcessorMappingWithDefaults instantiates a new IdpTokenProcessorMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdpTokenProcessorMappingWithDefaults() *IdpTokenProcessorMapping {
	this := IdpTokenProcessorMapping{}
	return &this
}

// GetIdpTokenProcessorRef returns the IdpTokenProcessorRef field value
func (o *IdpTokenProcessorMapping) GetIdpTokenProcessorRef() ResourceLink {
	if o == nil {
		var ret ResourceLink
		return ret
	}

	return o.IdpTokenProcessorRef
}

// GetIdpTokenProcessorRefOk returns a tuple with the IdpTokenProcessorRef field value
// and a boolean to check if the value has been set.
func (o *IdpTokenProcessorMapping) GetIdpTokenProcessorRefOk() (*ResourceLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpTokenProcessorRef, true
}

// SetIdpTokenProcessorRef sets field value
func (o *IdpTokenProcessorMapping) SetIdpTokenProcessorRef(v ResourceLink) {
	o.IdpTokenProcessorRef = v
}

// GetRestrictedVirtualEntityIds returns the RestrictedVirtualEntityIds field value if set, zero value otherwise.
func (o *IdpTokenProcessorMapping) GetRestrictedVirtualEntityIds() []string {
	if o == nil || IsNil(o.RestrictedVirtualEntityIds) {
		var ret []string
		return ret
	}
	return o.RestrictedVirtualEntityIds
}

// GetRestrictedVirtualEntityIdsOk returns a tuple with the RestrictedVirtualEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpTokenProcessorMapping) GetRestrictedVirtualEntityIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RestrictedVirtualEntityIds) {
		return nil, false
	}
	return o.RestrictedVirtualEntityIds, true
}

// HasRestrictedVirtualEntityIds returns a boolean if a field has been set.
func (o *IdpTokenProcessorMapping) HasRestrictedVirtualEntityIds() bool {
	if o != nil && !IsNil(o.RestrictedVirtualEntityIds) {
		return true
	}

	return false
}

// SetRestrictedVirtualEntityIds gets a reference to the given []string and assigns it to the RestrictedVirtualEntityIds field.
func (o *IdpTokenProcessorMapping) SetRestrictedVirtualEntityIds(v []string) {
	o.RestrictedVirtualEntityIds = v
}

// GetAttributeSources returns the AttributeSources field value if set, zero value otherwise.
func (o *IdpTokenProcessorMapping) GetAttributeSources() []AttributeSource {
	if o == nil || IsNil(o.AttributeSources) {
		var ret []AttributeSource
		return ret
	}
	return o.AttributeSources
}

// GetAttributeSourcesOk returns a tuple with the AttributeSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpTokenProcessorMapping) GetAttributeSourcesOk() ([]AttributeSource, bool) {
	if o == nil || IsNil(o.AttributeSources) {
		return nil, false
	}
	return o.AttributeSources, true
}

// HasAttributeSources returns a boolean if a field has been set.
func (o *IdpTokenProcessorMapping) HasAttributeSources() bool {
	if o != nil && !IsNil(o.AttributeSources) {
		return true
	}

	return false
}

// SetAttributeSources gets a reference to the given []AttributeSource and assigns it to the AttributeSources field.
func (o *IdpTokenProcessorMapping) SetAttributeSources(v []AttributeSource) {
	o.AttributeSources = v
}

// GetAttributeContractFulfillment returns the AttributeContractFulfillment field value
func (o *IdpTokenProcessorMapping) GetAttributeContractFulfillment() map[string]AttributeFulfillmentValue {
	if o == nil {
		var ret map[string]AttributeFulfillmentValue
		return ret
	}

	return o.AttributeContractFulfillment
}

// GetAttributeContractFulfillmentOk returns a tuple with the AttributeContractFulfillment field value
// and a boolean to check if the value has been set.
func (o *IdpTokenProcessorMapping) GetAttributeContractFulfillmentOk() (*map[string]AttributeFulfillmentValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeContractFulfillment, true
}

// SetAttributeContractFulfillment sets field value
func (o *IdpTokenProcessorMapping) SetAttributeContractFulfillment(v map[string]AttributeFulfillmentValue) {
	o.AttributeContractFulfillment = v
}

// GetIssuanceCriteria returns the IssuanceCriteria field value if set, zero value otherwise.
func (o *IdpTokenProcessorMapping) GetIssuanceCriteria() IssuanceCriteria {
	if o == nil || IsNil(o.IssuanceCriteria) {
		var ret IssuanceCriteria
		return ret
	}
	return *o.IssuanceCriteria
}

// GetIssuanceCriteriaOk returns a tuple with the IssuanceCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpTokenProcessorMapping) GetIssuanceCriteriaOk() (*IssuanceCriteria, bool) {
	if o == nil || IsNil(o.IssuanceCriteria) {
		return nil, false
	}
	return o.IssuanceCriteria, true
}

// HasIssuanceCriteria returns a boolean if a field has been set.
func (o *IdpTokenProcessorMapping) HasIssuanceCriteria() bool {
	if o != nil && !IsNil(o.IssuanceCriteria) {
		return true
	}

	return false
}

// SetIssuanceCriteria gets a reference to the given IssuanceCriteria and assigns it to the IssuanceCriteria field.
func (o *IdpTokenProcessorMapping) SetIssuanceCriteria(v IssuanceCriteria) {
	o.IssuanceCriteria = &v
}

func (o IdpTokenProcessorMapping) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdpTokenProcessorMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["idpTokenProcessorRef"] = o.IdpTokenProcessorRef
	if !IsNil(o.RestrictedVirtualEntityIds) {
		toSerialize["restrictedVirtualEntityIds"] = o.RestrictedVirtualEntityIds
	}
	if !IsNil(o.AttributeSources) {
		toSerialize["attributeSources"] = o.AttributeSources
	}
	toSerialize["attributeContractFulfillment"] = o.AttributeContractFulfillment
	if !IsNil(o.IssuanceCriteria) {
		toSerialize["issuanceCriteria"] = o.IssuanceCriteria
	}
	return toSerialize, nil
}

type NullableIdpTokenProcessorMapping struct {
	value *IdpTokenProcessorMapping
	isSet bool
}

func (v NullableIdpTokenProcessorMapping) Get() *IdpTokenProcessorMapping {
	return v.value
}

func (v *NullableIdpTokenProcessorMapping) Set(val *IdpTokenProcessorMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableIdpTokenProcessorMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableIdpTokenProcessorMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdpTokenProcessorMapping(val *IdpTokenProcessorMapping) *NullableIdpTokenProcessorMapping {
	return &NullableIdpTokenProcessorMapping{value: val, isSet: true}
}

func (v NullableIdpTokenProcessorMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdpTokenProcessorMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
