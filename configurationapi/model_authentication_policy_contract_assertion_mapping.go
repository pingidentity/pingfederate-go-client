/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AuthenticationPolicyContractAssertionMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationPolicyContractAssertionMapping{}

// AuthenticationPolicyContractAssertionMapping The Authentication Policy Contract Assertion Mapping.
type AuthenticationPolicyContractAssertionMapping struct {
	AuthenticationPolicyContractRef ResourceLink `json:"authenticationPolicyContractRef" tfsdk:"authentication_policy_contract_ref"`
	// Restricts this mapping to specific virtual entity IDs.
	RestrictVirtualEntityIds *bool `json:"restrictVirtualEntityIds,omitempty" tfsdk:"restrict_virtual_entity_ids"`
	// The list of virtual server IDs that this mapping is restricted to.
	RestrictedVirtualEntityIds []string `json:"restrictedVirtualEntityIds,omitempty" tfsdk:"restricted_virtual_entity_ids"`
	// If set to true, SSO transaction will be aborted as a fail-safe when the data-store's attribute mappings fail to complete the attribute contract. Otherwise, the attribute contract with default values is used. By default, this value is false.
	AbortSsoTransactionAsFailSafe *bool `json:"abortSsoTransactionAsFailSafe,omitempty" tfsdk:"abort_sso_transaction_as_fail_safe"`
	// A list of configured data stores to look up attributes from.
	AttributeSources []AttributeSourceAggregation `json:"attributeSources,omitempty" tfsdk:"attribute_sources"`
	// A list of mappings from attribute names to their fulfillment values.
	AttributeContractFulfillment map[string]AttributeFulfillmentValue `json:"attributeContractFulfillment" tfsdk:"attribute_contract_fulfillment"`
	IssuanceCriteria             *IssuanceCriteria                    `json:"issuanceCriteria,omitempty" tfsdk:"issuance_criteria"`
}

type _AuthenticationPolicyContractAssertionMapping AuthenticationPolicyContractAssertionMapping

// NewAuthenticationPolicyContractAssertionMapping instantiates a new AuthenticationPolicyContractAssertionMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationPolicyContractAssertionMapping(authenticationPolicyContractRef ResourceLink, attributeContractFulfillment map[string]AttributeFulfillmentValue) *AuthenticationPolicyContractAssertionMapping {
	this := AuthenticationPolicyContractAssertionMapping{}
	this.AuthenticationPolicyContractRef = authenticationPolicyContractRef
	this.AttributeContractFulfillment = attributeContractFulfillment
	return &this
}

// NewAuthenticationPolicyContractAssertionMappingWithDefaults instantiates a new AuthenticationPolicyContractAssertionMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationPolicyContractAssertionMappingWithDefaults() *AuthenticationPolicyContractAssertionMapping {
	this := AuthenticationPolicyContractAssertionMapping{}
	return &this
}

// GetAuthenticationPolicyContractRef returns the AuthenticationPolicyContractRef field value
func (o *AuthenticationPolicyContractAssertionMapping) GetAuthenticationPolicyContractRef() ResourceLink {
	if o == nil {
		var ret ResourceLink
		return ret
	}

	return o.AuthenticationPolicyContractRef
}

// GetAuthenticationPolicyContractRefOk returns a tuple with the AuthenticationPolicyContractRef field value
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetAuthenticationPolicyContractRefOk() (*ResourceLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationPolicyContractRef, true
}

// SetAuthenticationPolicyContractRef sets field value
func (o *AuthenticationPolicyContractAssertionMapping) SetAuthenticationPolicyContractRef(v ResourceLink) {
	o.AuthenticationPolicyContractRef = v
}

// GetRestrictVirtualEntityIds returns the RestrictVirtualEntityIds field value if set, zero value otherwise.
func (o *AuthenticationPolicyContractAssertionMapping) GetRestrictVirtualEntityIds() bool {
	if o == nil || IsNil(o.RestrictVirtualEntityIds) {
		var ret bool
		return ret
	}
	return *o.RestrictVirtualEntityIds
}

// GetRestrictVirtualEntityIdsOk returns a tuple with the RestrictVirtualEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetRestrictVirtualEntityIdsOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictVirtualEntityIds) {
		return nil, false
	}
	return o.RestrictVirtualEntityIds, true
}

// HasRestrictVirtualEntityIds returns a boolean if a field has been set.
func (o *AuthenticationPolicyContractAssertionMapping) HasRestrictVirtualEntityIds() bool {
	if o != nil && !IsNil(o.RestrictVirtualEntityIds) {
		return true
	}

	return false
}

// SetRestrictVirtualEntityIds gets a reference to the given bool and assigns it to the RestrictVirtualEntityIds field.
func (o *AuthenticationPolicyContractAssertionMapping) SetRestrictVirtualEntityIds(v bool) {
	o.RestrictVirtualEntityIds = &v
}

// GetRestrictedVirtualEntityIds returns the RestrictedVirtualEntityIds field value if set, zero value otherwise.
func (o *AuthenticationPolicyContractAssertionMapping) GetRestrictedVirtualEntityIds() []string {
	if o == nil || IsNil(o.RestrictedVirtualEntityIds) {
		var ret []string
		return ret
	}
	return o.RestrictedVirtualEntityIds
}

// GetRestrictedVirtualEntityIdsOk returns a tuple with the RestrictedVirtualEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetRestrictedVirtualEntityIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RestrictedVirtualEntityIds) {
		return nil, false
	}
	return o.RestrictedVirtualEntityIds, true
}

// HasRestrictedVirtualEntityIds returns a boolean if a field has been set.
func (o *AuthenticationPolicyContractAssertionMapping) HasRestrictedVirtualEntityIds() bool {
	if o != nil && !IsNil(o.RestrictedVirtualEntityIds) {
		return true
	}

	return false
}

// SetRestrictedVirtualEntityIds gets a reference to the given []string and assigns it to the RestrictedVirtualEntityIds field.
func (o *AuthenticationPolicyContractAssertionMapping) SetRestrictedVirtualEntityIds(v []string) {
	o.RestrictedVirtualEntityIds = v
}

// GetAbortSsoTransactionAsFailSafe returns the AbortSsoTransactionAsFailSafe field value if set, zero value otherwise.
func (o *AuthenticationPolicyContractAssertionMapping) GetAbortSsoTransactionAsFailSafe() bool {
	if o == nil || IsNil(o.AbortSsoTransactionAsFailSafe) {
		var ret bool
		return ret
	}
	return *o.AbortSsoTransactionAsFailSafe
}

// GetAbortSsoTransactionAsFailSafeOk returns a tuple with the AbortSsoTransactionAsFailSafe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetAbortSsoTransactionAsFailSafeOk() (*bool, bool) {
	if o == nil || IsNil(o.AbortSsoTransactionAsFailSafe) {
		return nil, false
	}
	return o.AbortSsoTransactionAsFailSafe, true
}

// HasAbortSsoTransactionAsFailSafe returns a boolean if a field has been set.
func (o *AuthenticationPolicyContractAssertionMapping) HasAbortSsoTransactionAsFailSafe() bool {
	if o != nil && !IsNil(o.AbortSsoTransactionAsFailSafe) {
		return true
	}

	return false
}

// SetAbortSsoTransactionAsFailSafe gets a reference to the given bool and assigns it to the AbortSsoTransactionAsFailSafe field.
func (o *AuthenticationPolicyContractAssertionMapping) SetAbortSsoTransactionAsFailSafe(v bool) {
	o.AbortSsoTransactionAsFailSafe = &v
}

// GetAttributeSources returns the AttributeSources field value if set, zero value otherwise.
func (o *AuthenticationPolicyContractAssertionMapping) GetAttributeSources() []AttributeSourceAggregation {
	if o == nil || IsNil(o.AttributeSources) {
		var ret []AttributeSourceAggregation
		return ret
	}
	return o.AttributeSources
}

// GetAttributeSourcesOk returns a tuple with the AttributeSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetAttributeSourcesOk() ([]AttributeSourceAggregation, bool) {
	if o == nil || IsNil(o.AttributeSources) {
		return nil, false
	}
	return o.AttributeSources, true
}

// HasAttributeSources returns a boolean if a field has been set.
func (o *AuthenticationPolicyContractAssertionMapping) HasAttributeSources() bool {
	if o != nil && !IsNil(o.AttributeSources) {
		return true
	}

	return false
}

// SetAttributeSources gets a reference to the given []AttributeSourceAggregation and assigns it to the AttributeSources field.
func (o *AuthenticationPolicyContractAssertionMapping) SetAttributeSources(v []AttributeSourceAggregation) {
	o.AttributeSources = v
}

// GetAttributeContractFulfillment returns the AttributeContractFulfillment field value
func (o *AuthenticationPolicyContractAssertionMapping) GetAttributeContractFulfillment() map[string]AttributeFulfillmentValue {
	if o == nil {
		var ret map[string]AttributeFulfillmentValue
		return ret
	}

	return o.AttributeContractFulfillment
}

// GetAttributeContractFulfillmentOk returns a tuple with the AttributeContractFulfillment field value
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetAttributeContractFulfillmentOk() (*map[string]AttributeFulfillmentValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeContractFulfillment, true
}

// SetAttributeContractFulfillment sets field value
func (o *AuthenticationPolicyContractAssertionMapping) SetAttributeContractFulfillment(v map[string]AttributeFulfillmentValue) {
	o.AttributeContractFulfillment = v
}

// GetIssuanceCriteria returns the IssuanceCriteria field value if set, zero value otherwise.
func (o *AuthenticationPolicyContractAssertionMapping) GetIssuanceCriteria() IssuanceCriteria {
	if o == nil || IsNil(o.IssuanceCriteria) {
		var ret IssuanceCriteria
		return ret
	}
	return *o.IssuanceCriteria
}

// GetIssuanceCriteriaOk returns a tuple with the IssuanceCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationPolicyContractAssertionMapping) GetIssuanceCriteriaOk() (*IssuanceCriteria, bool) {
	if o == nil || IsNil(o.IssuanceCriteria) {
		return nil, false
	}
	return o.IssuanceCriteria, true
}

// HasIssuanceCriteria returns a boolean if a field has been set.
func (o *AuthenticationPolicyContractAssertionMapping) HasIssuanceCriteria() bool {
	if o != nil && !IsNil(o.IssuanceCriteria) {
		return true
	}

	return false
}

// SetIssuanceCriteria gets a reference to the given IssuanceCriteria and assigns it to the IssuanceCriteria field.
func (o *AuthenticationPolicyContractAssertionMapping) SetIssuanceCriteria(v IssuanceCriteria) {
	o.IssuanceCriteria = &v
}

func (o AuthenticationPolicyContractAssertionMapping) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationPolicyContractAssertionMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authenticationPolicyContractRef"] = o.AuthenticationPolicyContractRef
	if !IsNil(o.RestrictVirtualEntityIds) {
		toSerialize["restrictVirtualEntityIds"] = o.RestrictVirtualEntityIds
	}
	if !IsNil(o.RestrictedVirtualEntityIds) {
		toSerialize["restrictedVirtualEntityIds"] = o.RestrictedVirtualEntityIds
	}
	if !IsNil(o.AbortSsoTransactionAsFailSafe) {
		toSerialize["abortSsoTransactionAsFailSafe"] = o.AbortSsoTransactionAsFailSafe
	}
	if !IsNil(o.AttributeSources) {
		toSerialize["attributeSources"] = o.AttributeSources
	}
	toSerialize["attributeContractFulfillment"] = o.AttributeContractFulfillment
	if !IsNil(o.IssuanceCriteria) {
		toSerialize["issuanceCriteria"] = o.IssuanceCriteria
	}
	return toSerialize, nil
}

func (o *AuthenticationPolicyContractAssertionMapping) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authenticationPolicyContractRef",
		"attributeContractFulfillment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationPolicyContractAssertionMapping := _AuthenticationPolicyContractAssertionMapping{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varAuthenticationPolicyContractAssertionMapping)

	if err != nil {
		return err
	}

	*o = AuthenticationPolicyContractAssertionMapping(varAuthenticationPolicyContractAssertionMapping)

	return err
}

type NullableAuthenticationPolicyContractAssertionMapping struct {
	value *AuthenticationPolicyContractAssertionMapping
	isSet bool
}

func (v NullableAuthenticationPolicyContractAssertionMapping) Get() *AuthenticationPolicyContractAssertionMapping {
	return v.value
}

func (v *NullableAuthenticationPolicyContractAssertionMapping) Set(val *AuthenticationPolicyContractAssertionMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationPolicyContractAssertionMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationPolicyContractAssertionMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationPolicyContractAssertionMapping(val *AuthenticationPolicyContractAssertionMapping) *NullableAuthenticationPolicyContractAssertionMapping {
	return &NullableAuthenticationPolicyContractAssertionMapping{value: val, isSet: true}
}

func (v NullableAuthenticationPolicyContractAssertionMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationPolicyContractAssertionMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
