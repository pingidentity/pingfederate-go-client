/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the LocalIdentityField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalIdentityField{}

// LocalIdentityField Local identity profile fields.
type LocalIdentityField struct {
	// The type of the local identity field.
	Type string `json:"type" tfsdk:"type"`
	// Id of the local identity field.
	Id string `json:"id" tfsdk:"id"`
	// Label of the local identity field.
	Label string `json:"label" tfsdk:"label"`
	// Whether this is a registration page field or not.
	RegistrationPageField *bool `json:"registrationPageField,omitempty" tfsdk:"registration_page_field"`
	// Whether this is a profile page field or not.
	ProfilePageField *bool `json:"profilePageField,omitempty" tfsdk:"profile_page_field"`
	// Attributes of the local identity field.
	Attributes *map[string]bool `json:"attributes,omitempty" tfsdk:"attributes"`
}

// NewLocalIdentityField instantiates a new LocalIdentityField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalIdentityField(type_ string, id string, label string) *LocalIdentityField {
	this := LocalIdentityField{}
	this.Type = type_
	this.Id = id
	this.Label = label
	return &this
}

// NewLocalIdentityFieldWithDefaults instantiates a new LocalIdentityField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalIdentityFieldWithDefaults() *LocalIdentityField {
	this := LocalIdentityField{}
	return &this
}

// GetType returns the Type field value
func (o *LocalIdentityField) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LocalIdentityField) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LocalIdentityField) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *LocalIdentityField) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LocalIdentityField) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LocalIdentityField) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *LocalIdentityField) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *LocalIdentityField) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *LocalIdentityField) SetLabel(v string) {
	o.Label = v
}

// GetRegistrationPageField returns the RegistrationPageField field value if set, zero value otherwise.
func (o *LocalIdentityField) GetRegistrationPageField() bool {
	if o == nil || IsNil(o.RegistrationPageField) {
		var ret bool
		return ret
	}
	return *o.RegistrationPageField
}

// GetRegistrationPageFieldOk returns a tuple with the RegistrationPageField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalIdentityField) GetRegistrationPageFieldOk() (*bool, bool) {
	if o == nil || IsNil(o.RegistrationPageField) {
		return nil, false
	}
	return o.RegistrationPageField, true
}

// HasRegistrationPageField returns a boolean if a field has been set.
func (o *LocalIdentityField) HasRegistrationPageField() bool {
	if o != nil && !IsNil(o.RegistrationPageField) {
		return true
	}

	return false
}

// SetRegistrationPageField gets a reference to the given bool and assigns it to the RegistrationPageField field.
func (o *LocalIdentityField) SetRegistrationPageField(v bool) {
	o.RegistrationPageField = &v
}

// GetProfilePageField returns the ProfilePageField field value if set, zero value otherwise.
func (o *LocalIdentityField) GetProfilePageField() bool {
	if o == nil || IsNil(o.ProfilePageField) {
		var ret bool
		return ret
	}
	return *o.ProfilePageField
}

// GetProfilePageFieldOk returns a tuple with the ProfilePageField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalIdentityField) GetProfilePageFieldOk() (*bool, bool) {
	if o == nil || IsNil(o.ProfilePageField) {
		return nil, false
	}
	return o.ProfilePageField, true
}

// HasProfilePageField returns a boolean if a field has been set.
func (o *LocalIdentityField) HasProfilePageField() bool {
	if o != nil && !IsNil(o.ProfilePageField) {
		return true
	}

	return false
}

// SetProfilePageField gets a reference to the given bool and assigns it to the ProfilePageField field.
func (o *LocalIdentityField) SetProfilePageField(v bool) {
	o.ProfilePageField = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *LocalIdentityField) GetAttributes() map[string]bool {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]bool
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalIdentityField) GetAttributesOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *LocalIdentityField) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]bool and assigns it to the Attributes field.
func (o *LocalIdentityField) SetAttributes(v map[string]bool) {
	o.Attributes = &v
}

func (o LocalIdentityField) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalIdentityField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	if !IsNil(o.RegistrationPageField) {
		toSerialize["registrationPageField"] = o.RegistrationPageField
	}
	if !IsNil(o.ProfilePageField) {
		toSerialize["profilePageField"] = o.ProfilePageField
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableLocalIdentityField struct {
	value *LocalIdentityField
	isSet bool
}

func (v NullableLocalIdentityField) Get() *LocalIdentityField {
	return v.value
}

func (v *NullableLocalIdentityField) Set(val *LocalIdentityField) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalIdentityField) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalIdentityField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalIdentityField(val *LocalIdentityField) *NullableLocalIdentityField {
	return &NullableLocalIdentityField{value: val, isSet: true}
}

func (v NullableLocalIdentityField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalIdentityField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
