/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ApplicationSessionPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSessionPolicy{}

// ApplicationSessionPolicy Session controls for user facing PingFederate application endpoints, such as the profile management endpoint.
type ApplicationSessionPolicy struct {
	// The idle timeout period, in minutes. If set to -1, the idle timeout will be set to the maximum timeout. The default is 60.
	IdleTimeoutMins *int64 `json:"idleTimeoutMins,omitempty" tfsdk:"idle_timeout_mins"`
	// The maximum timeout period, in minutes. If set to -1, sessions do not expire. The default is 480.
	MaxTimeoutMins *int64 `json:"maxTimeoutMins,omitempty" tfsdk:"max_timeout_mins"`
}

// NewApplicationSessionPolicy instantiates a new ApplicationSessionPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSessionPolicy() *ApplicationSessionPolicy {
	this := ApplicationSessionPolicy{}
	return &this
}

// NewApplicationSessionPolicyWithDefaults instantiates a new ApplicationSessionPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSessionPolicyWithDefaults() *ApplicationSessionPolicy {
	this := ApplicationSessionPolicy{}
	return &this
}

// GetIdleTimeoutMins returns the IdleTimeoutMins field value if set, zero value otherwise.
func (o *ApplicationSessionPolicy) GetIdleTimeoutMins() int64 {
	if o == nil || IsNil(o.IdleTimeoutMins) {
		var ret int64
		return ret
	}
	return *o.IdleTimeoutMins
}

// GetIdleTimeoutMinsOk returns a tuple with the IdleTimeoutMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSessionPolicy) GetIdleTimeoutMinsOk() (*int64, bool) {
	if o == nil || IsNil(o.IdleTimeoutMins) {
		return nil, false
	}
	return o.IdleTimeoutMins, true
}

// HasIdleTimeoutMins returns a boolean if a field has been set.
func (o *ApplicationSessionPolicy) HasIdleTimeoutMins() bool {
	if o != nil && !IsNil(o.IdleTimeoutMins) {
		return true
	}

	return false
}

// SetIdleTimeoutMins gets a reference to the given int64 and assigns it to the IdleTimeoutMins field.
func (o *ApplicationSessionPolicy) SetIdleTimeoutMins(v int64) {
	o.IdleTimeoutMins = &v
}

// GetMaxTimeoutMins returns the MaxTimeoutMins field value if set, zero value otherwise.
func (o *ApplicationSessionPolicy) GetMaxTimeoutMins() int64 {
	if o == nil || IsNil(o.MaxTimeoutMins) {
		var ret int64
		return ret
	}
	return *o.MaxTimeoutMins
}

// GetMaxTimeoutMinsOk returns a tuple with the MaxTimeoutMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSessionPolicy) GetMaxTimeoutMinsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxTimeoutMins) {
		return nil, false
	}
	return o.MaxTimeoutMins, true
}

// HasMaxTimeoutMins returns a boolean if a field has been set.
func (o *ApplicationSessionPolicy) HasMaxTimeoutMins() bool {
	if o != nil && !IsNil(o.MaxTimeoutMins) {
		return true
	}

	return false
}

// SetMaxTimeoutMins gets a reference to the given int64 and assigns it to the MaxTimeoutMins field.
func (o *ApplicationSessionPolicy) SetMaxTimeoutMins(v int64) {
	o.MaxTimeoutMins = &v
}

func (o ApplicationSessionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSessionPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdleTimeoutMins) {
		toSerialize["idleTimeoutMins"] = o.IdleTimeoutMins
	}
	if !IsNil(o.MaxTimeoutMins) {
		toSerialize["maxTimeoutMins"] = o.MaxTimeoutMins
	}
	return toSerialize, nil
}

type NullableApplicationSessionPolicy struct {
	value *ApplicationSessionPolicy
	isSet bool
}

func (v NullableApplicationSessionPolicy) Get() *ApplicationSessionPolicy {
	return v.value
}

func (v *NullableApplicationSessionPolicy) Set(val *ApplicationSessionPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSessionPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSessionPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSessionPolicy(val *ApplicationSessionPolicy) *NullableApplicationSessionPolicy {
	return &NullableApplicationSessionPolicy{value: val, isSet: true}
}

func (v NullableApplicationSessionPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSessionPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
