/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 12.0.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AdditionalAllowedEntitiesConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdditionalAllowedEntitiesConfiguration{}

// AdditionalAllowedEntitiesConfiguration Additional allowed entities or issuers configuration. Currently only used in OIDC IdP (RP) connection.
type AdditionalAllowedEntitiesConfiguration struct {
	// Set to true to configure additional entities or issuers to be accepted during entity or issuer validation.
	AllowAdditionalEntities *bool `json:"allowAdditionalEntities,omitempty" tfsdk:"allow_additional_entities"`
	// Set to true to accept any entity or issuer during entity or issuer validation. (Not Recommended)
	AllowAllEntities *bool `json:"allowAllEntities,omitempty" tfsdk:"allow_all_entities"`
	// An array of additional allowed entities or issuers to be accepted during entity or issuer validation.
	AdditionalAllowedEntities []Entity `json:"additionalAllowedEntities,omitempty" tfsdk:"additional_allowed_entities"`
}

// NewAdditionalAllowedEntitiesConfiguration instantiates a new AdditionalAllowedEntitiesConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdditionalAllowedEntitiesConfiguration() *AdditionalAllowedEntitiesConfiguration {
	this := AdditionalAllowedEntitiesConfiguration{}
	return &this
}

// NewAdditionalAllowedEntitiesConfigurationWithDefaults instantiates a new AdditionalAllowedEntitiesConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdditionalAllowedEntitiesConfigurationWithDefaults() *AdditionalAllowedEntitiesConfiguration {
	this := AdditionalAllowedEntitiesConfiguration{}
	return &this
}

// GetAllowAdditionalEntities returns the AllowAdditionalEntities field value if set, zero value otherwise.
func (o *AdditionalAllowedEntitiesConfiguration) GetAllowAdditionalEntities() bool {
	if o == nil || IsNil(o.AllowAdditionalEntities) {
		var ret bool
		return ret
	}
	return *o.AllowAdditionalEntities
}

// GetAllowAdditionalEntitiesOk returns a tuple with the AllowAdditionalEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalAllowedEntitiesConfiguration) GetAllowAdditionalEntitiesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAdditionalEntities) {
		return nil, false
	}
	return o.AllowAdditionalEntities, true
}

// HasAllowAdditionalEntities returns a boolean if a field has been set.
func (o *AdditionalAllowedEntitiesConfiguration) HasAllowAdditionalEntities() bool {
	if o != nil && !IsNil(o.AllowAdditionalEntities) {
		return true
	}

	return false
}

// SetAllowAdditionalEntities gets a reference to the given bool and assigns it to the AllowAdditionalEntities field.
func (o *AdditionalAllowedEntitiesConfiguration) SetAllowAdditionalEntities(v bool) {
	o.AllowAdditionalEntities = &v
}

// GetAllowAllEntities returns the AllowAllEntities field value if set, zero value otherwise.
func (o *AdditionalAllowedEntitiesConfiguration) GetAllowAllEntities() bool {
	if o == nil || IsNil(o.AllowAllEntities) {
		var ret bool
		return ret
	}
	return *o.AllowAllEntities
}

// GetAllowAllEntitiesOk returns a tuple with the AllowAllEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalAllowedEntitiesConfiguration) GetAllowAllEntitiesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAllEntities) {
		return nil, false
	}
	return o.AllowAllEntities, true
}

// HasAllowAllEntities returns a boolean if a field has been set.
func (o *AdditionalAllowedEntitiesConfiguration) HasAllowAllEntities() bool {
	if o != nil && !IsNil(o.AllowAllEntities) {
		return true
	}

	return false
}

// SetAllowAllEntities gets a reference to the given bool and assigns it to the AllowAllEntities field.
func (o *AdditionalAllowedEntitiesConfiguration) SetAllowAllEntities(v bool) {
	o.AllowAllEntities = &v
}

// GetAdditionalAllowedEntities returns the AdditionalAllowedEntities field value if set, zero value otherwise.
func (o *AdditionalAllowedEntitiesConfiguration) GetAdditionalAllowedEntities() []Entity {
	if o == nil || IsNil(o.AdditionalAllowedEntities) {
		var ret []Entity
		return ret
	}
	return o.AdditionalAllowedEntities
}

// GetAdditionalAllowedEntitiesOk returns a tuple with the AdditionalAllowedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalAllowedEntitiesConfiguration) GetAdditionalAllowedEntitiesOk() ([]Entity, bool) {
	if o == nil || IsNil(o.AdditionalAllowedEntities) {
		return nil, false
	}
	return o.AdditionalAllowedEntities, true
}

// HasAdditionalAllowedEntities returns a boolean if a field has been set.
func (o *AdditionalAllowedEntitiesConfiguration) HasAdditionalAllowedEntities() bool {
	if o != nil && !IsNil(o.AdditionalAllowedEntities) {
		return true
	}

	return false
}

// SetAdditionalAllowedEntities gets a reference to the given []Entity and assigns it to the AdditionalAllowedEntities field.
func (o *AdditionalAllowedEntitiesConfiguration) SetAdditionalAllowedEntities(v []Entity) {
	o.AdditionalAllowedEntities = v
}

func (o AdditionalAllowedEntitiesConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdditionalAllowedEntitiesConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowAdditionalEntities) {
		toSerialize["allowAdditionalEntities"] = o.AllowAdditionalEntities
	}
	if !IsNil(o.AllowAllEntities) {
		toSerialize["allowAllEntities"] = o.AllowAllEntities
	}
	if !IsNil(o.AdditionalAllowedEntities) {
		toSerialize["additionalAllowedEntities"] = o.AdditionalAllowedEntities
	}
	return toSerialize, nil
}

type NullableAdditionalAllowedEntitiesConfiguration struct {
	value *AdditionalAllowedEntitiesConfiguration
	isSet bool
}

func (v NullableAdditionalAllowedEntitiesConfiguration) Get() *AdditionalAllowedEntitiesConfiguration {
	return v.value
}

func (v *NullableAdditionalAllowedEntitiesConfiguration) Set(val *AdditionalAllowedEntitiesConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAdditionalAllowedEntitiesConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAdditionalAllowedEntitiesConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdditionalAllowedEntitiesConfiguration(val *AdditionalAllowedEntitiesConfiguration) *NullableAdditionalAllowedEntitiesConfiguration {
	return &NullableAdditionalAllowedEntitiesConfiguration{value: val, isSet: true}
}

func (v NullableAdditionalAllowedEntitiesConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdditionalAllowedEntitiesConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
