/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AttributeFulfillmentValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeFulfillmentValue{}

// AttributeFulfillmentValue Defines how an attribute in an attribute contract should be populated.
type AttributeFulfillmentValue struct {
	Source SourceTypeIdKey `json:"source" tfsdk:"source"`
	// The value for this attribute.
	Value string `json:"value" tfsdk:"value"`
}

// NewAttributeFulfillmentValue instantiates a new AttributeFulfillmentValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeFulfillmentValue(source SourceTypeIdKey, value string) *AttributeFulfillmentValue {
	this := AttributeFulfillmentValue{}
	this.Source = source
	this.Value = value
	return &this
}

// NewAttributeFulfillmentValueWithDefaults instantiates a new AttributeFulfillmentValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeFulfillmentValueWithDefaults() *AttributeFulfillmentValue {
	this := AttributeFulfillmentValue{}
	return &this
}

// GetSource returns the Source field value
func (o *AttributeFulfillmentValue) GetSource() SourceTypeIdKey {
	if o == nil {
		var ret SourceTypeIdKey
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *AttributeFulfillmentValue) GetSourceOk() (*SourceTypeIdKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *AttributeFulfillmentValue) SetSource(v SourceTypeIdKey) {
	o.Source = v
}

// GetValue returns the Value field value
func (o *AttributeFulfillmentValue) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AttributeFulfillmentValue) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AttributeFulfillmentValue) SetValue(v string) {
	o.Value = v
}

func (o AttributeFulfillmentValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeFulfillmentValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableAttributeFulfillmentValue struct {
	value *AttributeFulfillmentValue
	isSet bool
}

func (v NullableAttributeFulfillmentValue) Get() *AttributeFulfillmentValue {
	return v.value
}

func (v *NullableAttributeFulfillmentValue) Set(val *AttributeFulfillmentValue) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeFulfillmentValue) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeFulfillmentValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeFulfillmentValue(val *AttributeFulfillmentValue) *NullableAttributeFulfillmentValue {
	return &NullableAttributeFulfillmentValue{value: val, isSet: true}
}

func (v NullableAttributeFulfillmentValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeFulfillmentValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
