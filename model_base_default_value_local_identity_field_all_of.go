/*
Administrative API Documentation

The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the BaseDefaultValueLocalIdentityFieldAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseDefaultValueLocalIdentityFieldAllOf{}

// BaseDefaultValueLocalIdentityFieldAllOf Holds fields that are shared by all default value type fields.
type BaseDefaultValueLocalIdentityFieldAllOf struct {
	// The default value for this field.
	DefaultValue *string `json:"defaultValue,omitempty"`
}

// NewBaseDefaultValueLocalIdentityFieldAllOf instantiates a new BaseDefaultValueLocalIdentityFieldAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseDefaultValueLocalIdentityFieldAllOf() *BaseDefaultValueLocalIdentityFieldAllOf {
	this := BaseDefaultValueLocalIdentityFieldAllOf{}
	return &this
}

// NewBaseDefaultValueLocalIdentityFieldAllOfWithDefaults instantiates a new BaseDefaultValueLocalIdentityFieldAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseDefaultValueLocalIdentityFieldAllOfWithDefaults() *BaseDefaultValueLocalIdentityFieldAllOf {
	this := BaseDefaultValueLocalIdentityFieldAllOf{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *BaseDefaultValueLocalIdentityFieldAllOf) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseDefaultValueLocalIdentityFieldAllOf) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *BaseDefaultValueLocalIdentityFieldAllOf) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *BaseDefaultValueLocalIdentityFieldAllOf) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

func (o BaseDefaultValueLocalIdentityFieldAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseDefaultValueLocalIdentityFieldAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	return toSerialize, nil
}

type NullableBaseDefaultValueLocalIdentityFieldAllOf struct {
	value *BaseDefaultValueLocalIdentityFieldAllOf
	isSet bool
}

func (v NullableBaseDefaultValueLocalIdentityFieldAllOf) Get() *BaseDefaultValueLocalIdentityFieldAllOf {
	return v.value
}

func (v *NullableBaseDefaultValueLocalIdentityFieldAllOf) Set(val *BaseDefaultValueLocalIdentityFieldAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseDefaultValueLocalIdentityFieldAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseDefaultValueLocalIdentityFieldAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseDefaultValueLocalIdentityFieldAllOf(val *BaseDefaultValueLocalIdentityFieldAllOf) *NullableBaseDefaultValueLocalIdentityFieldAllOf {
	return &NullableBaseDefaultValueLocalIdentityFieldAllOf{value: val, isSet: true}
}

func (v NullableBaseDefaultValueLocalIdentityFieldAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseDefaultValueLocalIdentityFieldAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
